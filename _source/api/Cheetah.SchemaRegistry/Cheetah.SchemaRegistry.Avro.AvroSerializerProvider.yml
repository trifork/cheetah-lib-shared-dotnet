### YamlMime:ManagedReference
items:
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  commentId: T:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  id: AvroSerializerProvider
  parent: Cheetah.SchemaRegistry.Avro
  children:
  - Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  - Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  - Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer``1
  - Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer``1
  - Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer``1
  - Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer``1
  langs:
  - csharp
  - vb
  name: AvroSerializerProvider
  nameWithType: AvroSerializerProvider
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  type: Class
  source:
    remote:
      path: src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: AvroSerializerProvider
    path: ../src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
    startLine: 13
  assemblies:
  - Cheetah.SchemaRegistry
  namespace: Cheetah.SchemaRegistry.Avro
  summary: Provides an implementation of <xref href="Cheetah.Kafka.Serdes.ISerializerProvider" data-throw-if-not-resolved="false"></xref> for Avro serialization.
  example: []
  syntax:
    content: 'public class AvroSerializerProvider : ISerializerProvider'
    content.vb: Public Class AvroSerializerProvider Implements ISerializerProvider
  inheritance:
  - System.Object
  implements:
  - Cheetah.Kafka.Serdes.ISerializerProvider
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  id: FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  parent: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  langs:
  - csharp
  - vb
  name: FromServices(AvroSerializerConfig?)
  nameWithType: AvroSerializerProvider.FromServices(AvroSerializerConfig?)
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig?)
  type: Method
  source:
    remote:
      path: src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: FromServices
    path: ../src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
    startLine: 23
  assemblies:
  - Cheetah.SchemaRegistry
  namespace: Cheetah.SchemaRegistry.Avro
  summary: Creates an instance of <xref href="Cheetah.SchemaRegistry.Avro.AvroSerializerProvider" data-throw-if-not-resolved="false"></xref> from services.
  example: []
  syntax:
    content: public static Func<IServiceProvider, AvroSerializerProvider> FromServices(AvroSerializerConfig? serializerConfig = null)
    parameters:
    - id: serializerConfig
      type: Confluent.SchemaRegistry.Serdes.AvroSerializerConfig
      description: Optional Avro serializer configuration.
    return:
      type: System.Func{System.IServiceProvider,Cheetah.SchemaRegistry.Avro.AvroSerializerProvider}
      description: A function that creates an <xref href="Cheetah.SchemaRegistry.Avro.AvroSerializerProvider" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Function FromServices(serializerConfig As AvroSerializerConfig = Nothing) As Func(Of IServiceProvider, AvroSerializerProvider)
  overload: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices*
  nameWithType.vb: AvroSerializerProvider.FromServices(AvroSerializerConfig)
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  name.vb: FromServices(AvroSerializerConfig)
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  id: '#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)'
  parent: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  langs:
  - csharp
  - vb
  name: AvroSerializerProvider(ISchemaRegistryClient, AvroSerializerConfig?)
  nameWithType: AvroSerializerProvider.AvroSerializerProvider(ISchemaRegistryClient, AvroSerializerConfig?)
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.AvroSerializerProvider(Confluent.SchemaRegistry.ISchemaRegistryClient, Confluent.SchemaRegistry.Serdes.AvroSerializerConfig?)
  type: Constructor
  source:
    remote:
      path: src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: .ctor
    path: ../src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
    startLine: 33
  assemblies:
  - Cheetah.SchemaRegistry
  namespace: Cheetah.SchemaRegistry.Avro
  summary: Initializes a new instance of the <xref href="Cheetah.SchemaRegistry.Avro.AvroSerializerProvider" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public AvroSerializerProvider(ISchemaRegistryClient schemaRegistryClient, AvroSerializerConfig? serializerConfig = null)
    parameters:
    - id: schemaRegistryClient
      type: Confluent.SchemaRegistry.ISchemaRegistryClient
      description: The Schema Registry client.
    - id: serializerConfig
      type: Confluent.SchemaRegistry.Serdes.AvroSerializerConfig
      description: Optional Avro serializer configuration.
    content.vb: Public Sub New(schemaRegistryClient As ISchemaRegistryClient, serializerConfig As AvroSerializerConfig = Nothing)
  overload: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor*
  nameWithType.vb: AvroSerializerProvider.New(ISchemaRegistryClient, AvroSerializerConfig)
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.New(Confluent.SchemaRegistry.ISchemaRegistryClient, Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  name.vb: New(ISchemaRegistryClient, AvroSerializerConfig)
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer``1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer``1
  id: GetValueSerializer``1
  parent: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  langs:
  - csharp
  - vb
  name: GetValueSerializer<T>()
  nameWithType: AvroSerializerProvider.GetValueSerializer<T>()
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer<T>()
  type: Method
  source:
    remote:
      path: src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: GetValueSerializer
    path: ../src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
    startLine: 44
  assemblies:
  - Cheetah.SchemaRegistry
  namespace: Cheetah.SchemaRegistry.Avro
  summary: Gets a serializer for the specified type using Avro serialization.
  example: []
  syntax:
    content: public ISerializer<T> GetValueSerializer<T>()
    typeParameters:
    - id: T
      description: The type of object to serialize.
    return:
      type: Confluent.Kafka.ISerializer{{T}}
      description: An instance of <xref href="Confluent.SchemaRegistry.Serdes.AvroSerializer%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetValueSerializer(Of T)() As ISerializer(Of T)
  overload: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer*
  implements:
  - Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer``1
  nameWithType.vb: AvroSerializerProvider.GetValueSerializer(Of T)()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer(Of T)()
  name.vb: GetValueSerializer(Of T)()
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer``1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer``1
  id: GetKeySerializer``1
  parent: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  langs:
  - csharp
  - vb
  name: GetKeySerializer<T>()
  nameWithType: AvroSerializerProvider.GetKeySerializer<T>()
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer<T>()
  type: Method
  source:
    remote:
      path: src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: GetKeySerializer
    path: ../src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
    startLine: 54
  assemblies:
  - Cheetah.SchemaRegistry
  namespace: Cheetah.SchemaRegistry.Avro
  summary: Gets a serializer for the specified type using Avro serialization.
  example: []
  syntax:
    content: public ISerializer<T> GetKeySerializer<T>()
    typeParameters:
    - id: T
      description: The type of object to serialize.
    return:
      type: Confluent.Kafka.ISerializer{{T}}
      description: An instance of <xref href="Confluent.SchemaRegistry.Serdes.AvroSerializer%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetKeySerializer(Of T)() As ISerializer(Of T)
  overload: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer*
  implements:
  - Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer``1
  nameWithType.vb: AvroSerializerProvider.GetKeySerializer(Of T)()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer(Of T)()
  name.vb: GetKeySerializer(Of T)()
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer``1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer``1
  id: GetValueDeserializer``1
  parent: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  langs:
  - csharp
  - vb
  name: GetValueDeserializer<T>()
  nameWithType: AvroSerializerProvider.GetValueDeserializer<T>()
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer<T>()
  type: Method
  source:
    remote:
      path: src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: GetValueDeserializer
    path: ../src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
    startLine: 64
  assemblies:
  - Cheetah.SchemaRegistry
  namespace: Cheetah.SchemaRegistry.Avro
  summary: Gets a deserializer for the specified type using Avro serialization.
  example: []
  syntax:
    content: public IDeserializer<T> GetValueDeserializer<T>()
    typeParameters:
    - id: T
      description: The type of object to deserialize.
    return:
      type: Confluent.Kafka.IDeserializer{{T}}
      description: An instance of <xref href="Confluent.SchemaRegistry.Serdes.AvroDeserializer%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetValueDeserializer(Of T)() As IDeserializer(Of T)
  overload: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer*
  nameWithType.vb: AvroSerializerProvider.GetValueDeserializer(Of T)()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer(Of T)()
  name.vb: GetValueDeserializer(Of T)()
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer``1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer``1
  id: GetKeyDeserializer``1
  parent: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  langs:
  - csharp
  - vb
  name: GetKeyDeserializer<T>()
  nameWithType: AvroSerializerProvider.GetKeyDeserializer<T>()
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer<T>()
  type: Method
  source:
    remote:
      path: src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: GetKeyDeserializer
    path: ../src/Cheetah.SchemaRegistry/AvroSerializerProvider.cs
    startLine: 74
  assemblies:
  - Cheetah.SchemaRegistry
  namespace: Cheetah.SchemaRegistry.Avro
  summary: Gets a deserializer for the specified type using Avro serialization.
  example: []
  syntax:
    content: public IDeserializer<T> GetKeyDeserializer<T>()
    typeParameters:
    - id: T
      description: The type of object to deserialize.
    return:
      type: Confluent.Kafka.IDeserializer{{T}}
      description: An instance of <xref href="Confluent.SchemaRegistry.Serdes.AvroDeserializer%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetKeyDeserializer(Of T)() As IDeserializer(Of T)
  overload: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer*
  nameWithType.vb: AvroSerializerProvider.GetKeyDeserializer(Of T)()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer(Of T)()
  name.vb: GetKeyDeserializer(Of T)()
references:
- uid: Cheetah.Kafka.Serdes.ISerializerProvider
  commentId: T:Cheetah.Kafka.Serdes.ISerializerProvider
  parent: Cheetah.Kafka.Serdes
  name: ISerializerProvider
  nameWithType: ISerializerProvider
  fullName: Cheetah.Kafka.Serdes.ISerializerProvider
- uid: Cheetah.SchemaRegistry.Avro
  commentId: N:Cheetah.SchemaRegistry.Avro
  href: Cheetah.html
  name: Cheetah.SchemaRegistry.Avro
  nameWithType: Cheetah.SchemaRegistry.Avro
  fullName: Cheetah.SchemaRegistry.Avro
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.SchemaRegistry
    name: SchemaRegistry
    href: Cheetah.SchemaRegistry.html
  - name: .
  - uid: Cheetah.SchemaRegistry.Avro
    name: Avro
    href: Cheetah.SchemaRegistry.Avro.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.SchemaRegistry
    name: SchemaRegistry
    href: Cheetah.SchemaRegistry.html
  - name: .
  - uid: Cheetah.SchemaRegistry.Avro
    name: Avro
    href: Cheetah.SchemaRegistry.Avro.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Cheetah.Kafka.Serdes
  commentId: N:Cheetah.Kafka.Serdes
  name: Cheetah.Kafka.Serdes
  nameWithType: Cheetah.Kafka.Serdes
  fullName: Cheetah.Kafka.Serdes
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
  - name: .
  - uid: Cheetah.Kafka.Serdes
    name: Serdes
  spec.vb:
  - uid: Cheetah
    name: Cheetah
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
  - name: .
  - uid: Cheetah.Kafka.Serdes
    name: Serdes
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  commentId: T:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  href: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html
  name: AvroSerializerProvider
  nameWithType: AvroSerializerProvider
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices*
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices
  href: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_FromServices_Confluent_SchemaRegistry_Serdes_AvroSerializerConfig_
  name: FromServices
  nameWithType: AvroSerializerProvider.FromServices
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices
- uid: Confluent.SchemaRegistry.Serdes.AvroSerializerConfig
  commentId: T:Confluent.SchemaRegistry.Serdes.AvroSerializerConfig
  parent: Confluent.SchemaRegistry.Serdes
  isExternal: true
  name: AvroSerializerConfig
  nameWithType: AvroSerializerConfig
  fullName: Confluent.SchemaRegistry.Serdes.AvroSerializerConfig
- uid: System.Func{System.IServiceProvider,Cheetah.SchemaRegistry.Avro.AvroSerializerProvider}
  commentId: T:System.Func{System.IServiceProvider,Cheetah.SchemaRegistry.Avro.AvroSerializerProvider}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IServiceProvider, AvroSerializerProvider>
  nameWithType: Func<IServiceProvider, AvroSerializerProvider>
  fullName: System.Func<System.IServiceProvider, Cheetah.SchemaRegistry.Avro.AvroSerializerProvider>
  nameWithType.vb: Func(Of IServiceProvider, AvroSerializerProvider)
  fullName.vb: System.Func(Of System.IServiceProvider, Cheetah.SchemaRegistry.Avro.AvroSerializerProvider)
  name.vb: Func(Of IServiceProvider, AvroSerializerProvider)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
    name: AvroSerializerProvider
    href: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
    name: AvroSerializerProvider
    href: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html
  - name: )
- uid: Confluent.SchemaRegistry.Serdes
  commentId: N:Confluent.SchemaRegistry.Serdes
  isExternal: true
  name: Confluent.SchemaRegistry.Serdes
  nameWithType: Confluent.SchemaRegistry.Serdes
  fullName: Confluent.SchemaRegistry.Serdes
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.SchemaRegistry
    name: SchemaRegistry
    isExternal: true
  - name: .
  - uid: Confluent.SchemaRegistry.Serdes
    name: Serdes
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.SchemaRegistry
    name: SchemaRegistry
    isExternal: true
  - name: .
  - uid: Confluent.SchemaRegistry.Serdes
    name: Serdes
    isExternal: true
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor*
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor
  href: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider__ctor_Confluent_SchemaRegistry_ISchemaRegistryClient_Confluent_SchemaRegistry_Serdes_AvroSerializerConfig_
  name: AvroSerializerProvider
  nameWithType: AvroSerializerProvider.AvroSerializerProvider
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.AvroSerializerProvider
  nameWithType.vb: AvroSerializerProvider.New
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.New
  name.vb: New
- uid: Confluent.SchemaRegistry.ISchemaRegistryClient
  commentId: T:Confluent.SchemaRegistry.ISchemaRegistryClient
  parent: Confluent.SchemaRegistry
  isExternal: true
  name: ISchemaRegistryClient
  nameWithType: ISchemaRegistryClient
  fullName: Confluent.SchemaRegistry.ISchemaRegistryClient
- uid: Confluent.SchemaRegistry
  commentId: N:Confluent.SchemaRegistry
  isExternal: true
  name: Confluent.SchemaRegistry
  nameWithType: Confluent.SchemaRegistry
  fullName: Confluent.SchemaRegistry
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.SchemaRegistry
    name: SchemaRegistry
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.SchemaRegistry
    name: SchemaRegistry
    isExternal: true
- uid: Confluent.SchemaRegistry.Serdes.AvroSerializer`1
  commentId: T:Confluent.SchemaRegistry.Serdes.AvroSerializer`1
  isExternal: true
  name: AvroSerializer<T>
  nameWithType: AvroSerializer<T>
  fullName: Confluent.SchemaRegistry.Serdes.AvroSerializer<T>
  nameWithType.vb: AvroSerializer(Of T)
  fullName.vb: Confluent.SchemaRegistry.Serdes.AvroSerializer(Of T)
  name.vb: AvroSerializer(Of T)
  spec.csharp:
  - uid: Confluent.SchemaRegistry.Serdes.AvroSerializer`1
    name: AvroSerializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.SchemaRegistry.Serdes.AvroSerializer`1
    name: AvroSerializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer*
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer
  href: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetValueSerializer__1
  name: GetValueSerializer
  nameWithType: AvroSerializerProvider.GetValueSerializer
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer
- uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer``1
  commentId: M:Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer``1
  parent: Cheetah.Kafka.Serdes.ISerializerProvider
  name: GetValueSerializer<T>()
  nameWithType: ISerializerProvider.GetValueSerializer<T>()
  fullName: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer<T>()
  nameWithType.vb: ISerializerProvider.GetValueSerializer(Of T)()
  fullName.vb: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer(Of T)()
  name.vb: GetValueSerializer(Of T)()
  spec.csharp:
  - uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer``1
    name: GetValueSerializer
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer``1
    name: GetValueSerializer
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Confluent.Kafka.ISerializer{{T}}
  commentId: T:Confluent.Kafka.ISerializer{``0}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.ISerializer`1
  name: ISerializer<T>
  nameWithType: ISerializer<T>
  fullName: Confluent.Kafka.ISerializer<T>
  nameWithType.vb: ISerializer(Of T)
  fullName.vb: Confluent.Kafka.ISerializer(Of T)
  name.vb: ISerializer(Of T)
  spec.csharp:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Confluent.Kafka.ISerializer`1
  commentId: T:Confluent.Kafka.ISerializer`1
  isExternal: true
  name: ISerializer<T>
  nameWithType: ISerializer<T>
  fullName: Confluent.Kafka.ISerializer<T>
  nameWithType.vb: ISerializer(Of T)
  fullName.vb: Confluent.Kafka.ISerializer(Of T)
  name.vb: ISerializer(Of T)
  spec.csharp:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Confluent.Kafka
  commentId: N:Confluent.Kafka
  isExternal: true
  name: Confluent.Kafka
  nameWithType: Confluent.Kafka
  fullName: Confluent.Kafka
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer*
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer
  href: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetKeySerializer__1
  name: GetKeySerializer
  nameWithType: AvroSerializerProvider.GetKeySerializer
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer
- uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer``1
  commentId: M:Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer``1
  parent: Cheetah.Kafka.Serdes.ISerializerProvider
  name: GetKeySerializer<T>()
  nameWithType: ISerializerProvider.GetKeySerializer<T>()
  fullName: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer<T>()
  nameWithType.vb: ISerializerProvider.GetKeySerializer(Of T)()
  fullName.vb: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer(Of T)()
  name.vb: GetKeySerializer(Of T)()
  spec.csharp:
  - uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer``1
    name: GetKeySerializer
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer``1
    name: GetKeySerializer
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Confluent.SchemaRegistry.Serdes.AvroDeserializer`1
  commentId: T:Confluent.SchemaRegistry.Serdes.AvroDeserializer`1
  isExternal: true
  name: AvroDeserializer<T>
  nameWithType: AvroDeserializer<T>
  fullName: Confluent.SchemaRegistry.Serdes.AvroDeserializer<T>
  nameWithType.vb: AvroDeserializer(Of T)
  fullName.vb: Confluent.SchemaRegistry.Serdes.AvroDeserializer(Of T)
  name.vb: AvroDeserializer(Of T)
  spec.csharp:
  - uid: Confluent.SchemaRegistry.Serdes.AvroDeserializer`1
    name: AvroDeserializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.SchemaRegistry.Serdes.AvroDeserializer`1
    name: AvroDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer*
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer
  href: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetValueDeserializer__1
  name: GetValueDeserializer
  nameWithType: AvroSerializerProvider.GetValueDeserializer
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer
- uid: Confluent.Kafka.IDeserializer{{T}}
  commentId: T:Confluent.Kafka.IDeserializer{``0}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.IDeserializer`1
  name: IDeserializer<T>
  nameWithType: IDeserializer<T>
  fullName: Confluent.Kafka.IDeserializer<T>
  nameWithType.vb: IDeserializer(Of T)
  fullName.vb: Confluent.Kafka.IDeserializer(Of T)
  name.vb: IDeserializer(Of T)
  spec.csharp:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Confluent.Kafka.IDeserializer`1
  commentId: T:Confluent.Kafka.IDeserializer`1
  isExternal: true
  name: IDeserializer<T>
  nameWithType: IDeserializer<T>
  fullName: Confluent.Kafka.IDeserializer<T>
  nameWithType.vb: IDeserializer(Of T)
  fullName.vb: Confluent.Kafka.IDeserializer(Of T)
  name.vb: IDeserializer(Of T)
  spec.csharp:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer*
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer
  href: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetKeyDeserializer__1
  name: GetKeyDeserializer
  nameWithType: AvroSerializerProvider.GetKeyDeserializer
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer
