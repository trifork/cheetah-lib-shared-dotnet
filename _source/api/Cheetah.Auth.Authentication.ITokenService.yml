### YamlMime:ManagedReference
items:
- uid: Cheetah.Auth.Authentication.ITokenService
  commentId: T:Cheetah.Auth.Authentication.ITokenService
  id: ITokenService
  parent: Cheetah.Auth.Authentication
  children:
  - Cheetah.Auth.Authentication.ITokenService.Dispose
  - Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync(System.Threading.CancellationToken)
  - Cheetah.Auth.Authentication.ITokenService.StartAsync
  langs:
  - csharp
  - vb
  name: ITokenService
  nameWithType: ITokenService
  fullName: Cheetah.Auth.Authentication.ITokenService
  type: Interface
  source:
    remote:
      path: src/Cheetah.Auth/Authentication/ITokenService.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: ITokenService
    path: ../src/Cheetah.Auth/Authentication/ITokenService.cs
    startLine: 8
  assemblies:
  - Cheetah.Auth
  namespace: Cheetah.Auth.Authentication
  summary: Service for retrieving OAuth2 access tokens
  example: []
  syntax:
    content: public interface ITokenService
    content.vb: Public Interface ITokenService
- uid: Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync(System.Threading.CancellationToken)
  commentId: M:Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync(System.Threading.CancellationToken)
  id: RequestAccessTokenAsync(System.Threading.CancellationToken)
  parent: Cheetah.Auth.Authentication.ITokenService
  langs:
  - csharp
  - vb
  name: RequestAccessTokenAsync(CancellationToken)
  nameWithType: ITokenService.RequestAccessTokenAsync(CancellationToken)
  fullName: Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Cheetah.Auth/Authentication/ITokenService.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: RequestAccessTokenAsync
    path: ../src/Cheetah.Auth/Authentication/ITokenService.cs
    startLine: 16
  assemblies:
  - Cheetah.Auth
  namespace: Cheetah.Auth.Authentication
  summary: Request an access token asynchronously.
  example: []
  syntax:
    content: Task<(string AccessToken, long Expiration)> RequestAccessTokenAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64}}
      description: A tuple containing the access token and its absolute expiration in epoch millis
    content.vb: Function RequestAccessTokenAsync(cancellationToken As CancellationToken) As Task(Of (AccessToken As String, Expiration As Long))
  overload: Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync*
- uid: Cheetah.Auth.Authentication.ITokenService.StartAsync
  commentId: M:Cheetah.Auth.Authentication.ITokenService.StartAsync
  id: StartAsync
  parent: Cheetah.Auth.Authentication.ITokenService
  langs:
  - csharp
  - vb
  name: StartAsync()
  nameWithType: ITokenService.StartAsync()
  fullName: Cheetah.Auth.Authentication.ITokenService.StartAsync()
  type: Method
  source:
    remote:
      path: src/Cheetah.Auth/Authentication/ITokenService.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: StartAsync
    path: ../src/Cheetah.Auth/Authentication/ITokenService.cs
    startLine: 25
  assemblies:
  - Cheetah.Auth
  namespace: Cheetah.Auth.Authentication
  summary: >-
    Start the token service.

    IMPORTANT: Before calling RequestAccessToken(), ensure to invoke StartAsync() unless you're utilizing Dependency Injection, where this process is managed by the builder.RunAsync() method.
  example: []
  syntax:
    content: Task StartAsync()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Function StartAsync() As Task
  overload: Cheetah.Auth.Authentication.ITokenService.StartAsync*
- uid: Cheetah.Auth.Authentication.ITokenService.Dispose
  commentId: M:Cheetah.Auth.Authentication.ITokenService.Dispose
  id: Dispose
  parent: Cheetah.Auth.Authentication.ITokenService
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ITokenService.Dispose()
  fullName: Cheetah.Auth.Authentication.ITokenService.Dispose()
  type: Method
  source:
    remote:
      path: src/Cheetah.Auth/Authentication/ITokenService.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: Dispose
    path: ../src/Cheetah.Auth/Authentication/ITokenService.cs
    startLine: 29
  assemblies:
  - Cheetah.Auth
  namespace: Cheetah.Auth.Authentication
  summary: Stop the token service.
  example: []
  syntax:
    content: void Dispose()
    content.vb: Sub Dispose()
  overload: Cheetah.Auth.Authentication.ITokenService.Dispose*
references:
- uid: Cheetah.Auth.Authentication
  commentId: N:Cheetah.Auth.Authentication
  href: Cheetah.html
  name: Cheetah.Auth.Authentication
  nameWithType: Cheetah.Auth.Authentication
  fullName: Cheetah.Auth.Authentication
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Auth
    name: Auth
    href: Cheetah.Auth.html
  - name: .
  - uid: Cheetah.Auth.Authentication
    name: Authentication
    href: Cheetah.Auth.Authentication.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Auth
    name: Auth
    href: Cheetah.Auth.html
  - name: .
  - uid: Cheetah.Auth.Authentication
    name: Authentication
    href: Cheetah.Auth.Authentication.html
- uid: Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync*
  commentId: Overload:Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync
  href: Cheetah.Auth.Authentication.ITokenService.html#Cheetah_Auth_Authentication_ITokenService_RequestAccessTokenAsync_System_Threading_CancellationToken_
  name: RequestAccessTokenAsync
  nameWithType: ITokenService.RequestAccessTokenAsync
  fullName: Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(string AccessToken, long Expiration)>
  nameWithType: Task<(string AccessToken, long Expiration)>
  fullName: System.Threading.Tasks.Task<(string AccessToken, long Expiration)>
  nameWithType.vb: Task(Of (AccessToken As String, Expiration As Long))
  fullName.vb: System.Threading.Tasks.Task(Of (AccessToken As String, Expiration As Long))
  name.vb: Task(Of (AccessToken As String, Expiration As Long))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64}.AccessToken
    name: AccessToken
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64-.accesstoken
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64}.Expiration
    name: Expiration
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64-.expiration
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,System.Int64}.AccessToken
    name: AccessToken
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64-.accesstoken
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64}.Expiration
    name: Expiration
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64-.expiration
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Cheetah.Auth.Authentication.ITokenService.StartAsync*
  commentId: Overload:Cheetah.Auth.Authentication.ITokenService.StartAsync
  href: Cheetah.Auth.Authentication.ITokenService.html#Cheetah_Auth_Authentication_ITokenService_StartAsync
  name: StartAsync
  nameWithType: ITokenService.StartAsync
  fullName: Cheetah.Auth.Authentication.ITokenService.StartAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Cheetah.Auth.Authentication.ITokenService.Dispose*
  commentId: Overload:Cheetah.Auth.Authentication.ITokenService.Dispose
  href: Cheetah.Auth.Authentication.ITokenService.html#Cheetah_Auth_Authentication_ITokenService_Dispose
  name: Dispose
  nameWithType: ITokenService.Dispose
  fullName: Cheetah.Auth.Authentication.ITokenService.Dispose
