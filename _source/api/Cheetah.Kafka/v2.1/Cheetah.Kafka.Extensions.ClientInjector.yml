### YamlMime:ManagedReference
items:
- uid: Cheetah.Kafka.Extensions.ClientInjector
  commentId: T:Cheetah.Kafka.Extensions.ClientInjector
  id: ClientInjector
  parent: Cheetah.Kafka.Extensions
  children:
  - Cheetah.Kafka.Extensions.ClientInjector.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient(System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  - Cheetah.Kafka.Extensions.ClientInjector.WithConsumer``2(System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  - Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient(System.Object,System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  - Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer``2(System.Object,System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  - Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer``2(System.Object,System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  - Cheetah.Kafka.Extensions.ClientInjector.WithProducer``2(System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  langs:
  - csharp
  - vb
  name: ClientInjector
  nameWithType: ClientInjector
  fullName: Cheetah.Kafka.Extensions.ClientInjector
  type: Class
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/ClientInjector.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: ClientInjector
    path: ../src/Cheetah.Kafka/Extensions/ClientInjector.cs
    startLine: 9
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Utility class used to inject Kafka clients into a service collection
  example: []
  syntax:
    content: public class ClientInjector
    content.vb: Public Class ClientInjector
  inheritance:
  - System.Object
- uid: Cheetah.Kafka.Extensions.ClientInjector.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: '#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)'
  parent: Cheetah.Kafka.Extensions.ClientInjector
  langs:
  - csharp
  - vb
  name: ClientInjector(IServiceCollection)
  nameWithType: ClientInjector.ClientInjector(IServiceCollection)
  fullName: Cheetah.Kafka.Extensions.ClientInjector.ClientInjector(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Constructor
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/ClientInjector.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: .ctor
    path: ../src/Cheetah.Kafka/Extensions/ClientInjector.cs
    startLine: 17
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Creates a new instance of <xref href="Cheetah.Kafka.Extensions.ClientInjector" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public ClientInjector(IServiceCollection serviceCollection)
    parameters:
    - id: serviceCollection
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref> to add the services to.
    content.vb: Public Sub New(serviceCollection As IServiceCollection)
  overload: Cheetah.Kafka.Extensions.ClientInjector.#ctor*
  nameWithType.vb: ClientInjector.New(IServiceCollection)
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.New(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: New(IServiceCollection)
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithProducer``2(System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithProducer``2(System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  id: WithProducer``2(System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  parent: Cheetah.Kafka.Extensions.ClientInjector
  langs:
  - csharp
  - vb
  name: WithProducer<TKey, TValue>(Action<ProducerOptionsBuilder<TKey, TValue>>?)
  nameWithType: ClientInjector.WithProducer<TKey, TValue>(Action<ProducerOptionsBuilder<TKey, TValue>>?)
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithProducer<TKey, TValue>(System.Action<Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>>?)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/ClientInjector.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: WithProducer
    path: ../src/Cheetah.Kafka/Extensions/ClientInjector.cs
    startLine: 29
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Registers a pre-configured <xref href="Confluent.Kafka.IProducer%602" data-throw-if-not-resolved="false"></xref>/&gt;
  example: []
  syntax:
    content: public ClientInjector WithProducer<TKey, TValue>(Action<ProducerOptionsBuilder<TKey, TValue>>? configAction = null)
    parameters:
    - id: configAction
      type: System.Action{Cheetah.Kafka.ProducerOptionsBuilder{{TKey},{TValue}}}
      description: Additional configuration that this specific producer should use
    typeParameters:
    - id: TKey
      description: The type of key that the injected producer will produce
    - id: TValue
      description: The type of value that the injected producer will produce
    return:
      type: Cheetah.Kafka.Extensions.ClientInjector
      description: This <xref href="Cheetah.Kafka.Extensions.ClientInjector" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function WithProducer(Of TKey, TValue)(configAction As Action(Of ProducerOptionsBuilder(Of TKey, TValue)) = Nothing) As ClientInjector
  overload: Cheetah.Kafka.Extensions.ClientInjector.WithProducer*
  nameWithType.vb: ClientInjector.WithProducer(Of TKey, TValue)(Action(Of ProducerOptionsBuilder(Of TKey, TValue)))
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithProducer(Of TKey, TValue)(System.Action(Of Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue)))
  name.vb: WithProducer(Of TKey, TValue)(Action(Of ProducerOptionsBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer``2(System.Object,System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer``2(System.Object,System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  id: WithKeyedProducer``2(System.Object,System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  parent: Cheetah.Kafka.Extensions.ClientInjector
  langs:
  - csharp
  - vb
  name: WithKeyedProducer<TKey, TValue>(object?, Action<ProducerOptionsBuilder<TKey, TValue>>?)
  nameWithType: ClientInjector.WithKeyedProducer<TKey, TValue>(object?, Action<ProducerOptionsBuilder<TKey, TValue>>?)
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer<TKey, TValue>(object?, System.Action<Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>>?)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/ClientInjector.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: WithKeyedProducer
    path: ../src/Cheetah.Kafka/Extensions/ClientInjector.cs
    startLine: 43
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Registers a pre-configured, keyed <xref href="Confluent.Kafka.IProducer%602" data-throw-if-not-resolved="false"></xref>/&gt;
  example: []
  syntax:
    content: public ClientInjector WithKeyedProducer<TKey, TValue>(object? key, Action<ProducerOptionsBuilder<TKey, TValue>>? configAction = null)
    parameters:
    - id: key
      type: System.Object
      description: The key that the producer should be registered with
    - id: configAction
      type: System.Action{Cheetah.Kafka.ProducerOptionsBuilder{{TKey},{TValue}}}
      description: Additional configuration that this specific producer should use
    typeParameters:
    - id: TKey
      description: The type of key that the injected producer will produce
    - id: TValue
      description: The type of value that the injected producer will produce
    return:
      type: Cheetah.Kafka.Extensions.ClientInjector
      description: This <xref href="Cheetah.Kafka.Extensions.ClientInjector" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function WithKeyedProducer(Of TKey, TValue)(key As Object, configAction As Action(Of ProducerOptionsBuilder(Of TKey, TValue)) = Nothing) As ClientInjector
  overload: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer*
  nameWithType.vb: ClientInjector.WithKeyedProducer(Of TKey, TValue)(Object, Action(Of ProducerOptionsBuilder(Of TKey, TValue)))
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer(Of TKey, TValue)(Object, System.Action(Of Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue)))
  name.vb: WithKeyedProducer(Of TKey, TValue)(Object, Action(Of ProducerOptionsBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer``2(System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithConsumer``2(System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  id: WithConsumer``2(System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  parent: Cheetah.Kafka.Extensions.ClientInjector
  langs:
  - csharp
  - vb
  name: WithConsumer<TKey, TValue>(Action<ConsumerOptionsBuilder<TKey, TValue>>?)
  nameWithType: ClientInjector.WithConsumer<TKey, TValue>(Action<ConsumerOptionsBuilder<TKey, TValue>>?)
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer<TKey, TValue>(System.Action<Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>>?)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/ClientInjector.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: WithConsumer
    path: ../src/Cheetah.Kafka/Extensions/ClientInjector.cs
    startLine: 56
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Registers a pre-configured <xref href="Confluent.Kafka.IConsumer%602" data-throw-if-not-resolved="false"></xref>/&gt;
  example: []
  syntax:
    content: public ClientInjector WithConsumer<TKey, TValue>(Action<ConsumerOptionsBuilder<TKey, TValue>>? configAction = null)
    parameters:
    - id: configAction
      type: System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{{TKey},{TValue}}}
      description: Additional configuration that this specific consumer should use
    typeParameters:
    - id: TKey
      description: The type of key that the injected consumer will consume
    - id: TValue
      description: The type of value that the injected consumer will consume
    return:
      type: Cheetah.Kafka.Extensions.ClientInjector
      description: This <xref href="Cheetah.Kafka.Extensions.ClientInjector" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function WithConsumer(Of TKey, TValue)(configAction As Action(Of ConsumerOptionsBuilder(Of TKey, TValue)) = Nothing) As ClientInjector
  overload: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer*
  nameWithType.vb: ClientInjector.WithConsumer(Of TKey, TValue)(Action(Of ConsumerOptionsBuilder(Of TKey, TValue)))
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer(Of TKey, TValue)(System.Action(Of Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue)))
  name.vb: WithConsumer(Of TKey, TValue)(Action(Of ConsumerOptionsBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer``2(System.Object,System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer``2(System.Object,System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  id: WithKeyedConsumer``2(System.Object,System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  parent: Cheetah.Kafka.Extensions.ClientInjector
  langs:
  - csharp
  - vb
  name: WithKeyedConsumer<TKey, TValue>(object?, Action<ConsumerOptionsBuilder<TKey, TValue>>?)
  nameWithType: ClientInjector.WithKeyedConsumer<TKey, TValue>(object?, Action<ConsumerOptionsBuilder<TKey, TValue>>?)
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer<TKey, TValue>(object?, System.Action<Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>>?)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/ClientInjector.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: WithKeyedConsumer
    path: ../src/Cheetah.Kafka/Extensions/ClientInjector.cs
    startLine: 70
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Registers a pre-configured, keyed <xref href="Confluent.Kafka.IConsumer%602" data-throw-if-not-resolved="false"></xref>/&gt;
  example: []
  syntax:
    content: public ClientInjector WithKeyedConsumer<TKey, TValue>(object? key, Action<ConsumerOptionsBuilder<TKey, TValue>>? configAction = null)
    parameters:
    - id: key
      type: System.Object
      description: The key that the consumer should be registered with
    - id: configAction
      type: System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{{TKey},{TValue}}}
      description: Additional configuration that this specific consumer should use
    typeParameters:
    - id: TKey
      description: The type of key that the injected consumer will consume
    - id: TValue
      description: The type of value that the injected consumer will consume
    return:
      type: Cheetah.Kafka.Extensions.ClientInjector
      description: This <xref href="Cheetah.Kafka.Extensions.ClientInjector" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function WithKeyedConsumer(Of TKey, TValue)(key As Object, configAction As Action(Of ConsumerOptionsBuilder(Of TKey, TValue)) = Nothing) As ClientInjector
  overload: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer*
  nameWithType.vb: ClientInjector.WithKeyedConsumer(Of TKey, TValue)(Object, Action(Of ConsumerOptionsBuilder(Of TKey, TValue)))
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer(Of TKey, TValue)(Object, System.Action(Of Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue)))
  name.vb: WithKeyedConsumer(Of TKey, TValue)(Object, Action(Of ConsumerOptionsBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient(System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient(System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  id: WithAdminClient(System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  parent: Cheetah.Kafka.Extensions.ClientInjector
  langs:
  - csharp
  - vb
  name: WithAdminClient(Action<AdminClientOptionsBuilder>?)
  nameWithType: ClientInjector.WithAdminClient(Action<AdminClientOptionsBuilder>?)
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient(System.Action<Cheetah.Kafka.AdminClientOptionsBuilder>?)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/ClientInjector.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: WithAdminClient
    path: ../src/Cheetah.Kafka/Extensions/ClientInjector.cs
    startLine: 81
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Registers a pre-configured <xref href="Confluent.Kafka.IAdminClient" data-throw-if-not-resolved="false"></xref>/&gt;
  example: []
  syntax:
    content: public ClientInjector WithAdminClient(Action<AdminClientOptionsBuilder>? configAction = null)
    parameters:
    - id: configAction
      type: System.Action{Cheetah.Kafka.AdminClientOptionsBuilder}
      description: Additional configuration that this specific admin client should use
    return:
      type: Cheetah.Kafka.Extensions.ClientInjector
      description: This <xref href="Cheetah.Kafka.Extensions.ClientInjector" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function WithAdminClient(configAction As Action(Of AdminClientOptionsBuilder) = Nothing) As ClientInjector
  overload: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient*
  nameWithType.vb: ClientInjector.WithAdminClient(Action(Of AdminClientOptionsBuilder))
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient(System.Action(Of Cheetah.Kafka.AdminClientOptionsBuilder))
  name.vb: WithAdminClient(Action(Of AdminClientOptionsBuilder))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient(System.Object,System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient(System.Object,System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  id: WithKeyedAdminClient(System.Object,System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  parent: Cheetah.Kafka.Extensions.ClientInjector
  langs:
  - csharp
  - vb
  name: WithKeyedAdminClient(object?, Action<AdminClientOptionsBuilder>?)
  nameWithType: ClientInjector.WithKeyedAdminClient(object?, Action<AdminClientOptionsBuilder>?)
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient(object?, System.Action<Cheetah.Kafka.AdminClientOptionsBuilder>?)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/ClientInjector.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: WithKeyedAdminClient
    path: ../src/Cheetah.Kafka/Extensions/ClientInjector.cs
    startLine: 93
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Registers a pre-configured <xref href="Confluent.Kafka.IAdminClient" data-throw-if-not-resolved="false"></xref>/&gt;
  example: []
  syntax:
    content: public ClientInjector WithKeyedAdminClient(object? key, Action<AdminClientOptionsBuilder>? configAction = null)
    parameters:
    - id: key
      type: System.Object
      description: The key that the admin client should be registered with
    - id: configAction
      type: System.Action{Cheetah.Kafka.AdminClientOptionsBuilder}
      description: Additional configuration that this specific admin client should use
    return:
      type: Cheetah.Kafka.Extensions.ClientInjector
      description: This <xref href="Cheetah.Kafka.Extensions.ClientInjector" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function WithKeyedAdminClient(key As Object, configAction As Action(Of AdminClientOptionsBuilder) = Nothing) As ClientInjector
  overload: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient*
  nameWithType.vb: ClientInjector.WithKeyedAdminClient(Object, Action(Of AdminClientOptionsBuilder))
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient(Object, System.Action(Of Cheetah.Kafka.AdminClientOptionsBuilder))
  name.vb: WithKeyedAdminClient(Object, Action(Of AdminClientOptionsBuilder))
references:
- uid: Cheetah.Kafka.Extensions
  commentId: N:Cheetah.Kafka.Extensions
  href: Cheetah.html
  name: Cheetah.Kafka.Extensions
  nameWithType: Cheetah.Kafka.Extensions
  fullName: Cheetah.Kafka.Extensions
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  - name: .
  - uid: Cheetah.Kafka.Extensions
    name: Extensions
    href: Cheetah.Kafka.Extensions.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  - name: .
  - uid: Cheetah.Kafka.Extensions
    name: Extensions
    href: Cheetah.Kafka.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Cheetah.Kafka.Extensions.ClientInjector
  commentId: T:Cheetah.Kafka.Extensions.ClientInjector
  parent: Cheetah.Kafka.Extensions
  href: Cheetah.Kafka.Extensions.ClientInjector.html
  name: ClientInjector
  nameWithType: ClientInjector
  fullName: Cheetah.Kafka.Extensions.ClientInjector
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicecollection
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Cheetah.Kafka.Extensions.ClientInjector.#ctor*
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.#ctor
  href: Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector__ctor_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  name: ClientInjector
  nameWithType: ClientInjector.ClientInjector
  fullName: Cheetah.Kafka.Extensions.ClientInjector.ClientInjector
  nameWithType.vb: ClientInjector.New
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.New
  name.vb: New
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: Confluent.Kafka.IProducer`2
  commentId: T:Confluent.Kafka.IProducer`2
  isExternal: true
  name: IProducer<TKey, TValue>
  nameWithType: IProducer<TKey, TValue>
  fullName: Confluent.Kafka.IProducer<TKey, TValue>
  nameWithType.vb: IProducer(Of TKey, TValue)
  fullName.vb: Confluent.Kafka.IProducer(Of TKey, TValue)
  name.vb: IProducer(Of TKey, TValue)
  spec.csharp:
  - uid: Confluent.Kafka.IProducer`2
    name: IProducer
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IProducer`2
    name: IProducer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithProducer*
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithProducer
  href: Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithProducer__2_System_Action_Cheetah_Kafka_ProducerOptionsBuilder___0___1___
  name: WithProducer
  nameWithType: ClientInjector.WithProducer
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithProducer
- uid: System.Action{Cheetah.Kafka.ProducerOptionsBuilder{{TKey},{TValue}}}
  commentId: T:System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ProducerOptionsBuilder<TKey, TValue>>
  nameWithType: Action<ProducerOptionsBuilder<TKey, TValue>>
  fullName: System.Action<Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>>
  nameWithType.vb: Action(Of ProducerOptionsBuilder(Of TKey, TValue))
  fullName.vb: System.Action(Of Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue))
  name.vb: Action(Of ProducerOptionsBuilder(Of TKey, TValue))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Cheetah.Kafka.ProducerOptionsBuilder`2
    name: ProducerOptionsBuilder
    href: Cheetah.Kafka.ProducerOptionsBuilder-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Cheetah.Kafka.ProducerOptionsBuilder`2
    name: ProducerOptionsBuilder
    href: Cheetah.Kafka.ProducerOptionsBuilder-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer*
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer
  href: Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithKeyedProducer__2_System_Object_System_Action_Cheetah_Kafka_ProducerOptionsBuilder___0___1___
  name: WithKeyedProducer
  nameWithType: ClientInjector.WithKeyedProducer
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer
- uid: Confluent.Kafka.IConsumer`2
  commentId: T:Confluent.Kafka.IConsumer`2
  isExternal: true
  name: IConsumer<TKey, TValue>
  nameWithType: IConsumer<TKey, TValue>
  fullName: Confluent.Kafka.IConsumer<TKey, TValue>
  nameWithType.vb: IConsumer(Of TKey, TValue)
  fullName.vb: Confluent.Kafka.IConsumer(Of TKey, TValue)
  name.vb: IConsumer(Of TKey, TValue)
  spec.csharp:
  - uid: Confluent.Kafka.IConsumer`2
    name: IConsumer
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IConsumer`2
    name: IConsumer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer*
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithConsumer
  href: Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithConsumer__2_System_Action_Cheetah_Kafka_ConsumerOptionsBuilder___0___1___
  name: WithConsumer
  nameWithType: ClientInjector.WithConsumer
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer
- uid: System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{{TKey},{TValue}}}
  commentId: T:System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ConsumerOptionsBuilder<TKey, TValue>>
  nameWithType: Action<ConsumerOptionsBuilder<TKey, TValue>>
  fullName: System.Action<Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>>
  nameWithType.vb: Action(Of ConsumerOptionsBuilder(Of TKey, TValue))
  fullName.vb: System.Action(Of Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue))
  name.vb: Action(Of ConsumerOptionsBuilder(Of TKey, TValue))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Cheetah.Kafka.ConsumerOptionsBuilder`2
    name: ConsumerOptionsBuilder
    href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Cheetah.Kafka.ConsumerOptionsBuilder`2
    name: ConsumerOptionsBuilder
    href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer*
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer
  href: Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithKeyedConsumer__2_System_Object_System_Action_Cheetah_Kafka_ConsumerOptionsBuilder___0___1___
  name: WithKeyedConsumer
  nameWithType: ClientInjector.WithKeyedConsumer
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer
- uid: Confluent.Kafka.IAdminClient
  commentId: T:Confluent.Kafka.IAdminClient
  parent: Confluent.Kafka
  isExternal: true
  name: IAdminClient
  nameWithType: IAdminClient
  fullName: Confluent.Kafka.IAdminClient
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient*
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient
  href: Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithAdminClient_System_Action_Cheetah_Kafka_AdminClientOptionsBuilder__
  name: WithAdminClient
  nameWithType: ClientInjector.WithAdminClient
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient
- uid: System.Action{Cheetah.Kafka.AdminClientOptionsBuilder}
  commentId: T:System.Action{Cheetah.Kafka.AdminClientOptionsBuilder}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<AdminClientOptionsBuilder>
  nameWithType: Action<AdminClientOptionsBuilder>
  fullName: System.Action<Cheetah.Kafka.AdminClientOptionsBuilder>
  nameWithType.vb: Action(Of AdminClientOptionsBuilder)
  fullName.vb: System.Action(Of Cheetah.Kafka.AdminClientOptionsBuilder)
  name.vb: Action(Of AdminClientOptionsBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Cheetah.Kafka.AdminClientOptionsBuilder
    name: AdminClientOptionsBuilder
    href: Cheetah.Kafka.AdminClientOptionsBuilder.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Cheetah.Kafka.AdminClientOptionsBuilder
    name: AdminClientOptionsBuilder
    href: Cheetah.Kafka.AdminClientOptionsBuilder.html
  - name: )
- uid: Confluent.Kafka
  commentId: N:Confluent.Kafka
  isExternal: true
  name: Confluent.Kafka
  nameWithType: Confluent.Kafka
  fullName: Confluent.Kafka
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient*
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient
  href: Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithKeyedAdminClient_System_Object_System_Action_Cheetah_Kafka_AdminClientOptionsBuilder__
  name: WithKeyedAdminClient
  nameWithType: ClientInjector.WithKeyedAdminClient
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient
