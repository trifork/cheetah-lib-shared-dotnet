### YamlMime:ManagedReference
items:
- uid: Cheetah.Kafka.ProducerOptions`2
  commentId: T:Cheetah.Kafka.ProducerOptions`2
  id: ProducerOptions`2
  parent: Cheetah.Kafka
  children:
  - Cheetah.Kafka.ProducerOptions`2.SetKeySerializer(Confluent.Kafka.ISerializer{`0})
  - Cheetah.Kafka.ProducerOptions`2.SetValueSerializer(Confluent.Kafka.ISerializer{`1})
  langs:
  - csharp
  - vb
  name: ProducerOptions<TKey, TValue>
  nameWithType: ProducerOptions<TKey, TValue>
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ProducerOptions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: ProducerOptions
    path: ../src/Cheetah.Kafka/Options/ProducerOptions.cs
    startLine: 10
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Represents options for configuring a Kafka producer.
  example: []
  syntax:
    content: 'public class ProducerOptions<TKey, TValue> : ClientOptions<ProducerConfig, ProducerBuilder<TKey, TValue>>'
    typeParameters:
    - id: TKey
      description: The type of the producer key.
    - id: TValue
      description: The type of the producer value.
    content.vb: Public Class ProducerOptions(Of TKey, TValue) Inherits ClientOptions(Of ProducerConfig, ProducerBuilder(Of TKey, TValue))
  inheritance:
  - System.Object
  - Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}}
  inheritedMembers:
  - Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}}.ConfigureClient(System.Action{Confluent.Kafka.ProducerConfig})
  - Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}}.ConfigureBuilder(System.Action{Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}})
  nameWithType.vb: ProducerOptions(Of TKey, TValue)
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue)
  name.vb: ProducerOptions(Of TKey, TValue)
- uid: Cheetah.Kafka.ProducerOptions`2.SetValueSerializer(Confluent.Kafka.ISerializer{`1})
  commentId: M:Cheetah.Kafka.ProducerOptions`2.SetValueSerializer(Confluent.Kafka.ISerializer{`1})
  id: SetValueSerializer(Confluent.Kafka.ISerializer{`1})
  parent: Cheetah.Kafka.ProducerOptions`2
  langs:
  - csharp
  - vb
  name: SetValueSerializer(ISerializer<TValue>)
  nameWithType: ProducerOptions<TKey, TValue>.SetValueSerializer(ISerializer<TValue>)
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>.SetValueSerializer(Confluent.Kafka.ISerializer<TValue>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ProducerOptions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: SetValueSerializer
    path: ../src/Cheetah.Kafka/Options/ProducerOptions.cs
    startLine: 19
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Sets the value serializer for the producer.
  example: []
  syntax:
    content: public void SetValueSerializer(ISerializer<TValue> valueSerializer)
    parameters:
    - id: valueSerializer
      type: Confluent.Kafka.ISerializer{{TValue}}
      description: The serializer to be used for the producer.
    content.vb: Public Sub SetValueSerializer(valueSerializer As ISerializer(Of TValue))
  overload: Cheetah.Kafka.ProducerOptions`2.SetValueSerializer*
  nameWithType.vb: ProducerOptions(Of TKey, TValue).SetValueSerializer(ISerializer(Of TValue))
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue).SetValueSerializer(Confluent.Kafka.ISerializer(Of TValue))
  name.vb: SetValueSerializer(ISerializer(Of TValue))
- uid: Cheetah.Kafka.ProducerOptions`2.SetKeySerializer(Confluent.Kafka.ISerializer{`0})
  commentId: M:Cheetah.Kafka.ProducerOptions`2.SetKeySerializer(Confluent.Kafka.ISerializer{`0})
  id: SetKeySerializer(Confluent.Kafka.ISerializer{`0})
  parent: Cheetah.Kafka.ProducerOptions`2
  langs:
  - csharp
  - vb
  name: SetKeySerializer(ISerializer<TKey>)
  nameWithType: ProducerOptions<TKey, TValue>.SetKeySerializer(ISerializer<TKey>)
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>.SetKeySerializer(Confluent.Kafka.ISerializer<TKey>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ProducerOptions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: SetKeySerializer
    path: ../src/Cheetah.Kafka/Options/ProducerOptions.cs
    startLine: 28
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Sets the key serializer for the producer.
  example: []
  syntax:
    content: public void SetKeySerializer(ISerializer<TKey> keySerializer)
    parameters:
    - id: keySerializer
      type: Confluent.Kafka.ISerializer{{TKey}}
      description: The serializer to be used for the producer.
    content.vb: Public Sub SetKeySerializer(keySerializer As ISerializer(Of TKey))
  overload: Cheetah.Kafka.ProducerOptions`2.SetKeySerializer*
  nameWithType.vb: ProducerOptions(Of TKey, TValue).SetKeySerializer(ISerializer(Of TKey))
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue).SetKeySerializer(Confluent.Kafka.ISerializer(Of TKey))
  name.vb: SetKeySerializer(ISerializer(Of TKey))
references:
- uid: Cheetah.Kafka
  commentId: N:Cheetah.Kafka
  href: Cheetah.html
  name: Cheetah.Kafka
  nameWithType: Cheetah.Kafka
  fullName: Cheetah.Kafka
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}}
  commentId: T:Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{`0,`1}}
  parent: Cheetah.Kafka
  definition: Cheetah.Kafka.ClientOptions`2
  href: Cheetah.Kafka.ClientOptions-2.html
  name: ClientOptions<ProducerConfig, ProducerBuilder<TKey, TValue>>
  nameWithType: ClientOptions<ProducerConfig, ProducerBuilder<TKey, TValue>>
  fullName: Cheetah.Kafka.ClientOptions<Confluent.Kafka.ProducerConfig, Confluent.Kafka.ProducerBuilder<TKey, TValue>>
  nameWithType.vb: ClientOptions(Of ProducerConfig, ProducerBuilder(Of TKey, TValue))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of Confluent.Kafka.ProducerConfig, Confluent.Kafka.ProducerBuilder(Of TKey, TValue))
  name.vb: ClientOptions(Of ProducerConfig, ProducerBuilder(Of TKey, TValue))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions`2
    name: ClientOptions
    href: Cheetah.Kafka.ClientOptions-2.html
  - name: <
  - uid: Confluent.Kafka.ProducerConfig
    name: ProducerConfig
    isExternal: true
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.ProducerBuilder`2
    name: ProducerBuilder
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions`2
    name: ClientOptions
    href: Cheetah.Kafka.ClientOptions-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ProducerConfig
    name: ProducerConfig
    isExternal: true
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.ProducerBuilder`2
    name: ProducerBuilder
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}}.ConfigureClient(System.Action{Confluent.Kafka.ProducerConfig})
  commentId: M:Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{`0,`1}}.ConfigureClient(System.Action{Confluent.Kafka.ProducerConfig})
  parent: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}}
  definition: Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
  href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  name: ConfigureClient(Action<ProducerConfig>)
  nameWithType: ClientOptions<ProducerConfig, ProducerBuilder<TKey, TValue>>.ConfigureClient(Action<ProducerConfig>)
  fullName: Cheetah.Kafka.ClientOptions<Confluent.Kafka.ProducerConfig, Confluent.Kafka.ProducerBuilder<TKey, TValue>>.ConfigureClient(System.Action<Confluent.Kafka.ProducerConfig>)
  nameWithType.vb: ClientOptions(Of ProducerConfig, ProducerBuilder(Of TKey, TValue)).ConfigureClient(Action(Of ProducerConfig))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of Confluent.Kafka.ProducerConfig, Confluent.Kafka.ProducerBuilder(Of TKey, TValue)).ConfigureClient(System.Action(Of Confluent.Kafka.ProducerConfig))
  name.vb: ConfigureClient(Action(Of ProducerConfig))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{`0,`1}}.ConfigureClient(System.Action{Confluent.Kafka.ProducerConfig})
    name: ConfigureClient
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.ProducerConfig
    name: ProducerConfig
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{`0,`1}}.ConfigureClient(System.Action{Confluent.Kafka.ProducerConfig})
    name: ConfigureClient
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ProducerConfig
    name: ProducerConfig
    isExternal: true
  - name: )
  - name: )
- uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}}.ConfigureBuilder(System.Action{Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}})
  commentId: M:Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{`0,`1}}.ConfigureBuilder(System.Action{Confluent.Kafka.ProducerBuilder{`0,`1}})
  parent: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}}
  definition: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
  href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  name: ConfigureBuilder(Action<ProducerBuilder<TKey, TValue>>)
  nameWithType: ClientOptions<ProducerConfig, ProducerBuilder<TKey, TValue>>.ConfigureBuilder(Action<ProducerBuilder<TKey, TValue>>)
  fullName: Cheetah.Kafka.ClientOptions<Confluent.Kafka.ProducerConfig, Confluent.Kafka.ProducerBuilder<TKey, TValue>>.ConfigureBuilder(System.Action<Confluent.Kafka.ProducerBuilder<TKey, TValue>>)
  nameWithType.vb: ClientOptions(Of ProducerConfig, ProducerBuilder(Of TKey, TValue)).ConfigureBuilder(Action(Of ProducerBuilder(Of TKey, TValue)))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of Confluent.Kafka.ProducerConfig, Confluent.Kafka.ProducerBuilder(Of TKey, TValue)).ConfigureBuilder(System.Action(Of Confluent.Kafka.ProducerBuilder(Of TKey, TValue)))
  name.vb: ConfigureBuilder(Action(Of ProducerBuilder(Of TKey, TValue)))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{`0,`1}}.ConfigureBuilder(System.Action{Confluent.Kafka.ProducerBuilder{`0,`1}})
    name: ConfigureBuilder
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.ProducerBuilder`2
    name: ProducerBuilder
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ProducerConfig,Confluent.Kafka.ProducerBuilder{`0,`1}}.ConfigureBuilder(System.Action{Confluent.Kafka.ProducerBuilder{`0,`1}})
    name: ConfigureBuilder
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ProducerBuilder`2
    name: ProducerBuilder
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Cheetah.Kafka.ClientOptions`2
  commentId: T:Cheetah.Kafka.ClientOptions`2
  href: Cheetah.Kafka.ClientOptions-2.html
  name: ClientOptions<TConfig, TBuilder>
  nameWithType: ClientOptions<TConfig, TBuilder>
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder)
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder)
  name.vb: ClientOptions(Of TConfig, TBuilder)
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions`2
    name: ClientOptions
    href: Cheetah.Kafka.ClientOptions-2.html
  - name: <
  - name: TConfig
  - name: ','
  - name: " "
  - name: TBuilder
  - name: '>'
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions`2
    name: ClientOptions
    href: Cheetah.Kafka.ClientOptions-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TConfig
  - name: ','
  - name: " "
  - name: TBuilder
  - name: )
- uid: Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
  commentId: M:Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
  isExternal: true
  href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  name: ConfigureClient(Action<TConfig>)
  nameWithType: ClientOptions<TConfig, TBuilder>.ConfigureClient(Action<TConfig>)
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>.ConfigureClient(System.Action<TConfig>)
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder).ConfigureClient(Action(Of TConfig))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder).ConfigureClient(System.Action(Of TConfig))
  name.vb: ConfigureClient(Action(Of TConfig))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
    name: ConfigureClient
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TConfig
  - name: '>'
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
    name: ConfigureClient
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TConfig
  - name: )
  - name: )
- uid: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
  commentId: M:Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
  isExternal: true
  href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  name: ConfigureBuilder(Action<TBuilder>)
  nameWithType: ClientOptions<TConfig, TBuilder>.ConfigureBuilder(Action<TBuilder>)
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>.ConfigureBuilder(System.Action<TBuilder>)
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder).ConfigureBuilder(Action(Of TBuilder))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder).ConfigureBuilder(System.Action(Of TBuilder))
  name.vb: ConfigureBuilder(Action(Of TBuilder))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
    name: ConfigureBuilder
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TBuilder
  - name: '>'
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
    name: ConfigureBuilder
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TBuilder
  - name: )
  - name: )
- uid: Cheetah.Kafka.ProducerOptions`2.SetValueSerializer*
  commentId: Overload:Cheetah.Kafka.ProducerOptions`2.SetValueSerializer
  href: Cheetah.Kafka.ProducerOptions-2.html#Cheetah_Kafka_ProducerOptions_2_SetValueSerializer_Confluent_Kafka_ISerializer__1__
  name: SetValueSerializer
  nameWithType: ProducerOptions<TKey, TValue>.SetValueSerializer
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>.SetValueSerializer
  nameWithType.vb: ProducerOptions(Of TKey, TValue).SetValueSerializer
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue).SetValueSerializer
- uid: Confluent.Kafka.ISerializer{{TValue}}
  commentId: T:Confluent.Kafka.ISerializer{`1}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.ISerializer`1
  name: ISerializer<TValue>
  nameWithType: ISerializer<TValue>
  fullName: Confluent.Kafka.ISerializer<TValue>
  nameWithType.vb: ISerializer(Of TValue)
  fullName.vb: Confluent.Kafka.ISerializer(Of TValue)
  name.vb: ISerializer(Of TValue)
  spec.csharp:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Confluent.Kafka.ISerializer`1
  commentId: T:Confluent.Kafka.ISerializer`1
  isExternal: true
  name: ISerializer<T>
  nameWithType: ISerializer<T>
  fullName: Confluent.Kafka.ISerializer<T>
  nameWithType.vb: ISerializer(Of T)
  fullName.vb: Confluent.Kafka.ISerializer(Of T)
  name.vb: ISerializer(Of T)
  spec.csharp:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Confluent.Kafka
  commentId: N:Confluent.Kafka
  isExternal: true
  name: Confluent.Kafka
  nameWithType: Confluent.Kafka
  fullName: Confluent.Kafka
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
- uid: Cheetah.Kafka.ProducerOptions`2.SetKeySerializer*
  commentId: Overload:Cheetah.Kafka.ProducerOptions`2.SetKeySerializer
  href: Cheetah.Kafka.ProducerOptions-2.html#Cheetah_Kafka_ProducerOptions_2_SetKeySerializer_Confluent_Kafka_ISerializer__0__
  name: SetKeySerializer
  nameWithType: ProducerOptions<TKey, TValue>.SetKeySerializer
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>.SetKeySerializer
  nameWithType.vb: ProducerOptions(Of TKey, TValue).SetKeySerializer
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue).SetKeySerializer
- uid: Confluent.Kafka.ISerializer{{TKey}}
  commentId: T:Confluent.Kafka.ISerializer{`0}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.ISerializer`1
  name: ISerializer<TKey>
  nameWithType: ISerializer<TKey>
  fullName: Confluent.Kafka.ISerializer<TKey>
  nameWithType.vb: ISerializer(Of TKey)
  fullName.vb: Confluent.Kafka.ISerializer(Of TKey)
  name.vb: ISerializer(Of TKey)
  spec.csharp:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
