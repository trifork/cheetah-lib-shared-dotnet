### YamlMime:ManagedReference
items:
- uid: Cheetah.Kafka.Extensions.KafkaExtensions
  commentId: T:Cheetah.Kafka.Extensions.KafkaExtensions
  id: KafkaExtensions
  parent: Cheetah.Kafka.Extensions
  children:
  - Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  - Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  - Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  - Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  - Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  - Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: KafkaExtensions
  nameWithType: KafkaExtensions
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions
  type: Class
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: KafkaExtensions
    path: ../src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
    startLine: 16
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Extension methods for adding Cheetah OAuth2 authentication to Kafka clients.
  example: []
  syntax:
    content: public static class KafkaExtensions
    content.vb: Public Module KafkaExtensions
  inheritance:
  - System.Object
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  id: AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Cheetah.Kafka.Extensions.KafkaExtensions
  langs:
  - csharp
  - vb
  name: AddCheetahOAuthentication<TKey, TValue>(ConsumerBuilder<TKey, TValue>, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(ConsumerBuilder<TKey, TValue>, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(Confluent.Kafka.ConsumerBuilder<TKey, TValue>, System.Func<System.Threading.Tasks.Task<(string AccessToken, long Expiration, string Principal)>>, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: AddCheetahOAuthentication
    path: ../src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
    startLine: 27
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Adds Cheetah OAuth2 authentication to a Kafka consumer.
  example: []
  syntax:
    content: public static ConsumerBuilder<TKey, TValue> AddCheetahOAuthentication<TKey, TValue>(this ConsumerBuilder<TKey, TValue> builder, Func<Task<(string AccessToken, long Expiration, string Principal)>> asyncTokenRequestFunc, ILogger logger)
    parameters:
    - id: builder
      type: Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}
      description: The builder to call this method on
    - id: asyncTokenRequestFunc
      type: System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}}
      description: A function which returns a Task, which results in a tuple containing a token, expiration and optional principal name
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger to use when logging token-related messages
    typeParameters:
    - id: TKey
      description: The key type on the builder
    - id: TValue
      description: The value type on the builder
    return:
      type: Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}
      description: The builder for method chaining
    content.vb: Public Shared Function AddCheetahOAuthentication(Of TKey, TValue)(builder As ConsumerBuilder(Of TKey, TValue), asyncTokenRequestFunc As Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), logger As ILogger) As ConsumerBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication*
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(ConsumerBuilder(Of TKey, TValue), Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(Confluent.Kafka.ConsumerBuilder(Of TKey, TValue), System.Func(Of System.Threading.Tasks.Task(Of (AccessToken As String, Expiration As Long, Principal As String))), Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(Of TKey, TValue)(ConsumerBuilder(Of TKey, TValue), Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  id: AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Cheetah.Kafka.Extensions.KafkaExtensions
  langs:
  - csharp
  - vb
  name: AddCheetahOAuthentication<TKey, TValue>(ProducerBuilder<TKey, TValue>, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(ProducerBuilder<TKey, TValue>, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(Confluent.Kafka.ProducerBuilder<TKey, TValue>, System.Func<System.Threading.Tasks.Task<(string AccessToken, long Expiration, string Principal)>>, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: AddCheetahOAuthentication
    path: ../src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
    startLine: 47
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Adds Cheetah OAuth2 authentication to a Kafka producer.
  example: []
  syntax:
    content: public static ProducerBuilder<TKey, TValue> AddCheetahOAuthentication<TKey, TValue>(this ProducerBuilder<TKey, TValue> builder, Func<Task<(string AccessToken, long Expiration, string Principal)>> asyncTokenRequestFunc, ILogger logger)
    parameters:
    - id: builder
      type: Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}
      description: The builder to call this method on
    - id: asyncTokenRequestFunc
      type: System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}}
      description: A function which returns a Task, which results in a tuple containing a token, expiration and optional principal name
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger to use when logging token-related messages
    typeParameters:
    - id: TKey
      description: The key type on the builder
    - id: TValue
      description: The value type on the builder
    return:
      type: Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}
      description: The builder for method chaining
    content.vb: Public Shared Function AddCheetahOAuthentication(Of TKey, TValue)(builder As ProducerBuilder(Of TKey, TValue), asyncTokenRequestFunc As Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), logger As ILogger) As ProducerBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication*
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(ProducerBuilder(Of TKey, TValue), Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(Confluent.Kafka.ProducerBuilder(Of TKey, TValue), System.Func(Of System.Threading.Tasks.Task(Of (AccessToken As String, Expiration As Long, Principal As String))), Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(Of TKey, TValue)(ProducerBuilder(Of TKey, TValue), Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  id: AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Cheetah.Kafka.Extensions.KafkaExtensions
  langs:
  - csharp
  - vb
  name: AddCheetahOAuthentication(AdminClientBuilder, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication(AdminClientBuilder, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder, System.Func<System.Threading.Tasks.Task<(string AccessToken, long Expiration, string Principal)>>, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: AddCheetahOAuthentication
    path: ../src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
    startLine: 65
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Adds Cheetah OAuth2 authentication to a Kafka admin client.
  example: []
  syntax:
    content: public static AdminClientBuilder AddCheetahOAuthentication(this AdminClientBuilder builder, Func<Task<(string AccessToken, long Expiration, string Principal)>> asyncTokenRequestFunc, ILogger logger)
    parameters:
    - id: builder
      type: Confluent.Kafka.AdminClientBuilder
      description: The builder to call this method on
    - id: asyncTokenRequestFunc
      type: System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}}
      description: A function which returns a Task, which results in a tuple containing a token, expiration and optional principal name
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger to use when logging token-related messages
    return:
      type: Confluent.Kafka.AdminClientBuilder
      description: The builder for method chaining
    content.vb: Public Shared Function AddCheetahOAuthentication(builder As AdminClientBuilder, asyncTokenRequestFunc As Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), logger As ILogger) As AdminClientBuilder
  overload: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication*
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(AdminClientBuilder, Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder, System.Func(Of System.Threading.Tasks.Task(Of (AccessToken As String, Expiration As Long, Principal As String))), Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(AdminClientBuilder, Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  id: AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Cheetah.Kafka.Extensions.KafkaExtensions
  langs:
  - csharp
  - vb
  name: AddCheetahOAuthentication<TKey, TValue>(ConsumerBuilder<TKey, TValue>, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(ConsumerBuilder<TKey, TValue>, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(Confluent.Kafka.ConsumerBuilder<TKey, TValue>, System.Func<(string AccessToken, long Expiration, string Principal)>, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: AddCheetahOAuthentication
    path: ../src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
    startLine: 85
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Adds Cheetah OAuth2 authentication to a Kafka consumer.
  example: []
  syntax:
    content: public static ConsumerBuilder<TKey, TValue> AddCheetahOAuthentication<TKey, TValue>(this ConsumerBuilder<TKey, TValue> builder, Func<(string AccessToken, long Expiration, string Principal)> tokenRequestFunc, ILogger logger)
    parameters:
    - id: builder
      type: Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}
      description: The builder to call this method on
    - id: tokenRequestFunc
      type: System.Func{System.ValueTuple{System.String,System.Int64,System.String}}
      description: A function which returns a tuple containing a token, expiration and optional principal name
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger to use when logging token-related messages
    typeParameters:
    - id: TKey
      description: The key type on the builder
    - id: TValue
      description: The value type on the builder
    return:
      type: Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}
      description: The builder for method chaining
    content.vb: Public Shared Function AddCheetahOAuthentication(Of TKey, TValue)(builder As ConsumerBuilder(Of TKey, TValue), tokenRequestFunc As Func(Of (AccessToken As String, Expiration As Long, Principal As String)), logger As ILogger) As ConsumerBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication*
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(ConsumerBuilder(Of TKey, TValue), Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(Confluent.Kafka.ConsumerBuilder(Of TKey, TValue), System.Func(Of (AccessToken As String, Expiration As Long, Principal As String)), Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(Of TKey, TValue)(ConsumerBuilder(Of TKey, TValue), Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  id: AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Cheetah.Kafka.Extensions.KafkaExtensions
  langs:
  - csharp
  - vb
  name: AddCheetahOAuthentication<TKey, TValue>(ProducerBuilder<TKey, TValue>, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(ProducerBuilder<TKey, TValue>, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(Confluent.Kafka.ProducerBuilder<TKey, TValue>, System.Func<(string AccessToken, long Expiration, string Principal)>, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: AddCheetahOAuthentication
    path: ../src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
    startLine: 105
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Adds Cheetah OAuth2 authentication to a Kafka producer.
  example: []
  syntax:
    content: public static ProducerBuilder<TKey, TValue> AddCheetahOAuthentication<TKey, TValue>(this ProducerBuilder<TKey, TValue> builder, Func<(string AccessToken, long Expiration, string Principal)> tokenRequestFunc, ILogger logger)
    parameters:
    - id: builder
      type: Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}
      description: The builder to call this method on
    - id: tokenRequestFunc
      type: System.Func{System.ValueTuple{System.String,System.Int64,System.String}}
      description: A function which returns a tuple containing a token, expiration and optional principal name
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger to use when logging token-related messages
    typeParameters:
    - id: TKey
      description: The key type on the builder
    - id: TValue
      description: The value type on the builder
    return:
      type: Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}
      description: The builder for method chaining
    content.vb: Public Shared Function AddCheetahOAuthentication(Of TKey, TValue)(builder As ProducerBuilder(Of TKey, TValue), tokenRequestFunc As Func(Of (AccessToken As String, Expiration As Long, Principal As String)), logger As ILogger) As ProducerBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication*
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(ProducerBuilder(Of TKey, TValue), Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(Confluent.Kafka.ProducerBuilder(Of TKey, TValue), System.Func(Of (AccessToken As String, Expiration As Long, Principal As String)), Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(Of TKey, TValue)(ProducerBuilder(Of TKey, TValue), Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  id: AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Cheetah.Kafka.Extensions.KafkaExtensions
  langs:
  - csharp
  - vb
  name: AddCheetahOAuthentication(AdminClientBuilder, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication(AdminClientBuilder, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder, System.Func<(string AccessToken, long Expiration, string Principal)>, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
      branch: main
      repo: https://github.com/trifork/cheetah-lib-shared-dotnet
    id: AddCheetahOAuthentication
    path: ../src/Cheetah.Kafka/Extensions/KafkaExtensions.cs
    startLine: 123
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Extensions
  summary: Adds Cheetah OAuth2 authentication to a Kafka admin client.
  example: []
  syntax:
    content: public static AdminClientBuilder AddCheetahOAuthentication(this AdminClientBuilder builder, Func<(string AccessToken, long Expiration, string Principal)> tokenRequestFunc, ILogger logger)
    parameters:
    - id: builder
      type: Confluent.Kafka.AdminClientBuilder
      description: The builder to call this method on
    - id: tokenRequestFunc
      type: System.Func{System.ValueTuple{System.String,System.Int64,System.String}}
      description: A function which returns a tuple containing a token, expiration and optional principal name
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger to use when logging token-related messages
    return:
      type: Confluent.Kafka.AdminClientBuilder
      description: The builder for method chaining
    content.vb: Public Shared Function AddCheetahOAuthentication(builder As AdminClientBuilder, tokenRequestFunc As Func(Of (AccessToken As String, Expiration As Long, Principal As String)), logger As ILogger) As AdminClientBuilder
  overload: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication*
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(AdminClientBuilder, Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder, System.Func(Of (AccessToken As String, Expiration As Long, Principal As String)), Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(AdminClientBuilder, Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
references:
- uid: Cheetah.Kafka.Extensions
  commentId: N:Cheetah.Kafka.Extensions
  href: Cheetah.html
  name: Cheetah.Kafka.Extensions
  nameWithType: Cheetah.Kafka.Extensions
  fullName: Cheetah.Kafka.Extensions
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  - name: .
  - uid: Cheetah.Kafka.Extensions
    name: Extensions
    href: Cheetah.Kafka.Extensions.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  - name: .
  - uid: Cheetah.Kafka.Extensions
    name: Extensions
    href: Cheetah.Kafka.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication*
  commentId: Overload:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication
  href: Cheetah.Kafka.Extensions.KafkaExtensions.html#Cheetah_Kafka_Extensions_KafkaExtensions_AddCheetahOAuthentication__2_Confluent_Kafka_ConsumerBuilder___0___1__System_Func_System_Threading_Tasks_Task_System_ValueTuple_System_String_System_Int64_System_String____Microsoft_Extensions_Logging_ILogger_
  name: AddCheetahOAuthentication
  nameWithType: KafkaExtensions.AddCheetahOAuthentication
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication
- uid: Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}
  commentId: T:Confluent.Kafka.ConsumerBuilder{``0,``1}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.ConsumerBuilder`2
  name: ConsumerBuilder<TKey, TValue>
  nameWithType: ConsumerBuilder<TKey, TValue>
  fullName: Confluent.Kafka.ConsumerBuilder<TKey, TValue>
  nameWithType.vb: ConsumerBuilder(Of TKey, TValue)
  fullName.vb: Confluent.Kafka.ConsumerBuilder(Of TKey, TValue)
  name.vb: ConsumerBuilder(Of TKey, TValue)
  spec.csharp:
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}}
  commentId: T:System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<Task<(string AccessToken, long Expiration, string Principal)>>
  nameWithType: Func<Task<(string AccessToken, long Expiration, string Principal)>>
  fullName: System.Func<System.Threading.Tasks.Task<(string AccessToken, long Expiration, string Principal)>>
  nameWithType.vb: Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String)))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of (AccessToken As String, Expiration As Long, Principal As String)))
  name.vb: Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String)))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.AccessToken
    name: AccessToken
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.accesstoken
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.Expiration
    name: Expiration
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.expiration
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.Principal
    name: Principal
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.principal
  - name: )
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.AccessToken
    name: AccessToken
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.accesstoken
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.Expiration
    name: Expiration
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.expiration
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.Principal
    name: Principal
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.principal
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Confluent.Kafka.ConsumerBuilder`2
  commentId: T:Confluent.Kafka.ConsumerBuilder`2
  isExternal: true
  name: ConsumerBuilder<TKey, TValue>
  nameWithType: ConsumerBuilder<TKey, TValue>
  fullName: Confluent.Kafka.ConsumerBuilder<TKey, TValue>
  nameWithType.vb: ConsumerBuilder(Of TKey, TValue)
  fullName.vb: Confluent.Kafka.ConsumerBuilder(Of TKey, TValue)
  name.vb: ConsumerBuilder(Of TKey, TValue)
  spec.csharp:
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Confluent.Kafka
  commentId: N:Confluent.Kafka
  isExternal: true
  name: Confluent.Kafka
  nameWithType: Confluent.Kafka
  fullName: Confluent.Kafka
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Confluent.Kafka.ProducerBuilder{{TKey},{TValue}}
  commentId: T:Confluent.Kafka.ProducerBuilder{``0,``1}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.ProducerBuilder`2
  name: ProducerBuilder<TKey, TValue>
  nameWithType: ProducerBuilder<TKey, TValue>
  fullName: Confluent.Kafka.ProducerBuilder<TKey, TValue>
  nameWithType.vb: ProducerBuilder(Of TKey, TValue)
  fullName.vb: Confluent.Kafka.ProducerBuilder(Of TKey, TValue)
  name.vb: ProducerBuilder(Of TKey, TValue)
  spec.csharp:
  - uid: Confluent.Kafka.ProducerBuilder`2
    name: ProducerBuilder
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ProducerBuilder`2
    name: ProducerBuilder
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Confluent.Kafka.ProducerBuilder`2
  commentId: T:Confluent.Kafka.ProducerBuilder`2
  isExternal: true
  name: ProducerBuilder<TKey, TValue>
  nameWithType: ProducerBuilder<TKey, TValue>
  fullName: Confluent.Kafka.ProducerBuilder<TKey, TValue>
  nameWithType.vb: ProducerBuilder(Of TKey, TValue)
  fullName.vb: Confluent.Kafka.ProducerBuilder(Of TKey, TValue)
  name.vb: ProducerBuilder(Of TKey, TValue)
  spec.csharp:
  - uid: Confluent.Kafka.ProducerBuilder`2
    name: ProducerBuilder
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ProducerBuilder`2
    name: ProducerBuilder
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Confluent.Kafka.AdminClientBuilder
  commentId: T:Confluent.Kafka.AdminClientBuilder
  parent: Confluent.Kafka
  isExternal: true
  name: AdminClientBuilder
  nameWithType: AdminClientBuilder
  fullName: Confluent.Kafka.AdminClientBuilder
- uid: System.Func{System.ValueTuple{System.String,System.Int64,System.String}}
  commentId: T:System.Func{System.ValueTuple{System.String,System.Int64,System.String}}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<(string AccessToken, long Expiration, string Principal)>
  nameWithType: Func<(string AccessToken, long Expiration, string Principal)>
  fullName: System.Func<(string AccessToken, long Expiration, string Principal)>
  nameWithType.vb: Func(Of (AccessToken As String, Expiration As Long, Principal As String))
  fullName.vb: System.Func(Of (AccessToken As String, Expiration As Long, Principal As String))
  name.vb: Func(Of (AccessToken As String, Expiration As Long, Principal As String))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.AccessToken
    name: AccessToken
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.accesstoken
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.Expiration
    name: Expiration
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.expiration
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.Principal
    name: Principal
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.principal
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.AccessToken
    name: AccessToken
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.accesstoken
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.Expiration
    name: Expiration
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.expiration
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int64,System.String}.Principal
    name: Principal
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int64,system.string-.principal
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
