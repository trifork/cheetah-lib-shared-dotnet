### YamlMime:XRefMap
sorted: true
references:
- uid: Cheetah.Auth.Authentication
  name: Cheetah.Auth.Authentication
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.html
  commentId: N:Cheetah.Auth.Authentication
  fullName: Cheetah.Auth.Authentication
  nameWithType: Cheetah.Auth.Authentication
- uid: Cheetah.Auth.Authentication.CachedTokenProvider
  name: CachedTokenProvider
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html
  commentId: T:Cheetah.Auth.Authentication.CachedTokenProvider
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider
  nameWithType: CachedTokenProvider
- uid: Cheetah.Auth.Authentication.CachedTokenProvider.#ctor(Cheetah.Auth.Authentication.ICachableTokenProvider,System.TimeSpan,System.TimeSpan,System.TimeSpan,Microsoft.Extensions.Logging.ILogger{Cheetah.Auth.Authentication.CachedTokenProvider})
  name: CachedTokenProvider(ICachableTokenProvider, TimeSpan, TimeSpan, TimeSpan, ILogger<CachedTokenProvider>)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html#Cheetah_Auth_Authentication_CachedTokenProvider__ctor_Cheetah_Auth_Authentication_ICachableTokenProvider_System_TimeSpan_System_TimeSpan_System_TimeSpan_Microsoft_Extensions_Logging_ILogger_Cheetah_Auth_Authentication_CachedTokenProvider__
  commentId: M:Cheetah.Auth.Authentication.CachedTokenProvider.#ctor(Cheetah.Auth.Authentication.ICachableTokenProvider,System.TimeSpan,System.TimeSpan,System.TimeSpan,Microsoft.Extensions.Logging.ILogger{Cheetah.Auth.Authentication.CachedTokenProvider})
  name.vb: New(ICachableTokenProvider, TimeSpan, TimeSpan, TimeSpan, ILogger(Of CachedTokenProvider))
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider.CachedTokenProvider(Cheetah.Auth.Authentication.ICachableTokenProvider, System.TimeSpan, System.TimeSpan, System.TimeSpan, Microsoft.Extensions.Logging.ILogger<Cheetah.Auth.Authentication.CachedTokenProvider>)
  fullName.vb: Cheetah.Auth.Authentication.CachedTokenProvider.New(Cheetah.Auth.Authentication.ICachableTokenProvider, System.TimeSpan, System.TimeSpan, System.TimeSpan, Microsoft.Extensions.Logging.ILogger(Of Cheetah.Auth.Authentication.CachedTokenProvider))
  nameWithType: CachedTokenProvider.CachedTokenProvider(ICachableTokenProvider, TimeSpan, TimeSpan, TimeSpan, ILogger<CachedTokenProvider>)
  nameWithType.vb: CachedTokenProvider.New(ICachableTokenProvider, TimeSpan, TimeSpan, TimeSpan, ILogger(Of CachedTokenProvider))
- uid: Cheetah.Auth.Authentication.CachedTokenProvider.#ctor(Cheetah.Auth.Configuration.OAuth2Config,Cheetah.Auth.Authentication.ICachableTokenProvider,Microsoft.Extensions.Logging.ILogger{Cheetah.Auth.Authentication.CachedTokenProvider})
  name: CachedTokenProvider(OAuth2Config, ICachableTokenProvider, ILogger<CachedTokenProvider>)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html#Cheetah_Auth_Authentication_CachedTokenProvider__ctor_Cheetah_Auth_Configuration_OAuth2Config_Cheetah_Auth_Authentication_ICachableTokenProvider_Microsoft_Extensions_Logging_ILogger_Cheetah_Auth_Authentication_CachedTokenProvider__
  commentId: M:Cheetah.Auth.Authentication.CachedTokenProvider.#ctor(Cheetah.Auth.Configuration.OAuth2Config,Cheetah.Auth.Authentication.ICachableTokenProvider,Microsoft.Extensions.Logging.ILogger{Cheetah.Auth.Authentication.CachedTokenProvider})
  name.vb: New(OAuth2Config, ICachableTokenProvider, ILogger(Of CachedTokenProvider))
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider.CachedTokenProvider(Cheetah.Auth.Configuration.OAuth2Config, Cheetah.Auth.Authentication.ICachableTokenProvider, Microsoft.Extensions.Logging.ILogger<Cheetah.Auth.Authentication.CachedTokenProvider>)
  fullName.vb: Cheetah.Auth.Authentication.CachedTokenProvider.New(Cheetah.Auth.Configuration.OAuth2Config, Cheetah.Auth.Authentication.ICachableTokenProvider, Microsoft.Extensions.Logging.ILogger(Of Cheetah.Auth.Authentication.CachedTokenProvider))
  nameWithType: CachedTokenProvider.CachedTokenProvider(OAuth2Config, ICachableTokenProvider, ILogger<CachedTokenProvider>)
  nameWithType.vb: CachedTokenProvider.New(OAuth2Config, ICachableTokenProvider, ILogger(Of CachedTokenProvider))
- uid: Cheetah.Auth.Authentication.CachedTokenProvider.#ctor*
  name: CachedTokenProvider
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html#Cheetah_Auth_Authentication_CachedTokenProvider__ctor_
  commentId: Overload:Cheetah.Auth.Authentication.CachedTokenProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider.CachedTokenProvider
  fullName.vb: Cheetah.Auth.Authentication.CachedTokenProvider.New
  nameWithType: CachedTokenProvider.CachedTokenProvider
  nameWithType.vb: CachedTokenProvider.New
- uid: Cheetah.Auth.Authentication.CachedTokenProvider.Dispose
  name: Dispose()
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html#Cheetah_Auth_Authentication_CachedTokenProvider_Dispose
  commentId: M:Cheetah.Auth.Authentication.CachedTokenProvider.Dispose
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider.Dispose()
  nameWithType: CachedTokenProvider.Dispose()
- uid: Cheetah.Auth.Authentication.CachedTokenProvider.Dispose*
  name: Dispose
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html#Cheetah_Auth_Authentication_CachedTokenProvider_Dispose_
  commentId: Overload:Cheetah.Auth.Authentication.CachedTokenProvider.Dispose
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider.Dispose
  nameWithType: CachedTokenProvider.Dispose
- uid: Cheetah.Auth.Authentication.CachedTokenProvider.RequestAccessTokenAsync(System.Threading.CancellationToken)
  name: RequestAccessTokenAsync(CancellationToken)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html#Cheetah_Auth_Authentication_CachedTokenProvider_RequestAccessTokenAsync_System_Threading_CancellationToken_
  commentId: M:Cheetah.Auth.Authentication.CachedTokenProvider.RequestAccessTokenAsync(System.Threading.CancellationToken)
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider.RequestAccessTokenAsync(System.Threading.CancellationToken)
  nameWithType: CachedTokenProvider.RequestAccessTokenAsync(CancellationToken)
- uid: Cheetah.Auth.Authentication.CachedTokenProvider.RequestAccessTokenAsync*
  name: RequestAccessTokenAsync
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html#Cheetah_Auth_Authentication_CachedTokenProvider_RequestAccessTokenAsync_
  commentId: Overload:Cheetah.Auth.Authentication.CachedTokenProvider.RequestAccessTokenAsync
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider.RequestAccessTokenAsync
  nameWithType: CachedTokenProvider.RequestAccessTokenAsync
- uid: Cheetah.Auth.Authentication.CachedTokenProvider.StartAsync
  name: StartAsync()
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html#Cheetah_Auth_Authentication_CachedTokenProvider_StartAsync
  commentId: M:Cheetah.Auth.Authentication.CachedTokenProvider.StartAsync
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider.StartAsync()
  nameWithType: CachedTokenProvider.StartAsync()
- uid: Cheetah.Auth.Authentication.CachedTokenProvider.StartAsync*
  name: StartAsync
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.CachedTokenProvider.html#Cheetah_Auth_Authentication_CachedTokenProvider_StartAsync_
  commentId: Overload:Cheetah.Auth.Authentication.CachedTokenProvider.StartAsync
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.CachedTokenProvider.StartAsync
  nameWithType: CachedTokenProvider.StartAsync
- uid: Cheetah.Auth.Authentication.ICachableTokenProvider
  name: ICachableTokenProvider
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ICachableTokenProvider.html
  commentId: T:Cheetah.Auth.Authentication.ICachableTokenProvider
  fullName: Cheetah.Auth.Authentication.ICachableTokenProvider
  nameWithType: ICachableTokenProvider
- uid: Cheetah.Auth.Authentication.ICachableTokenProvider.GetTokenResponse(System.Threading.CancellationToken)
  name: GetTokenResponse(CancellationToken)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ICachableTokenProvider.html#Cheetah_Auth_Authentication_ICachableTokenProvider_GetTokenResponse_System_Threading_CancellationToken_
  commentId: M:Cheetah.Auth.Authentication.ICachableTokenProvider.GetTokenResponse(System.Threading.CancellationToken)
  fullName: Cheetah.Auth.Authentication.ICachableTokenProvider.GetTokenResponse(System.Threading.CancellationToken)
  nameWithType: ICachableTokenProvider.GetTokenResponse(CancellationToken)
- uid: Cheetah.Auth.Authentication.ICachableTokenProvider.GetTokenResponse*
  name: GetTokenResponse
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ICachableTokenProvider.html#Cheetah_Auth_Authentication_ICachableTokenProvider_GetTokenResponse_
  commentId: Overload:Cheetah.Auth.Authentication.ICachableTokenProvider.GetTokenResponse
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.ICachableTokenProvider.GetTokenResponse
  nameWithType: ICachableTokenProvider.GetTokenResponse
- uid: Cheetah.Auth.Authentication.ITokenService
  name: ITokenService
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ITokenService.html
  commentId: T:Cheetah.Auth.Authentication.ITokenService
  fullName: Cheetah.Auth.Authentication.ITokenService
  nameWithType: ITokenService
- uid: Cheetah.Auth.Authentication.ITokenService.Dispose
  name: Dispose()
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ITokenService.html#Cheetah_Auth_Authentication_ITokenService_Dispose
  commentId: M:Cheetah.Auth.Authentication.ITokenService.Dispose
  fullName: Cheetah.Auth.Authentication.ITokenService.Dispose()
  nameWithType: ITokenService.Dispose()
- uid: Cheetah.Auth.Authentication.ITokenService.Dispose*
  name: Dispose
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ITokenService.html#Cheetah_Auth_Authentication_ITokenService_Dispose_
  commentId: Overload:Cheetah.Auth.Authentication.ITokenService.Dispose
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.ITokenService.Dispose
  nameWithType: ITokenService.Dispose
- uid: Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync(System.Threading.CancellationToken)
  name: RequestAccessTokenAsync(CancellationToken)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ITokenService.html#Cheetah_Auth_Authentication_ITokenService_RequestAccessTokenAsync_System_Threading_CancellationToken_
  commentId: M:Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync(System.Threading.CancellationToken)
  fullName: Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync(System.Threading.CancellationToken)
  nameWithType: ITokenService.RequestAccessTokenAsync(CancellationToken)
- uid: Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync*
  name: RequestAccessTokenAsync
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ITokenService.html#Cheetah_Auth_Authentication_ITokenService_RequestAccessTokenAsync_
  commentId: Overload:Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.ITokenService.RequestAccessTokenAsync
  nameWithType: ITokenService.RequestAccessTokenAsync
- uid: Cheetah.Auth.Authentication.ITokenService.StartAsync
  name: StartAsync()
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ITokenService.html#Cheetah_Auth_Authentication_ITokenService_StartAsync
  commentId: M:Cheetah.Auth.Authentication.ITokenService.StartAsync
  fullName: Cheetah.Auth.Authentication.ITokenService.StartAsync()
  nameWithType: ITokenService.StartAsync()
- uid: Cheetah.Auth.Authentication.ITokenService.StartAsync*
  name: StartAsync
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.ITokenService.html#Cheetah_Auth_Authentication_ITokenService_StartAsync_
  commentId: Overload:Cheetah.Auth.Authentication.ITokenService.StartAsync
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.ITokenService.StartAsync
  nameWithType: ITokenService.StartAsync
- uid: Cheetah.Auth.Authentication.OAuth2TokenException
  name: OAuth2TokenException
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.OAuth2TokenException.html
  commentId: T:Cheetah.Auth.Authentication.OAuth2TokenException
  fullName: Cheetah.Auth.Authentication.OAuth2TokenException
  nameWithType: OAuth2TokenException
- uid: Cheetah.Auth.Authentication.OAuth2TokenException.#ctor(System.String)
  name: OAuth2TokenException(string?)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.OAuth2TokenException.html#Cheetah_Auth_Authentication_OAuth2TokenException__ctor_System_String_
  commentId: M:Cheetah.Auth.Authentication.OAuth2TokenException.#ctor(System.String)
  name.vb: New(String)
  fullName: Cheetah.Auth.Authentication.OAuth2TokenException.OAuth2TokenException(string?)
  fullName.vb: Cheetah.Auth.Authentication.OAuth2TokenException.New(String)
  nameWithType: OAuth2TokenException.OAuth2TokenException(string?)
  nameWithType.vb: OAuth2TokenException.New(String)
- uid: Cheetah.Auth.Authentication.OAuth2TokenException.#ctor*
  name: OAuth2TokenException
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.OAuth2TokenException.html#Cheetah_Auth_Authentication_OAuth2TokenException__ctor_
  commentId: Overload:Cheetah.Auth.Authentication.OAuth2TokenException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.Auth.Authentication.OAuth2TokenException.OAuth2TokenException
  fullName.vb: Cheetah.Auth.Authentication.OAuth2TokenException.New
  nameWithType: OAuth2TokenException.OAuth2TokenException
  nameWithType.vb: OAuth2TokenException.New
- uid: Cheetah.Auth.Authentication.OAuthTokenProvider
  name: OAuthTokenProvider
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.OAuthTokenProvider.html
  commentId: T:Cheetah.Auth.Authentication.OAuthTokenProvider
  fullName: Cheetah.Auth.Authentication.OAuthTokenProvider
  nameWithType: OAuthTokenProvider
- uid: Cheetah.Auth.Authentication.OAuthTokenProvider.#ctor(Cheetah.Auth.Configuration.OAuth2Config,System.Net.Http.IHttpClientFactory)
  name: OAuthTokenProvider(OAuth2Config, IHttpClientFactory)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.OAuthTokenProvider.html#Cheetah_Auth_Authentication_OAuthTokenProvider__ctor_Cheetah_Auth_Configuration_OAuth2Config_System_Net_Http_IHttpClientFactory_
  commentId: M:Cheetah.Auth.Authentication.OAuthTokenProvider.#ctor(Cheetah.Auth.Configuration.OAuth2Config,System.Net.Http.IHttpClientFactory)
  name.vb: New(OAuth2Config, IHttpClientFactory)
  fullName: Cheetah.Auth.Authentication.OAuthTokenProvider.OAuthTokenProvider(Cheetah.Auth.Configuration.OAuth2Config, System.Net.Http.IHttpClientFactory)
  fullName.vb: Cheetah.Auth.Authentication.OAuthTokenProvider.New(Cheetah.Auth.Configuration.OAuth2Config, System.Net.Http.IHttpClientFactory)
  nameWithType: OAuthTokenProvider.OAuthTokenProvider(OAuth2Config, IHttpClientFactory)
  nameWithType.vb: OAuthTokenProvider.New(OAuth2Config, IHttpClientFactory)
- uid: Cheetah.Auth.Authentication.OAuthTokenProvider.#ctor*
  name: OAuthTokenProvider
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.OAuthTokenProvider.html#Cheetah_Auth_Authentication_OAuthTokenProvider__ctor_
  commentId: Overload:Cheetah.Auth.Authentication.OAuthTokenProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.Auth.Authentication.OAuthTokenProvider.OAuthTokenProvider
  fullName.vb: Cheetah.Auth.Authentication.OAuthTokenProvider.New
  nameWithType: OAuthTokenProvider.OAuthTokenProvider
  nameWithType.vb: OAuthTokenProvider.New
- uid: Cheetah.Auth.Authentication.OAuthTokenProvider.GetTokenResponse(System.Threading.CancellationToken)
  name: GetTokenResponse(CancellationToken)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.OAuthTokenProvider.html#Cheetah_Auth_Authentication_OAuthTokenProvider_GetTokenResponse_System_Threading_CancellationToken_
  commentId: M:Cheetah.Auth.Authentication.OAuthTokenProvider.GetTokenResponse(System.Threading.CancellationToken)
  fullName: Cheetah.Auth.Authentication.OAuthTokenProvider.GetTokenResponse(System.Threading.CancellationToken)
  nameWithType: OAuthTokenProvider.GetTokenResponse(CancellationToken)
- uid: Cheetah.Auth.Authentication.OAuthTokenProvider.GetTokenResponse*
  name: GetTokenResponse
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.OAuthTokenProvider.html#Cheetah_Auth_Authentication_OAuthTokenProvider_GetTokenResponse_
  commentId: Overload:Cheetah.Auth.Authentication.OAuthTokenProvider.GetTokenResponse
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.OAuthTokenProvider.GetTokenResponse
  nameWithType: OAuthTokenProvider.GetTokenResponse
- uid: Cheetah.Auth.Authentication.StartUpTokenService
  name: StartUpTokenService
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.StartUpTokenService.html
  commentId: T:Cheetah.Auth.Authentication.StartUpTokenService
  fullName: Cheetah.Auth.Authentication.StartUpTokenService
  nameWithType: StartUpTokenService
- uid: Cheetah.Auth.Authentication.StartUpTokenService.#ctor(Cheetah.Auth.Authentication.ITokenService)
  name: StartUpTokenService(ITokenService)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.StartUpTokenService.html#Cheetah_Auth_Authentication_StartUpTokenService__ctor_Cheetah_Auth_Authentication_ITokenService_
  commentId: M:Cheetah.Auth.Authentication.StartUpTokenService.#ctor(Cheetah.Auth.Authentication.ITokenService)
  name.vb: New(ITokenService)
  fullName: Cheetah.Auth.Authentication.StartUpTokenService.StartUpTokenService(Cheetah.Auth.Authentication.ITokenService)
  fullName.vb: Cheetah.Auth.Authentication.StartUpTokenService.New(Cheetah.Auth.Authentication.ITokenService)
  nameWithType: StartUpTokenService.StartUpTokenService(ITokenService)
  nameWithType.vb: StartUpTokenService.New(ITokenService)
- uid: Cheetah.Auth.Authentication.StartUpTokenService.#ctor*
  name: StartUpTokenService
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.StartUpTokenService.html#Cheetah_Auth_Authentication_StartUpTokenService__ctor_
  commentId: Overload:Cheetah.Auth.Authentication.StartUpTokenService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.Auth.Authentication.StartUpTokenService.StartUpTokenService
  fullName.vb: Cheetah.Auth.Authentication.StartUpTokenService.New
  nameWithType: StartUpTokenService.StartUpTokenService
  nameWithType.vb: StartUpTokenService.New
- uid: Cheetah.Auth.Authentication.StartUpTokenService.ExecuteAsync(System.Threading.CancellationToken)
  name: ExecuteAsync(CancellationToken)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.StartUpTokenService.html#Cheetah_Auth_Authentication_StartUpTokenService_ExecuteAsync_System_Threading_CancellationToken_
  commentId: M:Cheetah.Auth.Authentication.StartUpTokenService.ExecuteAsync(System.Threading.CancellationToken)
  fullName: Cheetah.Auth.Authentication.StartUpTokenService.ExecuteAsync(System.Threading.CancellationToken)
  nameWithType: StartUpTokenService.ExecuteAsync(CancellationToken)
- uid: Cheetah.Auth.Authentication.StartUpTokenService.ExecuteAsync*
  name: ExecuteAsync
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.StartUpTokenService.html#Cheetah_Auth_Authentication_StartUpTokenService_ExecuteAsync_
  commentId: Overload:Cheetah.Auth.Authentication.StartUpTokenService.ExecuteAsync
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.StartUpTokenService.ExecuteAsync
  nameWithType: StartUpTokenService.ExecuteAsync
- uid: Cheetah.Auth.Authentication.TokenWithExpiry
  name: TokenWithExpiry
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.TokenWithExpiry.html
  commentId: T:Cheetah.Auth.Authentication.TokenWithExpiry
  fullName: Cheetah.Auth.Authentication.TokenWithExpiry
  nameWithType: TokenWithExpiry
- uid: Cheetah.Auth.Authentication.TokenWithExpiry.#ctor(System.String,System.DateTimeOffset)
  name: TokenWithExpiry(string?, DateTimeOffset)
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.TokenWithExpiry.html#Cheetah_Auth_Authentication_TokenWithExpiry__ctor_System_String_System_DateTimeOffset_
  commentId: M:Cheetah.Auth.Authentication.TokenWithExpiry.#ctor(System.String,System.DateTimeOffset)
  name.vb: New(String, DateTimeOffset)
  fullName: Cheetah.Auth.Authentication.TokenWithExpiry.TokenWithExpiry(string?, System.DateTimeOffset)
  fullName.vb: Cheetah.Auth.Authentication.TokenWithExpiry.New(String, System.DateTimeOffset)
  nameWithType: TokenWithExpiry.TokenWithExpiry(string?, DateTimeOffset)
  nameWithType.vb: TokenWithExpiry.New(String, DateTimeOffset)
- uid: Cheetah.Auth.Authentication.TokenWithExpiry.#ctor*
  name: TokenWithExpiry
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.TokenWithExpiry.html#Cheetah_Auth_Authentication_TokenWithExpiry__ctor_
  commentId: Overload:Cheetah.Auth.Authentication.TokenWithExpiry.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.Auth.Authentication.TokenWithExpiry.TokenWithExpiry
  fullName.vb: Cheetah.Auth.Authentication.TokenWithExpiry.New
  nameWithType: TokenWithExpiry.TokenWithExpiry
  nameWithType.vb: TokenWithExpiry.New
- uid: Cheetah.Auth.Authentication.TokenWithExpiry.AccessToken
  name: AccessToken
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.TokenWithExpiry.html#Cheetah_Auth_Authentication_TokenWithExpiry_AccessToken
  commentId: P:Cheetah.Auth.Authentication.TokenWithExpiry.AccessToken
  fullName: Cheetah.Auth.Authentication.TokenWithExpiry.AccessToken
  nameWithType: TokenWithExpiry.AccessToken
- uid: Cheetah.Auth.Authentication.TokenWithExpiry.AccessToken*
  name: AccessToken
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.TokenWithExpiry.html#Cheetah_Auth_Authentication_TokenWithExpiry_AccessToken_
  commentId: Overload:Cheetah.Auth.Authentication.TokenWithExpiry.AccessToken
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.TokenWithExpiry.AccessToken
  nameWithType: TokenWithExpiry.AccessToken
- uid: Cheetah.Auth.Authentication.TokenWithExpiry.Expires
  name: Expires
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.TokenWithExpiry.html#Cheetah_Auth_Authentication_TokenWithExpiry_Expires
  commentId: P:Cheetah.Auth.Authentication.TokenWithExpiry.Expires
  fullName: Cheetah.Auth.Authentication.TokenWithExpiry.Expires
  nameWithType: TokenWithExpiry.Expires
- uid: Cheetah.Auth.Authentication.TokenWithExpiry.Expires*
  name: Expires
  href: api/Cheetah.Auth/Cheetah.Auth.Authentication.TokenWithExpiry.html#Cheetah_Auth_Authentication_TokenWithExpiry_Expires_
  commentId: Overload:Cheetah.Auth.Authentication.TokenWithExpiry.Expires
  isSpec: "True"
  fullName: Cheetah.Auth.Authentication.TokenWithExpiry.Expires
  nameWithType: TokenWithExpiry.Expires
- uid: Cheetah.Auth.Configuration
  name: Cheetah.Auth.Configuration
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.html
  commentId: N:Cheetah.Auth.Configuration
  fullName: Cheetah.Auth.Configuration
  nameWithType: Cheetah.Auth.Configuration
- uid: Cheetah.Auth.Configuration.OAuth2Config
  name: OAuth2Config
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html
  commentId: T:Cheetah.Auth.Configuration.OAuth2Config
  fullName: Cheetah.Auth.Configuration.OAuth2Config
  nameWithType: OAuth2Config
- uid: Cheetah.Auth.Configuration.OAuth2Config.ClientId
  name: ClientId
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_ClientId
  commentId: P:Cheetah.Auth.Configuration.OAuth2Config.ClientId
  fullName: Cheetah.Auth.Configuration.OAuth2Config.ClientId
  nameWithType: OAuth2Config.ClientId
- uid: Cheetah.Auth.Configuration.OAuth2Config.ClientId*
  name: ClientId
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_ClientId_
  commentId: Overload:Cheetah.Auth.Configuration.OAuth2Config.ClientId
  isSpec: "True"
  fullName: Cheetah.Auth.Configuration.OAuth2Config.ClientId
  nameWithType: OAuth2Config.ClientId
- uid: Cheetah.Auth.Configuration.OAuth2Config.ClientSecret
  name: ClientSecret
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_ClientSecret
  commentId: P:Cheetah.Auth.Configuration.OAuth2Config.ClientSecret
  fullName: Cheetah.Auth.Configuration.OAuth2Config.ClientSecret
  nameWithType: OAuth2Config.ClientSecret
- uid: Cheetah.Auth.Configuration.OAuth2Config.ClientSecret*
  name: ClientSecret
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_ClientSecret_
  commentId: Overload:Cheetah.Auth.Configuration.OAuth2Config.ClientSecret
  isSpec: "True"
  fullName: Cheetah.Auth.Configuration.OAuth2Config.ClientSecret
  nameWithType: OAuth2Config.ClientSecret
- uid: Cheetah.Auth.Configuration.OAuth2Config.EarlyExpiry
  name: EarlyExpiry
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_EarlyExpiry
  commentId: P:Cheetah.Auth.Configuration.OAuth2Config.EarlyExpiry
  fullName: Cheetah.Auth.Configuration.OAuth2Config.EarlyExpiry
  nameWithType: OAuth2Config.EarlyExpiry
- uid: Cheetah.Auth.Configuration.OAuth2Config.EarlyExpiry*
  name: EarlyExpiry
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_EarlyExpiry_
  commentId: Overload:Cheetah.Auth.Configuration.OAuth2Config.EarlyExpiry
  isSpec: "True"
  fullName: Cheetah.Auth.Configuration.OAuth2Config.EarlyExpiry
  nameWithType: OAuth2Config.EarlyExpiry
- uid: Cheetah.Auth.Configuration.OAuth2Config.EarlyRefresh
  name: EarlyRefresh
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_EarlyRefresh
  commentId: P:Cheetah.Auth.Configuration.OAuth2Config.EarlyRefresh
  fullName: Cheetah.Auth.Configuration.OAuth2Config.EarlyRefresh
  nameWithType: OAuth2Config.EarlyRefresh
- uid: Cheetah.Auth.Configuration.OAuth2Config.EarlyRefresh*
  name: EarlyRefresh
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_EarlyRefresh_
  commentId: Overload:Cheetah.Auth.Configuration.OAuth2Config.EarlyRefresh
  isSpec: "True"
  fullName: Cheetah.Auth.Configuration.OAuth2Config.EarlyRefresh
  nameWithType: OAuth2Config.EarlyRefresh
- uid: Cheetah.Auth.Configuration.OAuth2Config.RetryInterval
  name: RetryInterval
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_RetryInterval
  commentId: P:Cheetah.Auth.Configuration.OAuth2Config.RetryInterval
  fullName: Cheetah.Auth.Configuration.OAuth2Config.RetryInterval
  nameWithType: OAuth2Config.RetryInterval
- uid: Cheetah.Auth.Configuration.OAuth2Config.RetryInterval*
  name: RetryInterval
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_RetryInterval_
  commentId: Overload:Cheetah.Auth.Configuration.OAuth2Config.RetryInterval
  isSpec: "True"
  fullName: Cheetah.Auth.Configuration.OAuth2Config.RetryInterval
  nameWithType: OAuth2Config.RetryInterval
- uid: Cheetah.Auth.Configuration.OAuth2Config.Scope
  name: Scope
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_Scope
  commentId: P:Cheetah.Auth.Configuration.OAuth2Config.Scope
  fullName: Cheetah.Auth.Configuration.OAuth2Config.Scope
  nameWithType: OAuth2Config.Scope
- uid: Cheetah.Auth.Configuration.OAuth2Config.Scope*
  name: Scope
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_Scope_
  commentId: Overload:Cheetah.Auth.Configuration.OAuth2Config.Scope
  isSpec: "True"
  fullName: Cheetah.Auth.Configuration.OAuth2Config.Scope
  nameWithType: OAuth2Config.Scope
- uid: Cheetah.Auth.Configuration.OAuth2Config.TokenEndpoint
  name: TokenEndpoint
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_TokenEndpoint
  commentId: P:Cheetah.Auth.Configuration.OAuth2Config.TokenEndpoint
  fullName: Cheetah.Auth.Configuration.OAuth2Config.TokenEndpoint
  nameWithType: OAuth2Config.TokenEndpoint
- uid: Cheetah.Auth.Configuration.OAuth2Config.TokenEndpoint*
  name: TokenEndpoint
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_TokenEndpoint_
  commentId: Overload:Cheetah.Auth.Configuration.OAuth2Config.TokenEndpoint
  isSpec: "True"
  fullName: Cheetah.Auth.Configuration.OAuth2Config.TokenEndpoint
  nameWithType: OAuth2Config.TokenEndpoint
- uid: Cheetah.Auth.Configuration.OAuth2Config.Validate
  name: Validate()
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_Validate
  commentId: M:Cheetah.Auth.Configuration.OAuth2Config.Validate
  fullName: Cheetah.Auth.Configuration.OAuth2Config.Validate()
  nameWithType: OAuth2Config.Validate()
- uid: Cheetah.Auth.Configuration.OAuth2Config.Validate*
  name: Validate
  href: api/Cheetah.Auth/Cheetah.Auth.Configuration.OAuth2Config.html#Cheetah_Auth_Configuration_OAuth2Config_Validate_
  commentId: Overload:Cheetah.Auth.Configuration.OAuth2Config.Validate
  isSpec: "True"
  fullName: Cheetah.Auth.Configuration.OAuth2Config.Validate
  nameWithType: OAuth2Config.Validate
- uid: Cheetah.Auth.Extensions
  name: Cheetah.Auth.Extensions
  href: api/Cheetah.Auth/Cheetah.Auth.Extensions.html
  commentId: N:Cheetah.Auth.Extensions
  fullName: Cheetah.Auth.Extensions
  nameWithType: Cheetah.Auth.Extensions
- uid: Cheetah.Auth.Extensions.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Cheetah.Auth/Cheetah.Auth.Extensions.ServiceCollectionExtensions.html
  commentId: T:Cheetah.Auth.Extensions.ServiceCollectionExtensions
  fullName: Cheetah.Auth.Extensions.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Cheetah.Auth.Extensions.ServiceCollectionExtensions.TryAddCheetahKeyedTokenService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Cheetah.Auth.Configuration.OAuth2Config)
  name: TryAddCheetahKeyedTokenService(IServiceCollection, string, OAuth2Config)
  href: api/Cheetah.Auth/Cheetah.Auth.Extensions.ServiceCollectionExtensions.html#Cheetah_Auth_Extensions_ServiceCollectionExtensions_TryAddCheetahKeyedTokenService_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_String_Cheetah_Auth_Configuration_OAuth2Config_
  commentId: M:Cheetah.Auth.Extensions.ServiceCollectionExtensions.TryAddCheetahKeyedTokenService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Cheetah.Auth.Configuration.OAuth2Config)
  name.vb: TryAddCheetahKeyedTokenService(IServiceCollection, String, OAuth2Config)
  fullName: Cheetah.Auth.Extensions.ServiceCollectionExtensions.TryAddCheetahKeyedTokenService(Microsoft.Extensions.DependencyInjection.IServiceCollection, string, Cheetah.Auth.Configuration.OAuth2Config)
  fullName.vb: Cheetah.Auth.Extensions.ServiceCollectionExtensions.TryAddCheetahKeyedTokenService(Microsoft.Extensions.DependencyInjection.IServiceCollection, String, Cheetah.Auth.Configuration.OAuth2Config)
  nameWithType: ServiceCollectionExtensions.TryAddCheetahKeyedTokenService(IServiceCollection, string, OAuth2Config)
  nameWithType.vb: ServiceCollectionExtensions.TryAddCheetahKeyedTokenService(IServiceCollection, String, OAuth2Config)
- uid: Cheetah.Auth.Extensions.ServiceCollectionExtensions.TryAddCheetahKeyedTokenService*
  name: TryAddCheetahKeyedTokenService
  href: api/Cheetah.Auth/Cheetah.Auth.Extensions.ServiceCollectionExtensions.html#Cheetah_Auth_Extensions_ServiceCollectionExtensions_TryAddCheetahKeyedTokenService_
  commentId: Overload:Cheetah.Auth.Extensions.ServiceCollectionExtensions.TryAddCheetahKeyedTokenService
  isSpec: "True"
  fullName: Cheetah.Auth.Extensions.ServiceCollectionExtensions.TryAddCheetahKeyedTokenService
  nameWithType: ServiceCollectionExtensions.TryAddCheetahKeyedTokenService
- uid: Cheetah.Auth.Util
  name: Cheetah.Auth.Util
  href: api/Cheetah.Auth/Cheetah.Auth.Util.html
  commentId: N:Cheetah.Auth.Util
  fullName: Cheetah.Auth.Util
  nameWithType: Cheetah.Auth.Util
- uid: Cheetah.Auth.Util.DefaultHttpClientFactory
  name: DefaultHttpClientFactory
  href: api/Cheetah.Auth/Cheetah.Auth.Util.DefaultHttpClientFactory.html
  commentId: T:Cheetah.Auth.Util.DefaultHttpClientFactory
  fullName: Cheetah.Auth.Util.DefaultHttpClientFactory
  nameWithType: DefaultHttpClientFactory
- uid: Cheetah.Auth.Util.DefaultHttpClientFactory.CreateClient(System.String)
  name: CreateClient(string)
  href: api/Cheetah.Auth/Cheetah.Auth.Util.DefaultHttpClientFactory.html#Cheetah_Auth_Util_DefaultHttpClientFactory_CreateClient_System_String_
  commentId: M:Cheetah.Auth.Util.DefaultHttpClientFactory.CreateClient(System.String)
  name.vb: CreateClient(String)
  fullName: Cheetah.Auth.Util.DefaultHttpClientFactory.CreateClient(string)
  fullName.vb: Cheetah.Auth.Util.DefaultHttpClientFactory.CreateClient(String)
  nameWithType: DefaultHttpClientFactory.CreateClient(string)
  nameWithType.vb: DefaultHttpClientFactory.CreateClient(String)
- uid: Cheetah.Auth.Util.DefaultHttpClientFactory.CreateClient*
  name: CreateClient
  href: api/Cheetah.Auth/Cheetah.Auth.Util.DefaultHttpClientFactory.html#Cheetah_Auth_Util_DefaultHttpClientFactory_CreateClient_
  commentId: Overload:Cheetah.Auth.Util.DefaultHttpClientFactory.CreateClient
  isSpec: "True"
  fullName: Cheetah.Auth.Util.DefaultHttpClientFactory.CreateClient
  nameWithType: DefaultHttpClientFactory.CreateClient
- uid: Cheetah.Auth.Util.DefaultHttpClientFactory.Dispose
  name: Dispose()
  href: api/Cheetah.Auth/Cheetah.Auth.Util.DefaultHttpClientFactory.html#Cheetah_Auth_Util_DefaultHttpClientFactory_Dispose
  commentId: M:Cheetah.Auth.Util.DefaultHttpClientFactory.Dispose
  fullName: Cheetah.Auth.Util.DefaultHttpClientFactory.Dispose()
  nameWithType: DefaultHttpClientFactory.Dispose()
- uid: Cheetah.Auth.Util.DefaultHttpClientFactory.Dispose*
  name: Dispose
  href: api/Cheetah.Auth/Cheetah.Auth.Util.DefaultHttpClientFactory.html#Cheetah_Auth_Util_DefaultHttpClientFactory_Dispose_
  commentId: Overload:Cheetah.Auth.Util.DefaultHttpClientFactory.Dispose
  isSpec: "True"
  fullName: Cheetah.Auth.Util.DefaultHttpClientFactory.Dispose
  nameWithType: DefaultHttpClientFactory.Dispose
- uid: Cheetah.Kafka
  name: Cheetah.Kafka
  href: api/Cheetah.Kafka/Cheetah.Kafka.html
  commentId: N:Cheetah.Kafka
  fullName: Cheetah.Kafka
  nameWithType: Cheetah.Kafka
- uid: Cheetah.Kafka.AdminClientOptions
  name: AdminClientOptions
  href: api/Cheetah.Kafka/Cheetah.Kafka.AdminClientOptions.html
  commentId: T:Cheetah.Kafka.AdminClientOptions
  fullName: Cheetah.Kafka.AdminClientOptions
  nameWithType: AdminClientOptions
- uid: Cheetah.Kafka.AdminClientOptionsBuilder
  name: AdminClientOptionsBuilder
  href: api/Cheetah.Kafka/Cheetah.Kafka.AdminClientOptionsBuilder.html
  commentId: T:Cheetah.Kafka.AdminClientOptionsBuilder
  fullName: Cheetah.Kafka.AdminClientOptionsBuilder
  nameWithType: AdminClientOptionsBuilder
- uid: Cheetah.Kafka.AdminClientOptionsBuilder.Build(System.IServiceProvider)
  name: Build(IServiceProvider)
  href: api/Cheetah.Kafka/Cheetah.Kafka.AdminClientOptionsBuilder.html#Cheetah_Kafka_AdminClientOptionsBuilder_Build_System_IServiceProvider_
  commentId: M:Cheetah.Kafka.AdminClientOptionsBuilder.Build(System.IServiceProvider)
  fullName: Cheetah.Kafka.AdminClientOptionsBuilder.Build(System.IServiceProvider)
  nameWithType: AdminClientOptionsBuilder.Build(IServiceProvider)
- uid: Cheetah.Kafka.AdminClientOptionsBuilder.Build*
  name: Build
  href: api/Cheetah.Kafka/Cheetah.Kafka.AdminClientOptionsBuilder.html#Cheetah_Kafka_AdminClientOptionsBuilder_Build_
  commentId: Overload:Cheetah.Kafka.AdminClientOptionsBuilder.Build
  isSpec: "True"
  fullName: Cheetah.Kafka.AdminClientOptionsBuilder.Build
  nameWithType: AdminClientOptionsBuilder.Build
- uid: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureBuilder(System.Action{Confluent.Kafka.AdminClientBuilder})
  name: ConfigureBuilder(Action<AdminClientBuilder>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.AdminClientOptionsBuilder.html#Cheetah_Kafka_AdminClientOptionsBuilder_ConfigureBuilder_System_Action_Confluent_Kafka_AdminClientBuilder__
  commentId: M:Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureBuilder(System.Action{Confluent.Kafka.AdminClientBuilder})
  name.vb: ConfigureBuilder(Action(Of AdminClientBuilder))
  fullName: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureBuilder(System.Action<Confluent.Kafka.AdminClientBuilder>)
  fullName.vb: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureBuilder(System.Action(Of Confluent.Kafka.AdminClientBuilder))
  nameWithType: AdminClientOptionsBuilder.ConfigureBuilder(Action<AdminClientBuilder>)
  nameWithType.vb: AdminClientOptionsBuilder.ConfigureBuilder(Action(Of AdminClientBuilder))
- uid: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureBuilder*
  name: ConfigureBuilder
  href: api/Cheetah.Kafka/Cheetah.Kafka.AdminClientOptionsBuilder.html#Cheetah_Kafka_AdminClientOptionsBuilder_ConfigureBuilder_
  commentId: Overload:Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureBuilder
  isSpec: "True"
  fullName: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureBuilder
  nameWithType: AdminClientOptionsBuilder.ConfigureBuilder
- uid: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureClient(System.Action{Confluent.Kafka.AdminClientConfig})
  name: ConfigureClient(Action<AdminClientConfig>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.AdminClientOptionsBuilder.html#Cheetah_Kafka_AdminClientOptionsBuilder_ConfigureClient_System_Action_Confluent_Kafka_AdminClientConfig__
  commentId: M:Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureClient(System.Action{Confluent.Kafka.AdminClientConfig})
  name.vb: ConfigureClient(Action(Of AdminClientConfig))
  fullName: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureClient(System.Action<Confluent.Kafka.AdminClientConfig>)
  fullName.vb: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureClient(System.Action(Of Confluent.Kafka.AdminClientConfig))
  nameWithType: AdminClientOptionsBuilder.ConfigureClient(Action<AdminClientConfig>)
  nameWithType.vb: AdminClientOptionsBuilder.ConfigureClient(Action(Of AdminClientConfig))
- uid: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureClient*
  name: ConfigureClient
  href: api/Cheetah.Kafka/Cheetah.Kafka.AdminClientOptionsBuilder.html#Cheetah_Kafka_AdminClientOptionsBuilder_ConfigureClient_
  commentId: Overload:Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureClient
  isSpec: "True"
  fullName: Cheetah.Kafka.AdminClientOptionsBuilder.ConfigureClient
  nameWithType: AdminClientOptionsBuilder.ConfigureClient
- uid: Cheetah.Kafka.ClientFactoryOptions
  name: ClientFactoryOptions
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html
  commentId: T:Cheetah.Kafka.ClientFactoryOptions
  fullName: Cheetah.Kafka.ClientFactoryOptions
  nameWithType: ClientFactoryOptions
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient(System.Action{Confluent.Kafka.AdminClientConfig})
  name: ConfigureDefaultAdminClient(Action<AdminClientConfig>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultAdminClient_System_Action_Confluent_Kafka_AdminClientConfig__
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient(System.Action{Confluent.Kafka.AdminClientConfig})
  name.vb: ConfigureDefaultAdminClient(Action(Of AdminClientConfig))
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient(System.Action<Confluent.Kafka.AdminClientConfig>)
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient(System.Action(Of Confluent.Kafka.AdminClientConfig))
  nameWithType: ClientFactoryOptions.ConfigureDefaultAdminClient(Action<AdminClientConfig>)
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultAdminClient(Action(Of AdminClientConfig))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient*
  name: ConfigureDefaultAdminClient
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultAdminClient_
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient
  isSpec: "True"
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient
  nameWithType: ClientFactoryOptions.ConfigureDefaultAdminClient
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient(System.Action{Confluent.Kafka.ClientConfig})
  name: ConfigureDefaultClient(Action<ClientConfig>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultClient_System_Action_Confluent_Kafka_ClientConfig__
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient(System.Action{Confluent.Kafka.ClientConfig})
  name.vb: ConfigureDefaultClient(Action(Of ClientConfig))
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient(System.Action<Confluent.Kafka.ClientConfig>)
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient(System.Action(Of Confluent.Kafka.ClientConfig))
  nameWithType: ClientFactoryOptions.ConfigureDefaultClient(Action<ClientConfig>)
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultClient(Action(Of ClientConfig))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient*
  name: ConfigureDefaultClient
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultClient_
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient
  isSpec: "True"
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient
  nameWithType: ClientFactoryOptions.ConfigureDefaultClient
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer(System.Action{Confluent.Kafka.ConsumerConfig})
  name: ConfigureDefaultConsumer(Action<ConsumerConfig>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultConsumer_System_Action_Confluent_Kafka_ConsumerConfig__
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer(System.Action{Confluent.Kafka.ConsumerConfig})
  name.vb: ConfigureDefaultConsumer(Action(Of ConsumerConfig))
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer(System.Action<Confluent.Kafka.ConsumerConfig>)
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer(System.Action(Of Confluent.Kafka.ConsumerConfig))
  nameWithType: ClientFactoryOptions.ConfigureDefaultConsumer(Action<ConsumerConfig>)
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultConsumer(Action(Of ConsumerConfig))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer*
  name: ConfigureDefaultConsumer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultConsumer_
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer
  isSpec: "True"
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer
  nameWithType: ClientFactoryOptions.ConfigureDefaultConsumer
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Cheetah.Kafka.Serdes.IDeserializerProvider)
  name: ConfigureDefaultDeserializerProvider(IDeserializerProvider)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultDeserializerProvider_Cheetah_Kafka_Serdes_IDeserializerProvider_
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Cheetah.Kafka.Serdes.IDeserializerProvider)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Cheetah.Kafka.Serdes.IDeserializerProvider)
  nameWithType: ClientFactoryOptions.ConfigureDefaultDeserializerProvider(IDeserializerProvider)
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.IDeserializerProvider})
  name: ConfigureDefaultDeserializerProvider(Func<IServiceProvider, IDeserializerProvider>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultDeserializerProvider_System_Func_System_IServiceProvider_Cheetah_Kafka_Serdes_IDeserializerProvider__
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.IDeserializerProvider})
  name.vb: ConfigureDefaultDeserializerProvider(Func(Of IServiceProvider, IDeserializerProvider))
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(System.Func<System.IServiceProvider, Cheetah.Kafka.Serdes.IDeserializerProvider>)
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(System.Func(Of System.IServiceProvider, Cheetah.Kafka.Serdes.IDeserializerProvider))
  nameWithType: ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Func<IServiceProvider, IDeserializerProvider>)
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Func(Of IServiceProvider, IDeserializerProvider))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider*
  name: ConfigureDefaultDeserializerProvider
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultDeserializerProvider_
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider
  isSpec: "True"
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider
  nameWithType: ClientFactoryOptions.ConfigureDefaultDeserializerProvider
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer(System.Action{Confluent.Kafka.ProducerConfig})
  name: ConfigureDefaultProducer(Action<ProducerConfig>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultProducer_System_Action_Confluent_Kafka_ProducerConfig__
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer(System.Action{Confluent.Kafka.ProducerConfig})
  name.vb: ConfigureDefaultProducer(Action(Of ProducerConfig))
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer(System.Action<Confluent.Kafka.ProducerConfig>)
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer(System.Action(Of Confluent.Kafka.ProducerConfig))
  nameWithType: ClientFactoryOptions.ConfigureDefaultProducer(Action<ProducerConfig>)
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultProducer(Action(Of ProducerConfig))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer*
  name: ConfigureDefaultProducer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultProducer_
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer
  isSpec: "True"
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer
  nameWithType: ClientFactoryOptions.ConfigureDefaultProducer
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(Cheetah.Kafka.Serdes.ISerializerProvider)
  name: ConfigureDefaultSerializerProvider(ISerializerProvider)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultSerializerProvider_Cheetah_Kafka_Serdes_ISerializerProvider_
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(Cheetah.Kafka.Serdes.ISerializerProvider)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(Cheetah.Kafka.Serdes.ISerializerProvider)
  nameWithType: ClientFactoryOptions.ConfigureDefaultSerializerProvider(ISerializerProvider)
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.ISerializerProvider})
  name: ConfigureDefaultSerializerProvider(Func<IServiceProvider, ISerializerProvider>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultSerializerProvider_System_Func_System_IServiceProvider_Cheetah_Kafka_Serdes_ISerializerProvider__
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.ISerializerProvider})
  name.vb: ConfigureDefaultSerializerProvider(Func(Of IServiceProvider, ISerializerProvider))
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(System.Func<System.IServiceProvider, Cheetah.Kafka.Serdes.ISerializerProvider>)
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(System.Func(Of System.IServiceProvider, Cheetah.Kafka.Serdes.ISerializerProvider))
  nameWithType: ClientFactoryOptions.ConfigureDefaultSerializerProvider(Func<IServiceProvider, ISerializerProvider>)
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultSerializerProvider(Func(Of IServiceProvider, ISerializerProvider))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider*
  name: ConfigureDefaultSerializerProvider
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultSerializerProvider_
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider
  isSpec: "True"
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider
  nameWithType: ClientFactoryOptions.ConfigureDefaultSerializerProvider
- uid: Cheetah.Kafka.ClientOptions`2
  name: ClientOptions<TConfig, TBuilder>
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientOptions-2.html
  commentId: T:Cheetah.Kafka.ClientOptions`2
  name.vb: ClientOptions(Of TConfig, TBuilder)
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder)
  nameWithType: ClientOptions<TConfig, TBuilder>
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder)
- uid: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
  name: ConfigureBuilder(Action<TBuilder>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  commentId: M:Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
  name.vb: ConfigureBuilder(Action(Of TBuilder))
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>.ConfigureBuilder(System.Action<TBuilder>)
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder).ConfigureBuilder(System.Action(Of TBuilder))
  nameWithType: ClientOptions<TConfig, TBuilder>.ConfigureBuilder(Action<TBuilder>)
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder).ConfigureBuilder(Action(Of TBuilder))
- uid: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder*
  name: ConfigureBuilder
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_
  commentId: Overload:Cheetah.Kafka.ClientOptions`2.ConfigureBuilder
  isSpec: "True"
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>.ConfigureBuilder
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder).ConfigureBuilder
  nameWithType: ClientOptions<TConfig, TBuilder>.ConfigureBuilder
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder).ConfigureBuilder
- uid: Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
  name: ConfigureClient(Action<TConfig>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  commentId: M:Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
  name.vb: ConfigureClient(Action(Of TConfig))
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>.ConfigureClient(System.Action<TConfig>)
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder).ConfigureClient(System.Action(Of TConfig))
  nameWithType: ClientOptions<TConfig, TBuilder>.ConfigureClient(Action<TConfig>)
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder).ConfigureClient(Action(Of TConfig))
- uid: Cheetah.Kafka.ClientOptions`2.ConfigureClient*
  name: ConfigureClient
  href: api/Cheetah.Kafka/Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_
  commentId: Overload:Cheetah.Kafka.ClientOptions`2.ConfigureClient
  isSpec: "True"
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>.ConfigureClient
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder).ConfigureClient
  nameWithType: ClientOptions<TConfig, TBuilder>.ConfigureClient
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder).ConfigureClient
- uid: Cheetah.Kafka.Configuration
  name: Cheetah.Kafka.Configuration
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.html
  commentId: N:Cheetah.Kafka.Configuration
  fullName: Cheetah.Kafka.Configuration
  nameWithType: Cheetah.Kafka.Configuration
- uid: Cheetah.Kafka.Configuration.KafkaConfig
  name: KafkaConfig
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html
  commentId: T:Cheetah.Kafka.Configuration.KafkaConfig
  fullName: Cheetah.Kafka.Configuration.KafkaConfig
  nameWithType: KafkaConfig
- uid: Cheetah.Kafka.Configuration.KafkaConfig.GetClientConfig
  name: GetClientConfig()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_GetClientConfig
  commentId: M:Cheetah.Kafka.Configuration.KafkaConfig.GetClientConfig
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.GetClientConfig()
  nameWithType: KafkaConfig.GetClientConfig()
- uid: Cheetah.Kafka.Configuration.KafkaConfig.GetClientConfig*
  name: GetClientConfig
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_GetClientConfig_
  commentId: Overload:Cheetah.Kafka.Configuration.KafkaConfig.GetClientConfig
  isSpec: "True"
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.GetClientConfig
  nameWithType: KafkaConfig.GetClientConfig
- uid: Cheetah.Kafka.Configuration.KafkaConfig.OAuth2
  name: OAuth2
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_OAuth2
  commentId: P:Cheetah.Kafka.Configuration.KafkaConfig.OAuth2
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.OAuth2
  nameWithType: KafkaConfig.OAuth2
- uid: Cheetah.Kafka.Configuration.KafkaConfig.OAuth2*
  name: OAuth2
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_OAuth2_
  commentId: Overload:Cheetah.Kafka.Configuration.KafkaConfig.OAuth2
  isSpec: "True"
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.OAuth2
  nameWithType: KafkaConfig.OAuth2
- uid: Cheetah.Kafka.Configuration.KafkaConfig.Position
  name: Position
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_Position
  commentId: F:Cheetah.Kafka.Configuration.KafkaConfig.Position
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.Position
  nameWithType: KafkaConfig.Position
- uid: Cheetah.Kafka.Configuration.KafkaConfig.Principal
  name: Principal
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_Principal
  commentId: P:Cheetah.Kafka.Configuration.KafkaConfig.Principal
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.Principal
  nameWithType: KafkaConfig.Principal
- uid: Cheetah.Kafka.Configuration.KafkaConfig.Principal*
  name: Principal
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_Principal_
  commentId: Overload:Cheetah.Kafka.Configuration.KafkaConfig.Principal
  isSpec: "True"
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.Principal
  nameWithType: KafkaConfig.Principal
- uid: Cheetah.Kafka.Configuration.KafkaConfig.SaslMechanism
  name: SaslMechanism
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_SaslMechanism
  commentId: P:Cheetah.Kafka.Configuration.KafkaConfig.SaslMechanism
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.SaslMechanism
  nameWithType: KafkaConfig.SaslMechanism
- uid: Cheetah.Kafka.Configuration.KafkaConfig.SaslMechanism*
  name: SaslMechanism
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_SaslMechanism_
  commentId: Overload:Cheetah.Kafka.Configuration.KafkaConfig.SaslMechanism
  isSpec: "True"
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.SaslMechanism
  nameWithType: KafkaConfig.SaslMechanism
- uid: Cheetah.Kafka.Configuration.KafkaConfig.SecurityProtocol
  name: SecurityProtocol
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_SecurityProtocol
  commentId: P:Cheetah.Kafka.Configuration.KafkaConfig.SecurityProtocol
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.SecurityProtocol
  nameWithType: KafkaConfig.SecurityProtocol
- uid: Cheetah.Kafka.Configuration.KafkaConfig.SecurityProtocol*
  name: SecurityProtocol
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_SecurityProtocol_
  commentId: Overload:Cheetah.Kafka.Configuration.KafkaConfig.SecurityProtocol
  isSpec: "True"
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.SecurityProtocol
  nameWithType: KafkaConfig.SecurityProtocol
- uid: Cheetah.Kafka.Configuration.KafkaConfig.SslCaLocation
  name: SslCaLocation
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_SslCaLocation
  commentId: P:Cheetah.Kafka.Configuration.KafkaConfig.SslCaLocation
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.SslCaLocation
  nameWithType: KafkaConfig.SslCaLocation
- uid: Cheetah.Kafka.Configuration.KafkaConfig.SslCaLocation*
  name: SslCaLocation
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_SslCaLocation_
  commentId: Overload:Cheetah.Kafka.Configuration.KafkaConfig.SslCaLocation
  isSpec: "True"
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.SslCaLocation
  nameWithType: KafkaConfig.SslCaLocation
- uid: Cheetah.Kafka.Configuration.KafkaConfig.Url
  name: Url
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_Url
  commentId: P:Cheetah.Kafka.Configuration.KafkaConfig.Url
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.Url
  nameWithType: KafkaConfig.Url
- uid: Cheetah.Kafka.Configuration.KafkaConfig.Url*
  name: Url
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_Url_
  commentId: Overload:Cheetah.Kafka.Configuration.KafkaConfig.Url
  isSpec: "True"
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.Url
  nameWithType: KafkaConfig.Url
- uid: Cheetah.Kafka.Configuration.KafkaConfig.Validate
  name: Validate()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_Validate
  commentId: M:Cheetah.Kafka.Configuration.KafkaConfig.Validate
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.Validate()
  nameWithType: KafkaConfig.Validate()
- uid: Cheetah.Kafka.Configuration.KafkaConfig.Validate*
  name: Validate
  href: api/Cheetah.Kafka/Cheetah.Kafka.Configuration.KafkaConfig.html#Cheetah_Kafka_Configuration_KafkaConfig_Validate_
  commentId: Overload:Cheetah.Kafka.Configuration.KafkaConfig.Validate
  isSpec: "True"
  fullName: Cheetah.Kafka.Configuration.KafkaConfig.Validate
  nameWithType: KafkaConfig.Validate
- uid: Cheetah.Kafka.Constants
  name: Constants
  href: api/Cheetah.Kafka/Cheetah.Kafka.Constants.html
  commentId: T:Cheetah.Kafka.Constants
  fullName: Cheetah.Kafka.Constants
  nameWithType: Constants
- uid: Cheetah.Kafka.Constants.TokenServiceKey
  name: TokenServiceKey
  href: api/Cheetah.Kafka/Cheetah.Kafka.Constants.html#Cheetah_Kafka_Constants_TokenServiceKey
  commentId: F:Cheetah.Kafka.Constants.TokenServiceKey
  fullName: Cheetah.Kafka.Constants.TokenServiceKey
  nameWithType: Constants.TokenServiceKey
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2
  name: ConsumerOptionsBuilder<TKey, TValue>
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html
  commentId: T:Cheetah.Kafka.ConsumerOptionsBuilder`2
  name.vb: ConsumerOptionsBuilder(Of TKey, TValue)
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue)
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue)
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.Build
  name: Build()
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_Build
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.Build
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.Build()
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).Build()
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.Build()
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).Build()
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.Build(System.IServiceProvider)
  name: Build(IServiceProvider)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_Build_System_IServiceProvider_
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.Build(System.IServiceProvider)
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.Build(System.IServiceProvider)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).Build(System.IServiceProvider)
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.Build(IServiceProvider)
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).Build(IServiceProvider)
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.Build*
  name: Build
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_Build_
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.Build
  isSpec: "True"
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.Build
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).Build
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.Build
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).Build
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}})
  name: ConfigureBuilder(Action<ConsumerBuilder<TKey, TValue>>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_ConfigureBuilder_System_Action_Confluent_Kafka_ConsumerBuilder__0__1___
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}})
  name.vb: ConfigureBuilder(Action(Of ConsumerBuilder(Of TKey, TValue)))
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.ConfigureBuilder(System.Action<Confluent.Kafka.ConsumerBuilder<TKey, TValue>>)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).ConfigureBuilder(System.Action(Of Confluent.Kafka.ConsumerBuilder(Of TKey, TValue)))
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.ConfigureBuilder(Action<ConsumerBuilder<TKey, TValue>>)
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).ConfigureBuilder(Action(Of ConsumerBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder*
  name: ConfigureBuilder
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_ConfigureBuilder_
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder
  isSpec: "True"
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.ConfigureBuilder
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).ConfigureBuilder
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.ConfigureBuilder
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).ConfigureBuilder
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
  name: ConfigureClient(Action<ConsumerConfig>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_ConfigureClient_System_Action_Confluent_Kafka_ConsumerConfig__
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
  name.vb: ConfigureClient(Action(Of ConsumerConfig))
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.ConfigureClient(System.Action<Confluent.Kafka.ConsumerConfig>)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).ConfigureClient(System.Action(Of Confluent.Kafka.ConsumerConfig))
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.ConfigureClient(Action<ConsumerConfig>)
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).ConfigureClient(Action(Of ConsumerConfig))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient*
  name: ConfigureClient
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_ConfigureClient_
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient
  isSpec: "True"
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.ConfigureClient
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).ConfigureClient
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.ConfigureClient
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).ConfigureClient
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  name: SetKeyDeserializer(IDeserializer<TKey>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_SetKeyDeserializer_Confluent_Kafka_IDeserializer__0__
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  name.vb: SetKeyDeserializer(IDeserializer(Of TKey))
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer(Confluent.Kafka.IDeserializer<TKey>)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer(Confluent.Kafka.IDeserializer(Of TKey))
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer(IDeserializer<TKey>)
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer(IDeserializer(Of TKey))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`0}})
  name: SetKeyDeserializer(Func<IServiceProvider, IDeserializer<TKey>>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_SetKeyDeserializer_System_Func_System_IServiceProvider_Confluent_Kafka_IDeserializer__0___
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`0}})
  name.vb: SetKeyDeserializer(Func(Of IServiceProvider, IDeserializer(Of TKey)))
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer(System.Func<System.IServiceProvider, Confluent.Kafka.IDeserializer<TKey>>)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer(System.Func(Of System.IServiceProvider, Confluent.Kafka.IDeserializer(Of TKey)))
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer(Func<IServiceProvider, IDeserializer<TKey>>)
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer(Func(Of IServiceProvider, IDeserializer(Of TKey)))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer*
  name: SetKeyDeserializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_SetKeyDeserializer_
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer
  isSpec: "True"
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  name: SetValueDeserializer(IDeserializer<TValue>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_SetValueDeserializer_Confluent_Kafka_IDeserializer__1__
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  name.vb: SetValueDeserializer(IDeserializer(Of TValue))
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer(Confluent.Kafka.IDeserializer<TValue>)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer(Confluent.Kafka.IDeserializer(Of TValue))
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer(IDeserializer<TValue>)
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer(IDeserializer(Of TValue))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`1}})
  name: SetValueDeserializer(Func<IServiceProvider, IDeserializer<TValue>>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_SetValueDeserializer_System_Func_System_IServiceProvider_Confluent_Kafka_IDeserializer__1___
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`1}})
  name.vb: SetValueDeserializer(Func(Of IServiceProvider, IDeserializer(Of TValue)))
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer(System.Func<System.IServiceProvider, Confluent.Kafka.IDeserializer<TValue>>)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer(System.Func(Of System.IServiceProvider, Confluent.Kafka.IDeserializer(Of TValue)))
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer(Func<IServiceProvider, IDeserializer<TValue>>)
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer(Func(Of IServiceProvider, IDeserializer(Of TValue)))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer*
  name: SetValueDeserializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_SetValueDeserializer_
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer
  isSpec: "True"
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer
- uid: Cheetah.Kafka.ConsumerOptions`2
  name: ConsumerOptions<TKey, TValue>
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptions-2.html
  commentId: T:Cheetah.Kafka.ConsumerOptions`2
  name.vb: ConsumerOptions(Of TKey, TValue)
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue)
  nameWithType: ConsumerOptions<TKey, TValue>
  nameWithType.vb: ConsumerOptions(Of TKey, TValue)
- uid: Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  name: SetKeyDeserializer(IDeserializer<TKey>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptions-2.html#Cheetah_Kafka_ConsumerOptions_2_SetKeyDeserializer_Confluent_Kafka_IDeserializer__0__
  commentId: M:Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  name.vb: SetKeyDeserializer(IDeserializer(Of TKey))
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>.SetKeyDeserializer(Confluent.Kafka.IDeserializer<TKey>)
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue).SetKeyDeserializer(Confluent.Kafka.IDeserializer(Of TKey))
  nameWithType: ConsumerOptions<TKey, TValue>.SetKeyDeserializer(IDeserializer<TKey>)
  nameWithType.vb: ConsumerOptions(Of TKey, TValue).SetKeyDeserializer(IDeserializer(Of TKey))
- uid: Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer*
  name: SetKeyDeserializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptions-2.html#Cheetah_Kafka_ConsumerOptions_2_SetKeyDeserializer_
  commentId: Overload:Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer
  isSpec: "True"
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>.SetKeyDeserializer
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue).SetKeyDeserializer
  nameWithType: ConsumerOptions<TKey, TValue>.SetKeyDeserializer
  nameWithType.vb: ConsumerOptions(Of TKey, TValue).SetKeyDeserializer
- uid: Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  name: SetValueDeserializer(IDeserializer<TValue>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptions-2.html#Cheetah_Kafka_ConsumerOptions_2_SetValueDeserializer_Confluent_Kafka_IDeserializer__1__
  commentId: M:Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  name.vb: SetValueDeserializer(IDeserializer(Of TValue))
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>.SetValueDeserializer(Confluent.Kafka.IDeserializer<TValue>)
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue).SetValueDeserializer(Confluent.Kafka.IDeserializer(Of TValue))
  nameWithType: ConsumerOptions<TKey, TValue>.SetValueDeserializer(IDeserializer<TValue>)
  nameWithType.vb: ConsumerOptions(Of TKey, TValue).SetValueDeserializer(IDeserializer(Of TValue))
- uid: Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer*
  name: SetValueDeserializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ConsumerOptions-2.html#Cheetah_Kafka_ConsumerOptions_2_SetValueDeserializer_
  commentId: Overload:Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer
  isSpec: "True"
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>.SetValueDeserializer
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue).SetValueDeserializer
  nameWithType: ConsumerOptions<TKey, TValue>.SetValueDeserializer
  nameWithType.vb: ConsumerOptions(Of TKey, TValue).SetValueDeserializer
- uid: Cheetah.Kafka.Extensions
  name: Cheetah.Kafka.Extensions
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.html
  commentId: N:Cheetah.Kafka.Extensions
  fullName: Cheetah.Kafka.Extensions
  nameWithType: Cheetah.Kafka.Extensions
- uid: Cheetah.Kafka.Extensions.ClientInjector
  name: ClientInjector
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html
  commentId: T:Cheetah.Kafka.Extensions.ClientInjector
  fullName: Cheetah.Kafka.Extensions.ClientInjector
  nameWithType: ClientInjector
- uid: Cheetah.Kafka.Extensions.ClientInjector.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: ClientInjector(IServiceCollection)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector__ctor_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name.vb: New(IServiceCollection)
  fullName: Cheetah.Kafka.Extensions.ClientInjector.ClientInjector(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.New(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ClientInjector.ClientInjector(IServiceCollection)
  nameWithType.vb: ClientInjector.New(IServiceCollection)
- uid: Cheetah.Kafka.Extensions.ClientInjector.#ctor*
  name: ClientInjector
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector__ctor_
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.Kafka.Extensions.ClientInjector.ClientInjector
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.New
  nameWithType: ClientInjector.ClientInjector
  nameWithType.vb: ClientInjector.New
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient(System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  name: WithAdminClient(Action<AdminClientOptionsBuilder>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithAdminClient_System_Action_Cheetah_Kafka_AdminClientOptionsBuilder__
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient(System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  name.vb: WithAdminClient(Action(Of AdminClientOptionsBuilder))
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient(System.Action<Cheetah.Kafka.AdminClientOptionsBuilder>?)
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient(System.Action(Of Cheetah.Kafka.AdminClientOptionsBuilder))
  nameWithType: ClientInjector.WithAdminClient(Action<AdminClientOptionsBuilder>?)
  nameWithType.vb: ClientInjector.WithAdminClient(Action(Of AdminClientOptionsBuilder))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient*
  name: WithAdminClient
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithAdminClient_
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient
  isSpec: "True"
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithAdminClient
  nameWithType: ClientInjector.WithAdminClient
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer*
  name: WithConsumer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithConsumer_
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithConsumer
  isSpec: "True"
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer
  nameWithType: ClientInjector.WithConsumer
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer``2(System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  name: WithConsumer<TKey, TValue>(Action<ConsumerOptionsBuilder<TKey, TValue>>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithConsumer__2_System_Action_Cheetah_Kafka_ConsumerOptionsBuilder___0___1___
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithConsumer``2(System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  name.vb: WithConsumer(Of TKey, TValue)(Action(Of ConsumerOptionsBuilder(Of TKey, TValue)))
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer<TKey, TValue>(System.Action<Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>>?)
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithConsumer(Of TKey, TValue)(System.Action(Of Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue)))
  nameWithType: ClientInjector.WithConsumer<TKey, TValue>(Action<ConsumerOptionsBuilder<TKey, TValue>>?)
  nameWithType.vb: ClientInjector.WithConsumer(Of TKey, TValue)(Action(Of ConsumerOptionsBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient(System.Object,System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  name: WithKeyedAdminClient(object?, Action<AdminClientOptionsBuilder>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithKeyedAdminClient_System_Object_System_Action_Cheetah_Kafka_AdminClientOptionsBuilder__
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient(System.Object,System.Action{Cheetah.Kafka.AdminClientOptionsBuilder})
  name.vb: WithKeyedAdminClient(Object, Action(Of AdminClientOptionsBuilder))
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient(object?, System.Action<Cheetah.Kafka.AdminClientOptionsBuilder>?)
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient(Object, System.Action(Of Cheetah.Kafka.AdminClientOptionsBuilder))
  nameWithType: ClientInjector.WithKeyedAdminClient(object?, Action<AdminClientOptionsBuilder>?)
  nameWithType.vb: ClientInjector.WithKeyedAdminClient(Object, Action(Of AdminClientOptionsBuilder))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient*
  name: WithKeyedAdminClient
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithKeyedAdminClient_
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient
  isSpec: "True"
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedAdminClient
  nameWithType: ClientInjector.WithKeyedAdminClient
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer*
  name: WithKeyedConsumer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithKeyedConsumer_
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer
  isSpec: "True"
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer
  nameWithType: ClientInjector.WithKeyedConsumer
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer``2(System.Object,System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  name: WithKeyedConsumer<TKey, TValue>(object?, Action<ConsumerOptionsBuilder<TKey, TValue>>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithKeyedConsumer__2_System_Object_System_Action_Cheetah_Kafka_ConsumerOptionsBuilder___0___1___
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer``2(System.Object,System.Action{Cheetah.Kafka.ConsumerOptionsBuilder{``0,``1}})
  name.vb: WithKeyedConsumer(Of TKey, TValue)(Object, Action(Of ConsumerOptionsBuilder(Of TKey, TValue)))
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer<TKey, TValue>(object?, System.Action<Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>>?)
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedConsumer(Of TKey, TValue)(Object, System.Action(Of Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue)))
  nameWithType: ClientInjector.WithKeyedConsumer<TKey, TValue>(object?, Action<ConsumerOptionsBuilder<TKey, TValue>>?)
  nameWithType.vb: ClientInjector.WithKeyedConsumer(Of TKey, TValue)(Object, Action(Of ConsumerOptionsBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer*
  name: WithKeyedProducer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithKeyedProducer_
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer
  isSpec: "True"
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer
  nameWithType: ClientInjector.WithKeyedProducer
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer``2(System.Object,System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  name: WithKeyedProducer<TKey, TValue>(object?, Action<ProducerOptionsBuilder<TKey, TValue>>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithKeyedProducer__2_System_Object_System_Action_Cheetah_Kafka_ProducerOptionsBuilder___0___1___
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer``2(System.Object,System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  name.vb: WithKeyedProducer(Of TKey, TValue)(Object, Action(Of ProducerOptionsBuilder(Of TKey, TValue)))
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer<TKey, TValue>(object?, System.Action<Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>>?)
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithKeyedProducer(Of TKey, TValue)(Object, System.Action(Of Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue)))
  nameWithType: ClientInjector.WithKeyedProducer<TKey, TValue>(object?, Action<ProducerOptionsBuilder<TKey, TValue>>?)
  nameWithType.vb: ClientInjector.WithKeyedProducer(Of TKey, TValue)(Object, Action(Of ProducerOptionsBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithProducer*
  name: WithProducer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithProducer_
  commentId: Overload:Cheetah.Kafka.Extensions.ClientInjector.WithProducer
  isSpec: "True"
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithProducer
  nameWithType: ClientInjector.WithProducer
- uid: Cheetah.Kafka.Extensions.ClientInjector.WithProducer``2(System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  name: WithProducer<TKey, TValue>(Action<ProducerOptionsBuilder<TKey, TValue>>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ClientInjector.html#Cheetah_Kafka_Extensions_ClientInjector_WithProducer__2_System_Action_Cheetah_Kafka_ProducerOptionsBuilder___0___1___
  commentId: M:Cheetah.Kafka.Extensions.ClientInjector.WithProducer``2(System.Action{Cheetah.Kafka.ProducerOptionsBuilder{``0,``1}})
  name.vb: WithProducer(Of TKey, TValue)(Action(Of ProducerOptionsBuilder(Of TKey, TValue)))
  fullName: Cheetah.Kafka.Extensions.ClientInjector.WithProducer<TKey, TValue>(System.Action<Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>>?)
  fullName.vb: Cheetah.Kafka.Extensions.ClientInjector.WithProducer(Of TKey, TValue)(System.Action(Of Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue)))
  nameWithType: ClientInjector.WithProducer<TKey, TValue>(Action<ProducerOptionsBuilder<TKey, TValue>>?)
  nameWithType.vb: ClientInjector.WithProducer(Of TKey, TValue)(Action(Of ProducerOptionsBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.Extensions.KafkaExtensions
  name: KafkaExtensions
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.KafkaExtensions.html
  commentId: T:Cheetah.Kafka.Extensions.KafkaExtensions
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions
  nameWithType: KafkaExtensions
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  name: AddCheetahOAuthentication(AdminClientBuilder, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.KafkaExtensions.html#Cheetah_Kafka_Extensions_KafkaExtensions_AddCheetahOAuthentication_Confluent_Kafka_AdminClientBuilder_System_Func_System_Threading_Tasks_Task_System_ValueTuple_System_String_System_Int64_System_String____Microsoft_Extensions_Logging_ILogger_
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(AdminClientBuilder, Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder, System.Func<System.Threading.Tasks.Task<(string AccessToken, long Expiration, string Principal)>>, Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder, System.Func(Of System.Threading.Tasks.Task(Of (AccessToken As String, Expiration As Long, Principal As String))), Microsoft.Extensions.Logging.ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication(AdminClientBuilder, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(AdminClientBuilder, Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  name: AddCheetahOAuthentication(AdminClientBuilder, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.KafkaExtensions.html#Cheetah_Kafka_Extensions_KafkaExtensions_AddCheetahOAuthentication_Confluent_Kafka_AdminClientBuilder_System_Func_System_ValueTuple_System_String_System_Int64_System_String___Microsoft_Extensions_Logging_ILogger_
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder,System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(AdminClientBuilder, Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder, System.Func<(string AccessToken, long Expiration, string Principal)>, Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Confluent.Kafka.AdminClientBuilder, System.Func(Of (AccessToken As String, Expiration As Long, Principal As String)), Microsoft.Extensions.Logging.ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication(AdminClientBuilder, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(AdminClientBuilder, Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication*
  name: AddCheetahOAuthentication
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.KafkaExtensions.html#Cheetah_Kafka_Extensions_KafkaExtensions_AddCheetahOAuthentication_
  commentId: Overload:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication
  isSpec: "True"
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication
  nameWithType: KafkaExtensions.AddCheetahOAuthentication
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  name: AddCheetahOAuthentication<TKey, TValue>(ConsumerBuilder<TKey, TValue>, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.KafkaExtensions.html#Cheetah_Kafka_Extensions_KafkaExtensions_AddCheetahOAuthentication__2_Confluent_Kafka_ConsumerBuilder___0___1__System_Func_System_Threading_Tasks_Task_System_ValueTuple_System_String_System_Int64_System_String____Microsoft_Extensions_Logging_ILogger_
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(Of TKey, TValue)(ConsumerBuilder(Of TKey, TValue), Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(Confluent.Kafka.ConsumerBuilder<TKey, TValue>, System.Func<System.Threading.Tasks.Task<(string AccessToken, long Expiration, string Principal)>>, Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(Confluent.Kafka.ConsumerBuilder(Of TKey, TValue), System.Func(Of System.Threading.Tasks.Task(Of (AccessToken As String, Expiration As Long, Principal As String))), Microsoft.Extensions.Logging.ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(ConsumerBuilder<TKey, TValue>, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(ConsumerBuilder(Of TKey, TValue), Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  name: AddCheetahOAuthentication<TKey, TValue>(ConsumerBuilder<TKey, TValue>, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.KafkaExtensions.html#Cheetah_Kafka_Extensions_KafkaExtensions_AddCheetahOAuthentication__2_Confluent_Kafka_ConsumerBuilder___0___1__System_Func_System_ValueTuple_System_String_System_Int64_System_String___Microsoft_Extensions_Logging_ILogger_
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ConsumerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(Of TKey, TValue)(ConsumerBuilder(Of TKey, TValue), Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(Confluent.Kafka.ConsumerBuilder<TKey, TValue>, System.Func<(string AccessToken, long Expiration, string Principal)>, Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(Confluent.Kafka.ConsumerBuilder(Of TKey, TValue), System.Func(Of (AccessToken As String, Expiration As Long, Principal As String)), Microsoft.Extensions.Logging.ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(ConsumerBuilder<TKey, TValue>, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(ConsumerBuilder(Of TKey, TValue), Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  name: AddCheetahOAuthentication<TKey, TValue>(ProducerBuilder<TKey, TValue>, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.KafkaExtensions.html#Cheetah_Kafka_Extensions_KafkaExtensions_AddCheetahOAuthentication__2_Confluent_Kafka_ProducerBuilder___0___1__System_Func_System_Threading_Tasks_Task_System_ValueTuple_System_String_System_Int64_System_String____Microsoft_Extensions_Logging_ILogger_
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int64,System.String}}},Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(Of TKey, TValue)(ProducerBuilder(Of TKey, TValue), Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(Confluent.Kafka.ProducerBuilder<TKey, TValue>, System.Func<System.Threading.Tasks.Task<(string AccessToken, long Expiration, string Principal)>>, Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(Confluent.Kafka.ProducerBuilder(Of TKey, TValue), System.Func(Of System.Threading.Tasks.Task(Of (AccessToken As String, Expiration As Long, Principal As String))), Microsoft.Extensions.Logging.ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(ProducerBuilder<TKey, TValue>, Func<Task<(string AccessToken, long Expiration, string Principal)>>, ILogger)
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(ProducerBuilder(Of TKey, TValue), Func(Of Task(Of (AccessToken As String, Expiration As Long, Principal As String))), ILogger)
- uid: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  name: AddCheetahOAuthentication<TKey, TValue>(ProducerBuilder<TKey, TValue>, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.KafkaExtensions.html#Cheetah_Kafka_Extensions_KafkaExtensions_AddCheetahOAuthentication__2_Confluent_Kafka_ProducerBuilder___0___1__System_Func_System_ValueTuple_System_String_System_Int64_System_String___Microsoft_Extensions_Logging_ILogger_
  commentId: M:Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Func{System.ValueTuple{System.String,System.Int64,System.String}},Microsoft.Extensions.Logging.ILogger)
  name.vb: AddCheetahOAuthentication(Of TKey, TValue)(ProducerBuilder(Of TKey, TValue), Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
  fullName: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(Confluent.Kafka.ProducerBuilder<TKey, TValue>, System.Func<(string AccessToken, long Expiration, string Principal)>, Microsoft.Extensions.Logging.ILogger)
  fullName.vb: Cheetah.Kafka.Extensions.KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(Confluent.Kafka.ProducerBuilder(Of TKey, TValue), System.Func(Of (AccessToken As String, Expiration As Long, Principal As String)), Microsoft.Extensions.Logging.ILogger)
  nameWithType: KafkaExtensions.AddCheetahOAuthentication<TKey, TValue>(ProducerBuilder<TKey, TValue>, Func<(string AccessToken, long Expiration, string Principal)>, ILogger)
  nameWithType.vb: KafkaExtensions.AddCheetahOAuthentication(Of TKey, TValue)(ProducerBuilder(Of TKey, TValue), Func(Of (AccessToken As String, Expiration As Long, Principal As String)), ILogger)
- uid: Cheetah.Kafka.Extensions.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ServiceCollectionExtensions.html
  commentId: T:Cheetah.Kafka.Extensions.ServiceCollectionExtensions
  fullName: Cheetah.Kafka.Extensions.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Cheetah.Kafka.Extensions.ServiceCollectionExtensions.AddCheetahKafka(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Cheetah.Kafka.ClientFactoryOptions})
  name: AddCheetahKafka(IServiceCollection, IConfiguration, Action<ClientFactoryOptions>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ServiceCollectionExtensions.html#Cheetah_Kafka_Extensions_ServiceCollectionExtensions_AddCheetahKafka_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_System_Action_Cheetah_Kafka_ClientFactoryOptions__
  commentId: M:Cheetah.Kafka.Extensions.ServiceCollectionExtensions.AddCheetahKafka(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Cheetah.Kafka.ClientFactoryOptions})
  name.vb: AddCheetahKafka(IServiceCollection, IConfiguration, Action(Of ClientFactoryOptions))
  fullName: Cheetah.Kafka.Extensions.ServiceCollectionExtensions.AddCheetahKafka(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Cheetah.Kafka.ClientFactoryOptions>?)
  fullName.vb: Cheetah.Kafka.Extensions.ServiceCollectionExtensions.AddCheetahKafka(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Cheetah.Kafka.ClientFactoryOptions))
  nameWithType: ServiceCollectionExtensions.AddCheetahKafka(IServiceCollection, IConfiguration, Action<ClientFactoryOptions>?)
  nameWithType.vb: ServiceCollectionExtensions.AddCheetahKafka(IServiceCollection, IConfiguration, Action(Of ClientFactoryOptions))
- uid: Cheetah.Kafka.Extensions.ServiceCollectionExtensions.AddCheetahKafka*
  name: AddCheetahKafka
  href: api/Cheetah.Kafka/Cheetah.Kafka.Extensions.ServiceCollectionExtensions.html#Cheetah_Kafka_Extensions_ServiceCollectionExtensions_AddCheetahKafka_
  commentId: Overload:Cheetah.Kafka.Extensions.ServiceCollectionExtensions.AddCheetahKafka
  isSpec: "True"
  fullName: Cheetah.Kafka.Extensions.ServiceCollectionExtensions.AddCheetahKafka
  nameWithType: ServiceCollectionExtensions.AddCheetahKafka
- uid: Cheetah.Kafka.KafkaClientFactory
  name: KafkaClientFactory
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html
  commentId: T:Cheetah.Kafka.KafkaClientFactory
  fullName: Cheetah.Kafka.KafkaClientFactory
  nameWithType: KafkaClientFactory
- uid: Cheetah.Kafka.KafkaClientFactory.#ctor(Cheetah.Auth.Authentication.ITokenService,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Cheetah.Kafka.Configuration.KafkaConfig},Cheetah.Kafka.ClientFactoryOptions,Cheetah.Kafka.Serdes.ISerializerProvider,Cheetah.Kafka.Serdes.IDeserializerProvider)
  name: KafkaClientFactory(ITokenService?, ILoggerFactory, IOptions<KafkaConfig>, ClientFactoryOptions, ISerializerProvider?, IDeserializerProvider?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory__ctor_Cheetah_Auth_Authentication_ITokenService_Microsoft_Extensions_Logging_ILoggerFactory_Microsoft_Extensions_Options_IOptions_Cheetah_Kafka_Configuration_KafkaConfig__Cheetah_Kafka_ClientFactoryOptions_Cheetah_Kafka_Serdes_ISerializerProvider_Cheetah_Kafka_Serdes_IDeserializerProvider_
  commentId: M:Cheetah.Kafka.KafkaClientFactory.#ctor(Cheetah.Auth.Authentication.ITokenService,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Cheetah.Kafka.Configuration.KafkaConfig},Cheetah.Kafka.ClientFactoryOptions,Cheetah.Kafka.Serdes.ISerializerProvider,Cheetah.Kafka.Serdes.IDeserializerProvider)
  name.vb: New(ITokenService, ILoggerFactory, IOptions(Of KafkaConfig), ClientFactoryOptions, ISerializerProvider, IDeserializerProvider)
  fullName: Cheetah.Kafka.KafkaClientFactory.KafkaClientFactory(Cheetah.Auth.Authentication.ITokenService?, Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Options.IOptions<Cheetah.Kafka.Configuration.KafkaConfig>, Cheetah.Kafka.ClientFactoryOptions, Cheetah.Kafka.Serdes.ISerializerProvider?, Cheetah.Kafka.Serdes.IDeserializerProvider?)
  fullName.vb: Cheetah.Kafka.KafkaClientFactory.New(Cheetah.Auth.Authentication.ITokenService, Microsoft.Extensions.Logging.ILoggerFactory, Microsoft.Extensions.Options.IOptions(Of Cheetah.Kafka.Configuration.KafkaConfig), Cheetah.Kafka.ClientFactoryOptions, Cheetah.Kafka.Serdes.ISerializerProvider, Cheetah.Kafka.Serdes.IDeserializerProvider)
  nameWithType: KafkaClientFactory.KafkaClientFactory(ITokenService?, ILoggerFactory, IOptions<KafkaConfig>, ClientFactoryOptions, ISerializerProvider?, IDeserializerProvider?)
  nameWithType.vb: KafkaClientFactory.New(ITokenService, ILoggerFactory, IOptions(Of KafkaConfig), ClientFactoryOptions, ISerializerProvider, IDeserializerProvider)
- uid: Cheetah.Kafka.KafkaClientFactory.#ctor*
  name: KafkaClientFactory
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory__ctor_
  commentId: Overload:Cheetah.Kafka.KafkaClientFactory.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.Kafka.KafkaClientFactory.KafkaClientFactory
  fullName.vb: Cheetah.Kafka.KafkaClientFactory.New
  nameWithType: KafkaClientFactory.KafkaClientFactory
  nameWithType.vb: KafkaClientFactory.New
- uid: Cheetah.Kafka.KafkaClientFactory.CreateAdminClient(Cheetah.Kafka.AdminClientOptions)
  name: CreateAdminClient(AdminClientOptions?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateAdminClient_Cheetah_Kafka_AdminClientOptions_
  commentId: M:Cheetah.Kafka.KafkaClientFactory.CreateAdminClient(Cheetah.Kafka.AdminClientOptions)
  name.vb: CreateAdminClient(AdminClientOptions)
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateAdminClient(Cheetah.Kafka.AdminClientOptions?)
  fullName.vb: Cheetah.Kafka.KafkaClientFactory.CreateAdminClient(Cheetah.Kafka.AdminClientOptions)
  nameWithType: KafkaClientFactory.CreateAdminClient(AdminClientOptions?)
  nameWithType.vb: KafkaClientFactory.CreateAdminClient(AdminClientOptions)
- uid: Cheetah.Kafka.KafkaClientFactory.CreateAdminClient*
  name: CreateAdminClient
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateAdminClient_
  commentId: Overload:Cheetah.Kafka.KafkaClientFactory.CreateAdminClient
  isSpec: "True"
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateAdminClient
  nameWithType: KafkaClientFactory.CreateAdminClient
- uid: Cheetah.Kafka.KafkaClientFactory.CreateAdminClientBuilder(Cheetah.Kafka.AdminClientOptions)
  name: CreateAdminClientBuilder(AdminClientOptions?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateAdminClientBuilder_Cheetah_Kafka_AdminClientOptions_
  commentId: M:Cheetah.Kafka.KafkaClientFactory.CreateAdminClientBuilder(Cheetah.Kafka.AdminClientOptions)
  name.vb: CreateAdminClientBuilder(AdminClientOptions)
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateAdminClientBuilder(Cheetah.Kafka.AdminClientOptions?)
  fullName.vb: Cheetah.Kafka.KafkaClientFactory.CreateAdminClientBuilder(Cheetah.Kafka.AdminClientOptions)
  nameWithType: KafkaClientFactory.CreateAdminClientBuilder(AdminClientOptions?)
  nameWithType.vb: KafkaClientFactory.CreateAdminClientBuilder(AdminClientOptions)
- uid: Cheetah.Kafka.KafkaClientFactory.CreateAdminClientBuilder*
  name: CreateAdminClientBuilder
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateAdminClientBuilder_
  commentId: Overload:Cheetah.Kafka.KafkaClientFactory.CreateAdminClientBuilder
  isSpec: "True"
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateAdminClientBuilder
  nameWithType: KafkaClientFactory.CreateAdminClientBuilder
- uid: Cheetah.Kafka.KafkaClientFactory.CreateConsumer*
  name: CreateConsumer
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateConsumer_
  commentId: Overload:Cheetah.Kafka.KafkaClientFactory.CreateConsumer
  isSpec: "True"
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateConsumer
  nameWithType: KafkaClientFactory.CreateConsumer
- uid: Cheetah.Kafka.KafkaClientFactory.CreateConsumerBuilder*
  name: CreateConsumerBuilder
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateConsumerBuilder_
  commentId: Overload:Cheetah.Kafka.KafkaClientFactory.CreateConsumerBuilder
  isSpec: "True"
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateConsumerBuilder
  nameWithType: KafkaClientFactory.CreateConsumerBuilder
- uid: Cheetah.Kafka.KafkaClientFactory.CreateConsumerBuilder``2(Cheetah.Kafka.ConsumerOptions{``0,``1})
  name: CreateConsumerBuilder<TKey, TValue>(ConsumerOptions<TKey, TValue>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateConsumerBuilder__2_Cheetah_Kafka_ConsumerOptions___0___1__
  commentId: M:Cheetah.Kafka.KafkaClientFactory.CreateConsumerBuilder``2(Cheetah.Kafka.ConsumerOptions{``0,``1})
  name.vb: CreateConsumerBuilder(Of TKey, TValue)(ConsumerOptions(Of TKey, TValue))
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateConsumerBuilder<TKey, TValue>(Cheetah.Kafka.ConsumerOptions<TKey, TValue>?)
  fullName.vb: Cheetah.Kafka.KafkaClientFactory.CreateConsumerBuilder(Of TKey, TValue)(Cheetah.Kafka.ConsumerOptions(Of TKey, TValue))
  nameWithType: KafkaClientFactory.CreateConsumerBuilder<TKey, TValue>(ConsumerOptions<TKey, TValue>?)
  nameWithType.vb: KafkaClientFactory.CreateConsumerBuilder(Of TKey, TValue)(ConsumerOptions(Of TKey, TValue))
- uid: Cheetah.Kafka.KafkaClientFactory.CreateConsumer``2(Cheetah.Kafka.ConsumerOptions{``0,``1})
  name: CreateConsumer<TKey, TValue>(ConsumerOptions<TKey, TValue>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateConsumer__2_Cheetah_Kafka_ConsumerOptions___0___1__
  commentId: M:Cheetah.Kafka.KafkaClientFactory.CreateConsumer``2(Cheetah.Kafka.ConsumerOptions{``0,``1})
  name.vb: CreateConsumer(Of TKey, TValue)(ConsumerOptions(Of TKey, TValue))
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateConsumer<TKey, TValue>(Cheetah.Kafka.ConsumerOptions<TKey, TValue>?)
  fullName.vb: Cheetah.Kafka.KafkaClientFactory.CreateConsumer(Of TKey, TValue)(Cheetah.Kafka.ConsumerOptions(Of TKey, TValue))
  nameWithType: KafkaClientFactory.CreateConsumer<TKey, TValue>(ConsumerOptions<TKey, TValue>?)
  nameWithType.vb: KafkaClientFactory.CreateConsumer(Of TKey, TValue)(ConsumerOptions(Of TKey, TValue))
- uid: Cheetah.Kafka.KafkaClientFactory.CreateProducer*
  name: CreateProducer
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateProducer_
  commentId: Overload:Cheetah.Kafka.KafkaClientFactory.CreateProducer
  isSpec: "True"
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateProducer
  nameWithType: KafkaClientFactory.CreateProducer
- uid: Cheetah.Kafka.KafkaClientFactory.CreateProducerBuilder*
  name: CreateProducerBuilder
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateProducerBuilder_
  commentId: Overload:Cheetah.Kafka.KafkaClientFactory.CreateProducerBuilder
  isSpec: "True"
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateProducerBuilder
  nameWithType: KafkaClientFactory.CreateProducerBuilder
- uid: Cheetah.Kafka.KafkaClientFactory.CreateProducerBuilder``2(Cheetah.Kafka.ProducerOptions{``0,``1})
  name: CreateProducerBuilder<TKey, TValue>(ProducerOptions<TKey, TValue>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateProducerBuilder__2_Cheetah_Kafka_ProducerOptions___0___1__
  commentId: M:Cheetah.Kafka.KafkaClientFactory.CreateProducerBuilder``2(Cheetah.Kafka.ProducerOptions{``0,``1})
  name.vb: CreateProducerBuilder(Of TKey, TValue)(ProducerOptions(Of TKey, TValue))
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateProducerBuilder<TKey, TValue>(Cheetah.Kafka.ProducerOptions<TKey, TValue>?)
  fullName.vb: Cheetah.Kafka.KafkaClientFactory.CreateProducerBuilder(Of TKey, TValue)(Cheetah.Kafka.ProducerOptions(Of TKey, TValue))
  nameWithType: KafkaClientFactory.CreateProducerBuilder<TKey, TValue>(ProducerOptions<TKey, TValue>?)
  nameWithType.vb: KafkaClientFactory.CreateProducerBuilder(Of TKey, TValue)(ProducerOptions(Of TKey, TValue))
- uid: Cheetah.Kafka.KafkaClientFactory.CreateProducer``2(Cheetah.Kafka.ProducerOptions{``0,``1})
  name: CreateProducer<TKey, TValue>(ProducerOptions<TKey, TValue>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.KafkaClientFactory.html#Cheetah_Kafka_KafkaClientFactory_CreateProducer__2_Cheetah_Kafka_ProducerOptions___0___1__
  commentId: M:Cheetah.Kafka.KafkaClientFactory.CreateProducer``2(Cheetah.Kafka.ProducerOptions{``0,``1})
  name.vb: CreateProducer(Of TKey, TValue)(ProducerOptions(Of TKey, TValue))
  fullName: Cheetah.Kafka.KafkaClientFactory.CreateProducer<TKey, TValue>(Cheetah.Kafka.ProducerOptions<TKey, TValue>?)
  fullName.vb: Cheetah.Kafka.KafkaClientFactory.CreateProducer(Of TKey, TValue)(Cheetah.Kafka.ProducerOptions(Of TKey, TValue))
  nameWithType: KafkaClientFactory.CreateProducer<TKey, TValue>(ProducerOptions<TKey, TValue>?)
  nameWithType.vb: KafkaClientFactory.CreateProducer(Of TKey, TValue)(ProducerOptions(Of TKey, TValue))
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2
  name: ProducerOptionsBuilder<TKey, TValue>
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html
  commentId: T:Cheetah.Kafka.ProducerOptionsBuilder`2
  name.vb: ProducerOptionsBuilder(Of TKey, TValue)
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue)
  nameWithType: ProducerOptionsBuilder<TKey, TValue>
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue)
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.Build
  name: Build()
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_Build
  commentId: M:Cheetah.Kafka.ProducerOptionsBuilder`2.Build
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.Build()
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).Build()
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.Build()
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).Build()
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.Build(System.IServiceProvider)
  name: Build(IServiceProvider)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_Build_System_IServiceProvider_
  commentId: M:Cheetah.Kafka.ProducerOptionsBuilder`2.Build(System.IServiceProvider)
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.Build(System.IServiceProvider)
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).Build(System.IServiceProvider)
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.Build(IServiceProvider)
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).Build(IServiceProvider)
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.Build*
  name: Build
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_Build_
  commentId: Overload:Cheetah.Kafka.ProducerOptionsBuilder`2.Build
  isSpec: "True"
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.Build
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).Build
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.Build
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).Build
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.ConfigureBuilder(System.Action{Confluent.Kafka.ProducerBuilder{`0,`1}})
  name: ConfigureBuilder(Action<ProducerBuilder<TKey, TValue>>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_ConfigureBuilder_System_Action_Confluent_Kafka_ProducerBuilder__0__1___
  commentId: M:Cheetah.Kafka.ProducerOptionsBuilder`2.ConfigureBuilder(System.Action{Confluent.Kafka.ProducerBuilder{`0,`1}})
  name.vb: ConfigureBuilder(Action(Of ProducerBuilder(Of TKey, TValue)))
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.ConfigureBuilder(System.Action<Confluent.Kafka.ProducerBuilder<TKey, TValue>>)
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).ConfigureBuilder(System.Action(Of Confluent.Kafka.ProducerBuilder(Of TKey, TValue)))
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.ConfigureBuilder(Action<ProducerBuilder<TKey, TValue>>)
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).ConfigureBuilder(Action(Of ProducerBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.ConfigureBuilder*
  name: ConfigureBuilder
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_ConfigureBuilder_
  commentId: Overload:Cheetah.Kafka.ProducerOptionsBuilder`2.ConfigureBuilder
  isSpec: "True"
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.ConfigureBuilder
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).ConfigureBuilder
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.ConfigureBuilder
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).ConfigureBuilder
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.ConfigureClient(System.Action{Confluent.Kafka.ProducerConfig})
  name: ConfigureClient(Action<ProducerConfig>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_ConfigureClient_System_Action_Confluent_Kafka_ProducerConfig__
  commentId: M:Cheetah.Kafka.ProducerOptionsBuilder`2.ConfigureClient(System.Action{Confluent.Kafka.ProducerConfig})
  name.vb: ConfigureClient(Action(Of ProducerConfig))
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.ConfigureClient(System.Action<Confluent.Kafka.ProducerConfig>)
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).ConfigureClient(System.Action(Of Confluent.Kafka.ProducerConfig))
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.ConfigureClient(Action<ProducerConfig>)
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).ConfigureClient(Action(Of ProducerConfig))
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.ConfigureClient*
  name: ConfigureClient
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_ConfigureClient_
  commentId: Overload:Cheetah.Kafka.ProducerOptionsBuilder`2.ConfigureClient
  isSpec: "True"
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.ConfigureClient
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).ConfigureClient
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.ConfigureClient
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).ConfigureClient
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.SetKeySerializer(Confluent.Kafka.ISerializer{`0})
  name: SetKeySerializer(ISerializer<TKey>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_SetKeySerializer_Confluent_Kafka_ISerializer__0__
  commentId: M:Cheetah.Kafka.ProducerOptionsBuilder`2.SetKeySerializer(Confluent.Kafka.ISerializer{`0})
  name.vb: SetKeySerializer(ISerializer(Of TKey))
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.SetKeySerializer(Confluent.Kafka.ISerializer<TKey>)
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).SetKeySerializer(Confluent.Kafka.ISerializer(Of TKey))
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.SetKeySerializer(ISerializer<TKey>)
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).SetKeySerializer(ISerializer(Of TKey))
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.SetKeySerializer(System.Func{System.IServiceProvider,Confluent.Kafka.ISerializer{`0}})
  name: SetKeySerializer(Func<IServiceProvider, ISerializer<TKey>>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_SetKeySerializer_System_Func_System_IServiceProvider_Confluent_Kafka_ISerializer__0___
  commentId: M:Cheetah.Kafka.ProducerOptionsBuilder`2.SetKeySerializer(System.Func{System.IServiceProvider,Confluent.Kafka.ISerializer{`0}})
  name.vb: SetKeySerializer(Func(Of IServiceProvider, ISerializer(Of TKey)))
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.SetKeySerializer(System.Func<System.IServiceProvider, Confluent.Kafka.ISerializer<TKey>>)
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).SetKeySerializer(System.Func(Of System.IServiceProvider, Confluent.Kafka.ISerializer(Of TKey)))
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.SetKeySerializer(Func<IServiceProvider, ISerializer<TKey>>)
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).SetKeySerializer(Func(Of IServiceProvider, ISerializer(Of TKey)))
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.SetKeySerializer*
  name: SetKeySerializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_SetKeySerializer_
  commentId: Overload:Cheetah.Kafka.ProducerOptionsBuilder`2.SetKeySerializer
  isSpec: "True"
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.SetKeySerializer
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).SetKeySerializer
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.SetKeySerializer
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).SetKeySerializer
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.SetValueSerializer(Confluent.Kafka.ISerializer{`1})
  name: SetValueSerializer(ISerializer<TValue>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_SetValueSerializer_Confluent_Kafka_ISerializer__1__
  commentId: M:Cheetah.Kafka.ProducerOptionsBuilder`2.SetValueSerializer(Confluent.Kafka.ISerializer{`1})
  name.vb: SetValueSerializer(ISerializer(Of TValue))
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.SetValueSerializer(Confluent.Kafka.ISerializer<TValue>)
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).SetValueSerializer(Confluent.Kafka.ISerializer(Of TValue))
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.SetValueSerializer(ISerializer<TValue>)
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).SetValueSerializer(ISerializer(Of TValue))
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.SetValueSerializer(System.Func{System.IServiceProvider,Confluent.Kafka.ISerializer{`1}})
  name: SetValueSerializer(Func<IServiceProvider, ISerializer<TValue>>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_SetValueSerializer_System_Func_System_IServiceProvider_Confluent_Kafka_ISerializer__1___
  commentId: M:Cheetah.Kafka.ProducerOptionsBuilder`2.SetValueSerializer(System.Func{System.IServiceProvider,Confluent.Kafka.ISerializer{`1}})
  name.vb: SetValueSerializer(Func(Of IServiceProvider, ISerializer(Of TValue)))
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.SetValueSerializer(System.Func<System.IServiceProvider, Confluent.Kafka.ISerializer<TValue>>)
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).SetValueSerializer(System.Func(Of System.IServiceProvider, Confluent.Kafka.ISerializer(Of TValue)))
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.SetValueSerializer(Func<IServiceProvider, ISerializer<TValue>>)
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).SetValueSerializer(Func(Of IServiceProvider, ISerializer(Of TValue)))
- uid: Cheetah.Kafka.ProducerOptionsBuilder`2.SetValueSerializer*
  name: SetValueSerializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptionsBuilder-2.html#Cheetah_Kafka_ProducerOptionsBuilder_2_SetValueSerializer_
  commentId: Overload:Cheetah.Kafka.ProducerOptionsBuilder`2.SetValueSerializer
  isSpec: "True"
  fullName: Cheetah.Kafka.ProducerOptionsBuilder<TKey, TValue>.SetValueSerializer
  fullName.vb: Cheetah.Kafka.ProducerOptionsBuilder(Of TKey, TValue).SetValueSerializer
  nameWithType: ProducerOptionsBuilder<TKey, TValue>.SetValueSerializer
  nameWithType.vb: ProducerOptionsBuilder(Of TKey, TValue).SetValueSerializer
- uid: Cheetah.Kafka.ProducerOptions`2
  name: ProducerOptions<TKey, TValue>
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptions-2.html
  commentId: T:Cheetah.Kafka.ProducerOptions`2
  name.vb: ProducerOptions(Of TKey, TValue)
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue)
  nameWithType: ProducerOptions<TKey, TValue>
  nameWithType.vb: ProducerOptions(Of TKey, TValue)
- uid: Cheetah.Kafka.ProducerOptions`2.SetKeySerializer(Confluent.Kafka.ISerializer{`0})
  name: SetKeySerializer(ISerializer<TKey>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptions-2.html#Cheetah_Kafka_ProducerOptions_2_SetKeySerializer_Confluent_Kafka_ISerializer__0__
  commentId: M:Cheetah.Kafka.ProducerOptions`2.SetKeySerializer(Confluent.Kafka.ISerializer{`0})
  name.vb: SetKeySerializer(ISerializer(Of TKey))
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>.SetKeySerializer(Confluent.Kafka.ISerializer<TKey>)
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue).SetKeySerializer(Confluent.Kafka.ISerializer(Of TKey))
  nameWithType: ProducerOptions<TKey, TValue>.SetKeySerializer(ISerializer<TKey>)
  nameWithType.vb: ProducerOptions(Of TKey, TValue).SetKeySerializer(ISerializer(Of TKey))
- uid: Cheetah.Kafka.ProducerOptions`2.SetKeySerializer*
  name: SetKeySerializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptions-2.html#Cheetah_Kafka_ProducerOptions_2_SetKeySerializer_
  commentId: Overload:Cheetah.Kafka.ProducerOptions`2.SetKeySerializer
  isSpec: "True"
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>.SetKeySerializer
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue).SetKeySerializer
  nameWithType: ProducerOptions<TKey, TValue>.SetKeySerializer
  nameWithType.vb: ProducerOptions(Of TKey, TValue).SetKeySerializer
- uid: Cheetah.Kafka.ProducerOptions`2.SetValueSerializer(Confluent.Kafka.ISerializer{`1})
  name: SetValueSerializer(ISerializer<TValue>)
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptions-2.html#Cheetah_Kafka_ProducerOptions_2_SetValueSerializer_Confluent_Kafka_ISerializer__1__
  commentId: M:Cheetah.Kafka.ProducerOptions`2.SetValueSerializer(Confluent.Kafka.ISerializer{`1})
  name.vb: SetValueSerializer(ISerializer(Of TValue))
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>.SetValueSerializer(Confluent.Kafka.ISerializer<TValue>)
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue).SetValueSerializer(Confluent.Kafka.ISerializer(Of TValue))
  nameWithType: ProducerOptions<TKey, TValue>.SetValueSerializer(ISerializer<TValue>)
  nameWithType.vb: ProducerOptions(Of TKey, TValue).SetValueSerializer(ISerializer(Of TValue))
- uid: Cheetah.Kafka.ProducerOptions`2.SetValueSerializer*
  name: SetValueSerializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.ProducerOptions-2.html#Cheetah_Kafka_ProducerOptions_2_SetValueSerializer_
  commentId: Overload:Cheetah.Kafka.ProducerOptions`2.SetValueSerializer
  isSpec: "True"
  fullName: Cheetah.Kafka.ProducerOptions<TKey, TValue>.SetValueSerializer
  fullName.vb: Cheetah.Kafka.ProducerOptions(Of TKey, TValue).SetValueSerializer
  nameWithType: ProducerOptions<TKey, TValue>.SetValueSerializer
  nameWithType.vb: ProducerOptions(Of TKey, TValue).SetValueSerializer
- uid: Cheetah.Kafka.Serdes
  name: Cheetah.Kafka.Serdes
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.html
  commentId: N:Cheetah.Kafka.Serdes
  fullName: Cheetah.Kafka.Serdes
  nameWithType: Cheetah.Kafka.Serdes
- uid: Cheetah.Kafka.Serdes.IDeserializerProvider
  name: IDeserializerProvider
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.IDeserializerProvider.html
  commentId: T:Cheetah.Kafka.Serdes.IDeserializerProvider
  fullName: Cheetah.Kafka.Serdes.IDeserializerProvider
  nameWithType: IDeserializerProvider
- uid: Cheetah.Kafka.Serdes.IDeserializerProvider.GetKeyDeserializer*
  name: GetKeyDeserializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.IDeserializerProvider.html#Cheetah_Kafka_Serdes_IDeserializerProvider_GetKeyDeserializer_
  commentId: Overload:Cheetah.Kafka.Serdes.IDeserializerProvider.GetKeyDeserializer
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.IDeserializerProvider.GetKeyDeserializer
  nameWithType: IDeserializerProvider.GetKeyDeserializer
- uid: Cheetah.Kafka.Serdes.IDeserializerProvider.GetKeyDeserializer``1
  name: GetKeyDeserializer<T>()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.IDeserializerProvider.html#Cheetah_Kafka_Serdes_IDeserializerProvider_GetKeyDeserializer__1
  commentId: M:Cheetah.Kafka.Serdes.IDeserializerProvider.GetKeyDeserializer``1
  name.vb: GetKeyDeserializer(Of T)()
  fullName: Cheetah.Kafka.Serdes.IDeserializerProvider.GetKeyDeserializer<T>()
  fullName.vb: Cheetah.Kafka.Serdes.IDeserializerProvider.GetKeyDeserializer(Of T)()
  nameWithType: IDeserializerProvider.GetKeyDeserializer<T>()
  nameWithType.vb: IDeserializerProvider.GetKeyDeserializer(Of T)()
- uid: Cheetah.Kafka.Serdes.IDeserializerProvider.GetValueDeserializer*
  name: GetValueDeserializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.IDeserializerProvider.html#Cheetah_Kafka_Serdes_IDeserializerProvider_GetValueDeserializer_
  commentId: Overload:Cheetah.Kafka.Serdes.IDeserializerProvider.GetValueDeserializer
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.IDeserializerProvider.GetValueDeserializer
  nameWithType: IDeserializerProvider.GetValueDeserializer
- uid: Cheetah.Kafka.Serdes.IDeserializerProvider.GetValueDeserializer``1
  name: GetValueDeserializer<T>()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.IDeserializerProvider.html#Cheetah_Kafka_Serdes_IDeserializerProvider_GetValueDeserializer__1
  commentId: M:Cheetah.Kafka.Serdes.IDeserializerProvider.GetValueDeserializer``1
  name.vb: GetValueDeserializer(Of T)()
  fullName: Cheetah.Kafka.Serdes.IDeserializerProvider.GetValueDeserializer<T>()
  fullName.vb: Cheetah.Kafka.Serdes.IDeserializerProvider.GetValueDeserializer(Of T)()
  nameWithType: IDeserializerProvider.GetValueDeserializer<T>()
  nameWithType.vb: IDeserializerProvider.GetValueDeserializer(Of T)()
- uid: Cheetah.Kafka.Serdes.ISerializerProvider
  name: ISerializerProvider
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.ISerializerProvider.html
  commentId: T:Cheetah.Kafka.Serdes.ISerializerProvider
  fullName: Cheetah.Kafka.Serdes.ISerializerProvider
  nameWithType: ISerializerProvider
- uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer*
  name: GetKeySerializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.ISerializerProvider.html#Cheetah_Kafka_Serdes_ISerializerProvider_GetKeySerializer_
  commentId: Overload:Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer
  nameWithType: ISerializerProvider.GetKeySerializer
- uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer``1
  name: GetKeySerializer<T>()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.ISerializerProvider.html#Cheetah_Kafka_Serdes_ISerializerProvider_GetKeySerializer__1
  commentId: M:Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer``1
  name.vb: GetKeySerializer(Of T)()
  fullName: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer<T>()
  fullName.vb: Cheetah.Kafka.Serdes.ISerializerProvider.GetKeySerializer(Of T)()
  nameWithType: ISerializerProvider.GetKeySerializer<T>()
  nameWithType.vb: ISerializerProvider.GetKeySerializer(Of T)()
- uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer*
  name: GetValueSerializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.ISerializerProvider.html#Cheetah_Kafka_Serdes_ISerializerProvider_GetValueSerializer_
  commentId: Overload:Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer
  nameWithType: ISerializerProvider.GetValueSerializer
- uid: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer``1
  name: GetValueSerializer<T>()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.ISerializerProvider.html#Cheetah_Kafka_Serdes_ISerializerProvider_GetValueSerializer__1
  commentId: M:Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer``1
  name.vb: GetValueSerializer(Of T)()
  fullName: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer<T>()
  fullName.vb: Cheetah.Kafka.Serdes.ISerializerProvider.GetValueSerializer(Of T)()
  nameWithType: ISerializerProvider.GetValueSerializer<T>()
  nameWithType.vb: ISerializerProvider.GetValueSerializer(Of T)()
- uid: Cheetah.Kafka.Serdes.Utf8DeserializerProvider
  name: Utf8DeserializerProvider
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8DeserializerProvider.html
  commentId: T:Cheetah.Kafka.Serdes.Utf8DeserializerProvider
  fullName: Cheetah.Kafka.Serdes.Utf8DeserializerProvider
  nameWithType: Utf8DeserializerProvider
- uid: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.FromServices
  name: FromServices()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8DeserializerProvider.html#Cheetah_Kafka_Serdes_Utf8DeserializerProvider_FromServices
  commentId: M:Cheetah.Kafka.Serdes.Utf8DeserializerProvider.FromServices
  fullName: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.FromServices()
  nameWithType: Utf8DeserializerProvider.FromServices()
- uid: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.FromServices*
  name: FromServices
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8DeserializerProvider.html#Cheetah_Kafka_Serdes_Utf8DeserializerProvider_FromServices_
  commentId: Overload:Cheetah.Kafka.Serdes.Utf8DeserializerProvider.FromServices
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.FromServices
  nameWithType: Utf8DeserializerProvider.FromServices
- uid: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetKeyDeserializer*
  name: GetKeyDeserializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8DeserializerProvider.html#Cheetah_Kafka_Serdes_Utf8DeserializerProvider_GetKeyDeserializer_
  commentId: Overload:Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetKeyDeserializer
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetKeyDeserializer
  nameWithType: Utf8DeserializerProvider.GetKeyDeserializer
- uid: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetKeyDeserializer``1
  name: GetKeyDeserializer<T>()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8DeserializerProvider.html#Cheetah_Kafka_Serdes_Utf8DeserializerProvider_GetKeyDeserializer__1
  commentId: M:Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetKeyDeserializer``1
  name.vb: GetKeyDeserializer(Of T)()
  fullName: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetKeyDeserializer<T>()
  fullName.vb: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetKeyDeserializer(Of T)()
  nameWithType: Utf8DeserializerProvider.GetKeyDeserializer<T>()
  nameWithType.vb: Utf8DeserializerProvider.GetKeyDeserializer(Of T)()
- uid: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetValueDeserializer*
  name: GetValueDeserializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8DeserializerProvider.html#Cheetah_Kafka_Serdes_Utf8DeserializerProvider_GetValueDeserializer_
  commentId: Overload:Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetValueDeserializer
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetValueDeserializer
  nameWithType: Utf8DeserializerProvider.GetValueDeserializer
- uid: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetValueDeserializer``1
  name: GetValueDeserializer<T>()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8DeserializerProvider.html#Cheetah_Kafka_Serdes_Utf8DeserializerProvider_GetValueDeserializer__1
  commentId: M:Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetValueDeserializer``1
  name.vb: GetValueDeserializer(Of T)()
  fullName: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetValueDeserializer<T>()
  fullName.vb: Cheetah.Kafka.Serdes.Utf8DeserializerProvider.GetValueDeserializer(Of T)()
  nameWithType: Utf8DeserializerProvider.GetValueDeserializer<T>()
  nameWithType.vb: Utf8DeserializerProvider.GetValueDeserializer(Of T)()
- uid: Cheetah.Kafka.Serdes.Utf8SerializerProvider
  name: Utf8SerializerProvider
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8SerializerProvider.html
  commentId: T:Cheetah.Kafka.Serdes.Utf8SerializerProvider
  fullName: Cheetah.Kafka.Serdes.Utf8SerializerProvider
  nameWithType: Utf8SerializerProvider
- uid: Cheetah.Kafka.Serdes.Utf8SerializerProvider.FromServices
  name: FromServices()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8SerializerProvider.html#Cheetah_Kafka_Serdes_Utf8SerializerProvider_FromServices
  commentId: M:Cheetah.Kafka.Serdes.Utf8SerializerProvider.FromServices
  fullName: Cheetah.Kafka.Serdes.Utf8SerializerProvider.FromServices()
  nameWithType: Utf8SerializerProvider.FromServices()
- uid: Cheetah.Kafka.Serdes.Utf8SerializerProvider.FromServices*
  name: FromServices
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8SerializerProvider.html#Cheetah_Kafka_Serdes_Utf8SerializerProvider_FromServices_
  commentId: Overload:Cheetah.Kafka.Serdes.Utf8SerializerProvider.FromServices
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.Utf8SerializerProvider.FromServices
  nameWithType: Utf8SerializerProvider.FromServices
- uid: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetKeySerializer*
  name: GetKeySerializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8SerializerProvider.html#Cheetah_Kafka_Serdes_Utf8SerializerProvider_GetKeySerializer_
  commentId: Overload:Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetKeySerializer
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetKeySerializer
  nameWithType: Utf8SerializerProvider.GetKeySerializer
- uid: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetKeySerializer``1
  name: GetKeySerializer<T>()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8SerializerProvider.html#Cheetah_Kafka_Serdes_Utf8SerializerProvider_GetKeySerializer__1
  commentId: M:Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetKeySerializer``1
  name.vb: GetKeySerializer(Of T)()
  fullName: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetKeySerializer<T>()
  fullName.vb: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetKeySerializer(Of T)()
  nameWithType: Utf8SerializerProvider.GetKeySerializer<T>()
  nameWithType.vb: Utf8SerializerProvider.GetKeySerializer(Of T)()
- uid: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetValueSerializer*
  name: GetValueSerializer
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8SerializerProvider.html#Cheetah_Kafka_Serdes_Utf8SerializerProvider_GetValueSerializer_
  commentId: Overload:Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetValueSerializer
  isSpec: "True"
  fullName: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetValueSerializer
  nameWithType: Utf8SerializerProvider.GetValueSerializer
- uid: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetValueSerializer``1
  name: GetValueSerializer<T>()
  href: api/Cheetah.Kafka/Cheetah.Kafka.Serdes.Utf8SerializerProvider.html#Cheetah_Kafka_Serdes_Utf8SerializerProvider_GetValueSerializer__1
  commentId: M:Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetValueSerializer``1
  name.vb: GetValueSerializer(Of T)()
  fullName: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetValueSerializer<T>()
  fullName.vb: Cheetah.Kafka.Serdes.Utf8SerializerProvider.GetValueSerializer(Of T)()
  nameWithType: Utf8SerializerProvider.GetValueSerializer<T>()
  nameWithType.vb: Utf8SerializerProvider.GetValueSerializer(Of T)()
- uid: Cheetah.Kafka.Testing
  name: Cheetah.Kafka.Testing
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.html
  commentId: N:Cheetah.Kafka.Testing
  fullName: Cheetah.Kafka.Testing
  nameWithType: Cheetah.Kafka.Testing
- uid: Cheetah.Kafka.Testing.IKafkaTestReader`2
  name: IKafkaTestReader<TKey, T>
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.IKafkaTestReader-2.html
  commentId: T:Cheetah.Kafka.Testing.IKafkaTestReader`2
  name.vb: IKafkaTestReader(Of TKey, T)
  fullName: Cheetah.Kafka.Testing.IKafkaTestReader<TKey, T>
  fullName.vb: Cheetah.Kafka.Testing.IKafkaTestReader(Of TKey, T)
  nameWithType: IKafkaTestReader<TKey, T>
  nameWithType.vb: IKafkaTestReader(Of TKey, T)
- uid: Cheetah.Kafka.Testing.IKafkaTestReader`2.ReadMessages(System.Int32,System.TimeSpan)
  name: ReadMessages(int, TimeSpan)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.IKafkaTestReader-2.html#Cheetah_Kafka_Testing_IKafkaTestReader_2_ReadMessages_System_Int32_System_TimeSpan_
  commentId: M:Cheetah.Kafka.Testing.IKafkaTestReader`2.ReadMessages(System.Int32,System.TimeSpan)
  name.vb: ReadMessages(Integer, TimeSpan)
  fullName: Cheetah.Kafka.Testing.IKafkaTestReader<TKey, T>.ReadMessages(int, System.TimeSpan)
  fullName.vb: Cheetah.Kafka.Testing.IKafkaTestReader(Of TKey, T).ReadMessages(Integer, System.TimeSpan)
  nameWithType: IKafkaTestReader<TKey, T>.ReadMessages(int, TimeSpan)
  nameWithType.vb: IKafkaTestReader(Of TKey, T).ReadMessages(Integer, TimeSpan)
- uid: Cheetah.Kafka.Testing.IKafkaTestReader`2.ReadMessages*
  name: ReadMessages
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.IKafkaTestReader-2.html#Cheetah_Kafka_Testing_IKafkaTestReader_2_ReadMessages_
  commentId: Overload:Cheetah.Kafka.Testing.IKafkaTestReader`2.ReadMessages
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.IKafkaTestReader<TKey, T>.ReadMessages
  fullName.vb: Cheetah.Kafka.Testing.IKafkaTestReader(Of TKey, T).ReadMessages
  nameWithType: IKafkaTestReader<TKey, T>.ReadMessages
  nameWithType.vb: IKafkaTestReader(Of TKey, T).ReadMessages
- uid: Cheetah.Kafka.Testing.IKafkaTestReader`2.VerifyNoMoreMessages(System.TimeSpan)
  name: VerifyNoMoreMessages(TimeSpan)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.IKafkaTestReader-2.html#Cheetah_Kafka_Testing_IKafkaTestReader_2_VerifyNoMoreMessages_System_TimeSpan_
  commentId: M:Cheetah.Kafka.Testing.IKafkaTestReader`2.VerifyNoMoreMessages(System.TimeSpan)
  fullName: Cheetah.Kafka.Testing.IKafkaTestReader<TKey, T>.VerifyNoMoreMessages(System.TimeSpan)
  fullName.vb: Cheetah.Kafka.Testing.IKafkaTestReader(Of TKey, T).VerifyNoMoreMessages(System.TimeSpan)
  nameWithType: IKafkaTestReader<TKey, T>.VerifyNoMoreMessages(TimeSpan)
  nameWithType.vb: IKafkaTestReader(Of TKey, T).VerifyNoMoreMessages(TimeSpan)
- uid: Cheetah.Kafka.Testing.IKafkaTestReader`2.VerifyNoMoreMessages*
  name: VerifyNoMoreMessages
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.IKafkaTestReader-2.html#Cheetah_Kafka_Testing_IKafkaTestReader_2_VerifyNoMoreMessages_
  commentId: Overload:Cheetah.Kafka.Testing.IKafkaTestReader`2.VerifyNoMoreMessages
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.IKafkaTestReader<TKey, T>.VerifyNoMoreMessages
  fullName.vb: Cheetah.Kafka.Testing.IKafkaTestReader(Of TKey, T).VerifyNoMoreMessages
  nameWithType: IKafkaTestReader<TKey, T>.VerifyNoMoreMessages
  nameWithType.vb: IKafkaTestReader(Of TKey, T).VerifyNoMoreMessages
- uid: Cheetah.Kafka.Testing.IKafkaTestWriter`2
  name: IKafkaTestWriter<TKey, T>
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.IKafkaTestWriter-2.html
  commentId: T:Cheetah.Kafka.Testing.IKafkaTestWriter`2
  name.vb: IKafkaTestWriter(Of TKey, T)
  fullName: Cheetah.Kafka.Testing.IKafkaTestWriter<TKey, T>
  fullName.vb: Cheetah.Kafka.Testing.IKafkaTestWriter(Of TKey, T)
  nameWithType: IKafkaTestWriter<TKey, T>
  nameWithType.vb: IKafkaTestWriter(Of TKey, T)
- uid: Cheetah.Kafka.Testing.IKafkaTestWriter`2.WriteAsync(Confluent.Kafka.Message{`0,`1}[])
  name: WriteAsync(params Message<TKey, T>[])
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.IKafkaTestWriter-2.html#Cheetah_Kafka_Testing_IKafkaTestWriter_2_WriteAsync_Confluent_Kafka_Message__0__1____
  commentId: M:Cheetah.Kafka.Testing.IKafkaTestWriter`2.WriteAsync(Confluent.Kafka.Message{`0,`1}[])
  name.vb: WriteAsync(ParamArray Message(Of TKey, T)())
  fullName: Cheetah.Kafka.Testing.IKafkaTestWriter<TKey, T>.WriteAsync(params Confluent.Kafka.Message<TKey, T>[])
  fullName.vb: Cheetah.Kafka.Testing.IKafkaTestWriter(Of TKey, T).WriteAsync(ParamArray Confluent.Kafka.Message(Of TKey, T)())
  nameWithType: IKafkaTestWriter<TKey, T>.WriteAsync(params Message<TKey, T>[])
  nameWithType.vb: IKafkaTestWriter(Of TKey, T).WriteAsync(ParamArray Message(Of TKey, T)())
- uid: Cheetah.Kafka.Testing.IKafkaTestWriter`2.WriteAsync(`1[])
  name: WriteAsync(params T[])
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.IKafkaTestWriter-2.html#Cheetah_Kafka_Testing_IKafkaTestWriter_2_WriteAsync__1___
  commentId: M:Cheetah.Kafka.Testing.IKafkaTestWriter`2.WriteAsync(`1[])
  name.vb: WriteAsync(ParamArray T())
  fullName: Cheetah.Kafka.Testing.IKafkaTestWriter<TKey, T>.WriteAsync(params T[])
  fullName.vb: Cheetah.Kafka.Testing.IKafkaTestWriter(Of TKey, T).WriteAsync(ParamArray T())
  nameWithType: IKafkaTestWriter<TKey, T>.WriteAsync(params T[])
  nameWithType.vb: IKafkaTestWriter(Of TKey, T).WriteAsync(ParamArray T())
- uid: Cheetah.Kafka.Testing.IKafkaTestWriter`2.WriteAsync*
  name: WriteAsync
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.IKafkaTestWriter-2.html#Cheetah_Kafka_Testing_IKafkaTestWriter_2_WriteAsync_
  commentId: Overload:Cheetah.Kafka.Testing.IKafkaTestWriter`2.WriteAsync
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.IKafkaTestWriter<TKey, T>.WriteAsync
  fullName.vb: Cheetah.Kafka.Testing.IKafkaTestWriter(Of TKey, T).WriteAsync
  nameWithType: IKafkaTestWriter<TKey, T>.WriteAsync
  nameWithType.vb: IKafkaTestWriter(Of TKey, T).WriteAsync
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory
  name: KafkaTestClientFactory
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html
  commentId: T:Cheetah.Kafka.Testing.KafkaTestClientFactory
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory
  nameWithType: KafkaTestClientFactory
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.ClientFactory
  name: ClientFactory
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_ClientFactory
  commentId: P:Cheetah.Kafka.Testing.KafkaTestClientFactory.ClientFactory
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.ClientFactory
  nameWithType: KafkaTestClientFactory.ClientFactory
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.ClientFactory*
  name: ClientFactory
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_ClientFactory_
  commentId: Overload:Cheetah.Kafka.Testing.KafkaTestClientFactory.ClientFactory
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.ClientFactory
  nameWithType: KafkaTestClientFactory.ClientFactory
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.Create(Cheetah.Kafka.Configuration.KafkaConfig,Cheetah.Kafka.ClientFactoryOptions,Cheetah.Auth.Authentication.ITokenService,Microsoft.Extensions.Logging.ILoggerFactory,Cheetah.Kafka.Serdes.ISerializerProvider,Cheetah.Kafka.Serdes.IDeserializerProvider)
  name: Create(KafkaConfig, ClientFactoryOptions?, ITokenService?, ILoggerFactory?, ISerializerProvider?, IDeserializerProvider?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_Create_Cheetah_Kafka_Configuration_KafkaConfig_Cheetah_Kafka_ClientFactoryOptions_Cheetah_Auth_Authentication_ITokenService_Microsoft_Extensions_Logging_ILoggerFactory_Cheetah_Kafka_Serdes_ISerializerProvider_Cheetah_Kafka_Serdes_IDeserializerProvider_
  commentId: M:Cheetah.Kafka.Testing.KafkaTestClientFactory.Create(Cheetah.Kafka.Configuration.KafkaConfig,Cheetah.Kafka.ClientFactoryOptions,Cheetah.Auth.Authentication.ITokenService,Microsoft.Extensions.Logging.ILoggerFactory,Cheetah.Kafka.Serdes.ISerializerProvider,Cheetah.Kafka.Serdes.IDeserializerProvider)
  name.vb: Create(KafkaConfig, ClientFactoryOptions, ITokenService, ILoggerFactory, ISerializerProvider, IDeserializerProvider)
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.Create(Cheetah.Kafka.Configuration.KafkaConfig, Cheetah.Kafka.ClientFactoryOptions?, Cheetah.Auth.Authentication.ITokenService?, Microsoft.Extensions.Logging.ILoggerFactory?, Cheetah.Kafka.Serdes.ISerializerProvider?, Cheetah.Kafka.Serdes.IDeserializerProvider?)
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestClientFactory.Create(Cheetah.Kafka.Configuration.KafkaConfig, Cheetah.Kafka.ClientFactoryOptions, Cheetah.Auth.Authentication.ITokenService, Microsoft.Extensions.Logging.ILoggerFactory, Cheetah.Kafka.Serdes.ISerializerProvider, Cheetah.Kafka.Serdes.IDeserializerProvider)
  nameWithType: KafkaTestClientFactory.Create(KafkaConfig, ClientFactoryOptions?, ITokenService?, ILoggerFactory?, ISerializerProvider?, IDeserializerProvider?)
  nameWithType.vb: KafkaTestClientFactory.Create(KafkaConfig, ClientFactoryOptions, ITokenService, ILoggerFactory, ISerializerProvider, IDeserializerProvider)
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.Create(Microsoft.Extensions.Configuration.IConfiguration,Cheetah.Kafka.ClientFactoryOptions,Cheetah.Auth.Authentication.ITokenService,Microsoft.Extensions.Logging.ILoggerFactory)
  name: Create(IConfiguration, ClientFactoryOptions?, ITokenService?, ILoggerFactory?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_Create_Microsoft_Extensions_Configuration_IConfiguration_Cheetah_Kafka_ClientFactoryOptions_Cheetah_Auth_Authentication_ITokenService_Microsoft_Extensions_Logging_ILoggerFactory_
  commentId: M:Cheetah.Kafka.Testing.KafkaTestClientFactory.Create(Microsoft.Extensions.Configuration.IConfiguration,Cheetah.Kafka.ClientFactoryOptions,Cheetah.Auth.Authentication.ITokenService,Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: Create(IConfiguration, ClientFactoryOptions, ITokenService, ILoggerFactory)
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.Create(Microsoft.Extensions.Configuration.IConfiguration, Cheetah.Kafka.ClientFactoryOptions?, Cheetah.Auth.Authentication.ITokenService?, Microsoft.Extensions.Logging.ILoggerFactory?)
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestClientFactory.Create(Microsoft.Extensions.Configuration.IConfiguration, Cheetah.Kafka.ClientFactoryOptions, Cheetah.Auth.Authentication.ITokenService, Microsoft.Extensions.Logging.ILoggerFactory)
  nameWithType: KafkaTestClientFactory.Create(IConfiguration, ClientFactoryOptions?, ITokenService?, ILoggerFactory?)
  nameWithType.vb: KafkaTestClientFactory.Create(IConfiguration, ClientFactoryOptions, ITokenService, ILoggerFactory)
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.Create*
  name: Create
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_Create_
  commentId: Overload:Cheetah.Kafka.Testing.KafkaTestClientFactory.Create
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.Create
  nameWithType: KafkaTestClientFactory.Create
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader*
  name: CreateTestReader
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_CreateTestReader_
  commentId: Overload:Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader
  nameWithType: KafkaTestClientFactory.CreateTestReader
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader``1(System.String,System.String,Confluent.Kafka.IDeserializer{``0})
  name: CreateTestReader<T>(string, string?, IDeserializer<T>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_CreateTestReader__1_System_String_System_String_Confluent_Kafka_IDeserializer___0__
  commentId: M:Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader``1(System.String,System.String,Confluent.Kafka.IDeserializer{``0})
  name.vb: CreateTestReader(Of T)(String, String, IDeserializer(Of T))
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader<T>(string, string?, Confluent.Kafka.IDeserializer<T>?)
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader(Of T)(String, String, Confluent.Kafka.IDeserializer(Of T))
  nameWithType: KafkaTestClientFactory.CreateTestReader<T>(string, string?, IDeserializer<T>?)
  nameWithType.vb: KafkaTestClientFactory.CreateTestReader(Of T)(String, String, IDeserializer(Of T))
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader``2(System.String,System.String,Confluent.Kafka.IDeserializer{``0},Confluent.Kafka.IDeserializer{``1})
  name: CreateTestReader<TKey, TValue>(string, string?, IDeserializer<TKey>?, IDeserializer<TValue>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_CreateTestReader__2_System_String_System_String_Confluent_Kafka_IDeserializer___0__Confluent_Kafka_IDeserializer___1__
  commentId: M:Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader``2(System.String,System.String,Confluent.Kafka.IDeserializer{``0},Confluent.Kafka.IDeserializer{``1})
  name.vb: CreateTestReader(Of TKey, TValue)(String, String, IDeserializer(Of TKey), IDeserializer(Of TValue))
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader<TKey, TValue>(string, string?, Confluent.Kafka.IDeserializer<TKey>?, Confluent.Kafka.IDeserializer<TValue>?)
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestReader(Of TKey, TValue)(String, String, Confluent.Kafka.IDeserializer(Of TKey), Confluent.Kafka.IDeserializer(Of TValue))
  nameWithType: KafkaTestClientFactory.CreateTestReader<TKey, TValue>(string, string?, IDeserializer<TKey>?, IDeserializer<TValue>?)
  nameWithType.vb: KafkaTestClientFactory.CreateTestReader(Of TKey, TValue)(String, String, IDeserializer(Of TKey), IDeserializer(Of TValue))
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter*
  name: CreateTestWriter
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_CreateTestWriter_
  commentId: Overload:Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter
  nameWithType: KafkaTestClientFactory.CreateTestWriter
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter``1(System.String,Confluent.Kafka.ISerializer{``0})
  name: CreateTestWriter<T>(string, ISerializer<T>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_CreateTestWriter__1_System_String_Confluent_Kafka_ISerializer___0__
  commentId: M:Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter``1(System.String,Confluent.Kafka.ISerializer{``0})
  name.vb: CreateTestWriter(Of T)(String, ISerializer(Of T))
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter<T>(string, Confluent.Kafka.ISerializer<T>?)
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter(Of T)(String, Confluent.Kafka.ISerializer(Of T))
  nameWithType: KafkaTestClientFactory.CreateTestWriter<T>(string, ISerializer<T>?)
  nameWithType.vb: KafkaTestClientFactory.CreateTestWriter(Of T)(String, ISerializer(Of T))
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter``2(System.String,Confluent.Kafka.ISerializer{``0},Confluent.Kafka.ISerializer{``1})
  name: CreateTestWriter<TKey, T>(string, ISerializer<TKey>?, ISerializer<T>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_CreateTestWriter__2_System_String_Confluent_Kafka_ISerializer___0__Confluent_Kafka_ISerializer___1__
  commentId: M:Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter``2(System.String,Confluent.Kafka.ISerializer{``0},Confluent.Kafka.ISerializer{``1})
  name.vb: CreateTestWriter(Of TKey, T)(String, ISerializer(Of TKey), ISerializer(Of T))
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter<TKey, T>(string, Confluent.Kafka.ISerializer<TKey>?, Confluent.Kafka.ISerializer<T>?)
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter(Of TKey, T)(String, Confluent.Kafka.ISerializer(Of TKey), Confluent.Kafka.ISerializer(Of T))
  nameWithType: KafkaTestClientFactory.CreateTestWriter<TKey, T>(string, ISerializer<TKey>?, ISerializer<T>?)
  nameWithType.vb: KafkaTestClientFactory.CreateTestWriter(Of TKey, T)(String, ISerializer(Of TKey), ISerializer(Of T))
- uid: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter``2(System.String,System.Func{``1,``0},Confluent.Kafka.ISerializer{``0},Confluent.Kafka.ISerializer{``1})
  name: CreateTestWriter<TKey, T>(string, Func<T, TKey>, ISerializer<TKey>?, ISerializer<T>?)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestClientFactory.html#Cheetah_Kafka_Testing_KafkaTestClientFactory_CreateTestWriter__2_System_String_System_Func___1___0__Confluent_Kafka_ISerializer___0__Confluent_Kafka_ISerializer___1__
  commentId: M:Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter``2(System.String,System.Func{``1,``0},Confluent.Kafka.ISerializer{``0},Confluent.Kafka.ISerializer{``1})
  name.vb: CreateTestWriter(Of TKey, T)(String, Func(Of T, TKey), ISerializer(Of TKey), ISerializer(Of T))
  fullName: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter<TKey, T>(string, System.Func<T, TKey>, Confluent.Kafka.ISerializer<TKey>?, Confluent.Kafka.ISerializer<T>?)
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestClientFactory.CreateTestWriter(Of TKey, T)(String, System.Func(Of T, TKey), Confluent.Kafka.ISerializer(Of TKey), Confluent.Kafka.ISerializer(Of T))
  nameWithType: KafkaTestClientFactory.CreateTestWriter<TKey, T>(string, Func<T, TKey>, ISerializer<TKey>?, ISerializer<T>?)
  nameWithType.vb: KafkaTestClientFactory.CreateTestWriter(Of TKey, T)(String, Func(Of T, TKey), ISerializer(Of TKey), ISerializer(Of T))
- uid: Cheetah.Kafka.Testing.KafkaTestReader`2
  name: KafkaTestReader<TKey, T>
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestReader-2.html
  commentId: T:Cheetah.Kafka.Testing.KafkaTestReader`2
  name.vb: KafkaTestReader(Of TKey, T)
  fullName: Cheetah.Kafka.Testing.KafkaTestReader<TKey, T>
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestReader(Of TKey, T)
  nameWithType: KafkaTestReader<TKey, T>
  nameWithType.vb: KafkaTestReader(Of TKey, T)
- uid: Cheetah.Kafka.Testing.KafkaTestReader`2.ReadMessages(System.Int32,System.TimeSpan)
  name: ReadMessages(int, TimeSpan)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestReader-2.html#Cheetah_Kafka_Testing_KafkaTestReader_2_ReadMessages_System_Int32_System_TimeSpan_
  commentId: M:Cheetah.Kafka.Testing.KafkaTestReader`2.ReadMessages(System.Int32,System.TimeSpan)
  name.vb: ReadMessages(Integer, TimeSpan)
  fullName: Cheetah.Kafka.Testing.KafkaTestReader<TKey, T>.ReadMessages(int, System.TimeSpan)
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestReader(Of TKey, T).ReadMessages(Integer, System.TimeSpan)
  nameWithType: KafkaTestReader<TKey, T>.ReadMessages(int, TimeSpan)
  nameWithType.vb: KafkaTestReader(Of TKey, T).ReadMessages(Integer, TimeSpan)
- uid: Cheetah.Kafka.Testing.KafkaTestReader`2.ReadMessages*
  name: ReadMessages
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestReader-2.html#Cheetah_Kafka_Testing_KafkaTestReader_2_ReadMessages_
  commentId: Overload:Cheetah.Kafka.Testing.KafkaTestReader`2.ReadMessages
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.KafkaTestReader<TKey, T>.ReadMessages
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestReader(Of TKey, T).ReadMessages
  nameWithType: KafkaTestReader<TKey, T>.ReadMessages
  nameWithType.vb: KafkaTestReader(Of TKey, T).ReadMessages
- uid: Cheetah.Kafka.Testing.KafkaTestReader`2.VerifyNoMoreMessages(System.TimeSpan)
  name: VerifyNoMoreMessages(TimeSpan)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestReader-2.html#Cheetah_Kafka_Testing_KafkaTestReader_2_VerifyNoMoreMessages_System_TimeSpan_
  commentId: M:Cheetah.Kafka.Testing.KafkaTestReader`2.VerifyNoMoreMessages(System.TimeSpan)
  fullName: Cheetah.Kafka.Testing.KafkaTestReader<TKey, T>.VerifyNoMoreMessages(System.TimeSpan)
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestReader(Of TKey, T).VerifyNoMoreMessages(System.TimeSpan)
  nameWithType: KafkaTestReader<TKey, T>.VerifyNoMoreMessages(TimeSpan)
  nameWithType.vb: KafkaTestReader(Of TKey, T).VerifyNoMoreMessages(TimeSpan)
- uid: Cheetah.Kafka.Testing.KafkaTestReader`2.VerifyNoMoreMessages*
  name: VerifyNoMoreMessages
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestReader-2.html#Cheetah_Kafka_Testing_KafkaTestReader_2_VerifyNoMoreMessages_
  commentId: Overload:Cheetah.Kafka.Testing.KafkaTestReader`2.VerifyNoMoreMessages
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.KafkaTestReader<TKey, T>.VerifyNoMoreMessages
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestReader(Of TKey, T).VerifyNoMoreMessages
  nameWithType: KafkaTestReader<TKey, T>.VerifyNoMoreMessages
  nameWithType.vb: KafkaTestReader(Of TKey, T).VerifyNoMoreMessages
- uid: Cheetah.Kafka.Testing.KafkaTestWriter`2
  name: KafkaTestWriter<TKey, T>
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestWriter-2.html
  commentId: T:Cheetah.Kafka.Testing.KafkaTestWriter`2
  name.vb: KafkaTestWriter(Of TKey, T)
  fullName: Cheetah.Kafka.Testing.KafkaTestWriter<TKey, T>
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestWriter(Of TKey, T)
  nameWithType: KafkaTestWriter<TKey, T>
  nameWithType.vb: KafkaTestWriter(Of TKey, T)
- uid: Cheetah.Kafka.Testing.KafkaTestWriter`2.WriteAsync(Confluent.Kafka.Message{`0,`1}[])
  name: WriteAsync(params Message<TKey, T>[])
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestWriter-2.html#Cheetah_Kafka_Testing_KafkaTestWriter_2_WriteAsync_Confluent_Kafka_Message__0__1____
  commentId: M:Cheetah.Kafka.Testing.KafkaTestWriter`2.WriteAsync(Confluent.Kafka.Message{`0,`1}[])
  name.vb: WriteAsync(ParamArray Message(Of TKey, T)())
  fullName: Cheetah.Kafka.Testing.KafkaTestWriter<TKey, T>.WriteAsync(params Confluent.Kafka.Message<TKey, T>[])
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestWriter(Of TKey, T).WriteAsync(ParamArray Confluent.Kafka.Message(Of TKey, T)())
  nameWithType: KafkaTestWriter<TKey, T>.WriteAsync(params Message<TKey, T>[])
  nameWithType.vb: KafkaTestWriter(Of TKey, T).WriteAsync(ParamArray Message(Of TKey, T)())
- uid: Cheetah.Kafka.Testing.KafkaTestWriter`2.WriteAsync(`1[])
  name: WriteAsync(params T[])
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestWriter-2.html#Cheetah_Kafka_Testing_KafkaTestWriter_2_WriteAsync__1___
  commentId: M:Cheetah.Kafka.Testing.KafkaTestWriter`2.WriteAsync(`1[])
  name.vb: WriteAsync(ParamArray T())
  fullName: Cheetah.Kafka.Testing.KafkaTestWriter<TKey, T>.WriteAsync(params T[])
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestWriter(Of TKey, T).WriteAsync(ParamArray T())
  nameWithType: KafkaTestWriter<TKey, T>.WriteAsync(params T[])
  nameWithType.vb: KafkaTestWriter(Of TKey, T).WriteAsync(ParamArray T())
- uid: Cheetah.Kafka.Testing.KafkaTestWriter`2.WriteAsync*
  name: WriteAsync
  href: api/Cheetah.Kafka/Cheetah.Kafka.Testing.KafkaTestWriter-2.html#Cheetah_Kafka_Testing_KafkaTestWriter_2_WriteAsync_
  commentId: Overload:Cheetah.Kafka.Testing.KafkaTestWriter`2.WriteAsync
  isSpec: "True"
  fullName: Cheetah.Kafka.Testing.KafkaTestWriter<TKey, T>.WriteAsync
  fullName.vb: Cheetah.Kafka.Testing.KafkaTestWriter(Of TKey, T).WriteAsync
  nameWithType: KafkaTestWriter<TKey, T>.WriteAsync
  nameWithType.vb: KafkaTestWriter(Of TKey, T).WriteAsync
- uid: Cheetah.Kafka.Util
  name: Cheetah.Kafka.Util
  href: api/Cheetah.Kafka/Cheetah.Kafka.Util.html
  commentId: N:Cheetah.Kafka.Util
  fullName: Cheetah.Kafka.Util
  nameWithType: Cheetah.Kafka.Util
- uid: Cheetah.Kafka.Util.Utf8JsonDeserializer`1
  name: Utf8JsonDeserializer<T>
  href: api/Cheetah.Kafka/Cheetah.Kafka.Util.Utf8JsonDeserializer-1.html
  commentId: T:Cheetah.Kafka.Util.Utf8JsonDeserializer`1
  name.vb: Utf8JsonDeserializer(Of T)
  fullName: Cheetah.Kafka.Util.Utf8JsonDeserializer<T>
  fullName.vb: Cheetah.Kafka.Util.Utf8JsonDeserializer(Of T)
  nameWithType: Utf8JsonDeserializer<T>
  nameWithType.vb: Utf8JsonDeserializer(Of T)
- uid: Cheetah.Kafka.Util.Utf8JsonDeserializer`1.Deserialize(System.ReadOnlySpan{System.Byte},System.Boolean,Confluent.Kafka.SerializationContext)
  name: Deserialize(ReadOnlySpan<byte>, bool, SerializationContext)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Util.Utf8JsonDeserializer-1.html#Cheetah_Kafka_Util_Utf8JsonDeserializer_1_Deserialize_System_ReadOnlySpan_System_Byte__System_Boolean_Confluent_Kafka_SerializationContext_
  commentId: M:Cheetah.Kafka.Util.Utf8JsonDeserializer`1.Deserialize(System.ReadOnlySpan{System.Byte},System.Boolean,Confluent.Kafka.SerializationContext)
  name.vb: Deserialize(ReadOnlySpan(Of Byte), Boolean, SerializationContext)
  fullName: Cheetah.Kafka.Util.Utf8JsonDeserializer<T>.Deserialize(System.ReadOnlySpan<byte>, bool, Confluent.Kafka.SerializationContext)
  fullName.vb: Cheetah.Kafka.Util.Utf8JsonDeserializer(Of T).Deserialize(System.ReadOnlySpan(Of Byte), Boolean, Confluent.Kafka.SerializationContext)
  nameWithType: Utf8JsonDeserializer<T>.Deserialize(ReadOnlySpan<byte>, bool, SerializationContext)
  nameWithType.vb: Utf8JsonDeserializer(Of T).Deserialize(ReadOnlySpan(Of Byte), Boolean, SerializationContext)
- uid: Cheetah.Kafka.Util.Utf8JsonDeserializer`1.Deserialize*
  name: Deserialize
  href: api/Cheetah.Kafka/Cheetah.Kafka.Util.Utf8JsonDeserializer-1.html#Cheetah_Kafka_Util_Utf8JsonDeserializer_1_Deserialize_
  commentId: Overload:Cheetah.Kafka.Util.Utf8JsonDeserializer`1.Deserialize
  isSpec: "True"
  fullName: Cheetah.Kafka.Util.Utf8JsonDeserializer<T>.Deserialize
  fullName.vb: Cheetah.Kafka.Util.Utf8JsonDeserializer(Of T).Deserialize
  nameWithType: Utf8JsonDeserializer<T>.Deserialize
  nameWithType.vb: Utf8JsonDeserializer(Of T).Deserialize
- uid: Cheetah.Kafka.Util.Utf8JsonSerializer`1
  name: Utf8JsonSerializer<T>
  href: api/Cheetah.Kafka/Cheetah.Kafka.Util.Utf8JsonSerializer-1.html
  commentId: T:Cheetah.Kafka.Util.Utf8JsonSerializer`1
  name.vb: Utf8JsonSerializer(Of T)
  fullName: Cheetah.Kafka.Util.Utf8JsonSerializer<T>
  fullName.vb: Cheetah.Kafka.Util.Utf8JsonSerializer(Of T)
  nameWithType: Utf8JsonSerializer<T>
  nameWithType.vb: Utf8JsonSerializer(Of T)
- uid: Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
  name: Serialize(T, SerializationContext)
  href: api/Cheetah.Kafka/Cheetah.Kafka.Util.Utf8JsonSerializer-1.html#Cheetah_Kafka_Util_Utf8JsonSerializer_1_Serialize__0_Confluent_Kafka_SerializationContext_
  commentId: M:Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
  fullName: Cheetah.Kafka.Util.Utf8JsonSerializer<T>.Serialize(T, Confluent.Kafka.SerializationContext)
  fullName.vb: Cheetah.Kafka.Util.Utf8JsonSerializer(Of T).Serialize(T, Confluent.Kafka.SerializationContext)
  nameWithType: Utf8JsonSerializer<T>.Serialize(T, SerializationContext)
  nameWithType.vb: Utf8JsonSerializer(Of T).Serialize(T, SerializationContext)
- uid: Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize*
  name: Serialize
  href: api/Cheetah.Kafka/Cheetah.Kafka.Util.Utf8JsonSerializer-1.html#Cheetah_Kafka_Util_Utf8JsonSerializer_1_Serialize_
  commentId: Overload:Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize
  isSpec: "True"
  fullName: Cheetah.Kafka.Util.Utf8JsonSerializer<T>.Serialize
  fullName.vb: Cheetah.Kafka.Util.Utf8JsonSerializer(Of T).Serialize
  nameWithType: Utf8JsonSerializer<T>.Serialize
  nameWithType.vb: Utf8JsonSerializer(Of T).Serialize
- uid: Cheetah.OpenSearch
  name: Cheetah.OpenSearch
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.html
  commentId: N:Cheetah.OpenSearch
  fullName: Cheetah.OpenSearch
  nameWithType: Cheetah.OpenSearch
- uid: Cheetah.OpenSearch.Configuration
  name: Cheetah.OpenSearch.Configuration
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.html
  commentId: N:Cheetah.OpenSearch.Configuration
  fullName: Cheetah.OpenSearch.Configuration
  nameWithType: Cheetah.OpenSearch.Configuration
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig
  name: OpenSearchConfig
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html
  commentId: T:Cheetah.OpenSearch.Configuration.OpenSearchConfig
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig
  nameWithType: OpenSearchConfig
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.AuthMode
  name: AuthMode
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_AuthMode
  commentId: P:Cheetah.OpenSearch.Configuration.OpenSearchConfig.AuthMode
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.AuthMode
  nameWithType: OpenSearchConfig.AuthMode
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.AuthMode*
  name: AuthMode
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_AuthMode_
  commentId: Overload:Cheetah.OpenSearch.Configuration.OpenSearchConfig.AuthMode
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.AuthMode
  nameWithType: OpenSearchConfig.AuthMode
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.CaCertificatePath
  name: CaCertificatePath
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_CaCertificatePath
  commentId: P:Cheetah.OpenSearch.Configuration.OpenSearchConfig.CaCertificatePath
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.CaCertificatePath
  nameWithType: OpenSearchConfig.CaCertificatePath
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.CaCertificatePath*
  name: CaCertificatePath
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_CaCertificatePath_
  commentId: Overload:Cheetah.OpenSearch.Configuration.OpenSearchConfig.CaCertificatePath
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.CaCertificatePath
  nameWithType: OpenSearchConfig.CaCertificatePath
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.DisableTlsValidation
  name: DisableTlsValidation
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_DisableTlsValidation
  commentId: P:Cheetah.OpenSearch.Configuration.OpenSearchConfig.DisableTlsValidation
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.DisableTlsValidation
  nameWithType: OpenSearchConfig.DisableTlsValidation
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.DisableTlsValidation*
  name: DisableTlsValidation
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_DisableTlsValidation_
  commentId: Overload:Cheetah.OpenSearch.Configuration.OpenSearchConfig.DisableTlsValidation
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.DisableTlsValidation
  nameWithType: OpenSearchConfig.DisableTlsValidation
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OAuth2
  name: OAuth2
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_OAuth2
  commentId: P:Cheetah.OpenSearch.Configuration.OpenSearchConfig.OAuth2
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OAuth2
  nameWithType: OpenSearchConfig.OAuth2
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OAuth2*
  name: OAuth2
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_OAuth2_
  commentId: Overload:Cheetah.OpenSearch.Configuration.OpenSearchConfig.OAuth2
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OAuth2
  nameWithType: OpenSearchConfig.OAuth2
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode
  name: OpenSearchConfig.OpenSearchAuthMode
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.html
  commentId: T:Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode
  nameWithType: OpenSearchConfig.OpenSearchAuthMode
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.Basic
  name: Basic
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_OpenSearchAuthMode_Basic
  commentId: F:Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.Basic
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.Basic
  nameWithType: OpenSearchConfig.OpenSearchAuthMode.Basic
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.None
  name: None
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_OpenSearchAuthMode_None
  commentId: F:Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.None
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.None
  nameWithType: OpenSearchConfig.OpenSearchAuthMode.None
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.OAuth2
  name: OAuth2
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_OpenSearchAuthMode_OAuth2
  commentId: F:Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.OAuth2
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.OpenSearchAuthMode.OAuth2
  nameWithType: OpenSearchConfig.OpenSearchAuthMode.OAuth2
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Password
  name: Password
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_Password
  commentId: P:Cheetah.OpenSearch.Configuration.OpenSearchConfig.Password
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Password
  nameWithType: OpenSearchConfig.Password
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Password*
  name: Password
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_Password_
  commentId: Overload:Cheetah.OpenSearch.Configuration.OpenSearchConfig.Password
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Password
  nameWithType: OpenSearchConfig.Password
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Position
  name: Position
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_Position
  commentId: F:Cheetah.OpenSearch.Configuration.OpenSearchConfig.Position
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Position
  nameWithType: OpenSearchConfig.Position
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Url
  name: Url
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_Url
  commentId: P:Cheetah.OpenSearch.Configuration.OpenSearchConfig.Url
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Url
  nameWithType: OpenSearchConfig.Url
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Url*
  name: Url
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_Url_
  commentId: Overload:Cheetah.OpenSearch.Configuration.OpenSearchConfig.Url
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Url
  nameWithType: OpenSearchConfig.Url
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.UserName
  name: UserName
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_UserName
  commentId: P:Cheetah.OpenSearch.Configuration.OpenSearchConfig.UserName
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.UserName
  nameWithType: OpenSearchConfig.UserName
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.UserName*
  name: UserName
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_UserName_
  commentId: Overload:Cheetah.OpenSearch.Configuration.OpenSearchConfig.UserName
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.UserName
  nameWithType: OpenSearchConfig.UserName
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Validate
  name: Validate()
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_Validate
  commentId: M:Cheetah.OpenSearch.Configuration.OpenSearchConfig.Validate
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Validate()
  nameWithType: OpenSearchConfig.Validate()
- uid: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Validate*
  name: Validate
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Configuration.OpenSearchConfig.html#Cheetah_OpenSearch_Configuration_OpenSearchConfig_Validate_
  commentId: Overload:Cheetah.OpenSearch.Configuration.OpenSearchConfig.Validate
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Configuration.OpenSearchConfig.Validate
  nameWithType: OpenSearchConfig.Validate
- uid: Cheetah.OpenSearch.Connection
  name: Cheetah.OpenSearch.Connection
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Connection.html
  commentId: N:Cheetah.OpenSearch.Connection
  fullName: Cheetah.OpenSearch.Connection
  nameWithType: Cheetah.OpenSearch.Connection
- uid: Cheetah.OpenSearch.Connection.ConnectionPoolHelper
  name: ConnectionPoolHelper
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Connection.ConnectionPoolHelper.html
  commentId: T:Cheetah.OpenSearch.Connection.ConnectionPoolHelper
  fullName: Cheetah.OpenSearch.Connection.ConnectionPoolHelper
  nameWithType: ConnectionPoolHelper
- uid: Cheetah.OpenSearch.Connection.ConnectionPoolHelper.GetConnectionPool(System.String)
  name: GetConnectionPool(string)
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Connection.ConnectionPoolHelper.html#Cheetah_OpenSearch_Connection_ConnectionPoolHelper_GetConnectionPool_System_String_
  commentId: M:Cheetah.OpenSearch.Connection.ConnectionPoolHelper.GetConnectionPool(System.String)
  name.vb: GetConnectionPool(String)
  fullName: Cheetah.OpenSearch.Connection.ConnectionPoolHelper.GetConnectionPool(string)
  fullName.vb: Cheetah.OpenSearch.Connection.ConnectionPoolHelper.GetConnectionPool(String)
  nameWithType: ConnectionPoolHelper.GetConnectionPool(string)
  nameWithType.vb: ConnectionPoolHelper.GetConnectionPool(String)
- uid: Cheetah.OpenSearch.Connection.ConnectionPoolHelper.GetConnectionPool*
  name: GetConnectionPool
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Connection.ConnectionPoolHelper.html#Cheetah_OpenSearch_Connection_ConnectionPoolHelper_GetConnectionPool_
  commentId: Overload:Cheetah.OpenSearch.Connection.ConnectionPoolHelper.GetConnectionPool
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Connection.ConnectionPoolHelper.GetConnectionPool
  nameWithType: ConnectionPoolHelper.GetConnectionPool
- uid: Cheetah.OpenSearch.Constants
  name: Constants
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Constants.html
  commentId: T:Cheetah.OpenSearch.Constants
  fullName: Cheetah.OpenSearch.Constants
  nameWithType: Constants
- uid: Cheetah.OpenSearch.Constants.TokenServiceKey
  name: TokenServiceKey
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Constants.html#Cheetah_OpenSearch_Constants_TokenServiceKey
  commentId: F:Cheetah.OpenSearch.Constants.TokenServiceKey
  fullName: Cheetah.OpenSearch.Constants.TokenServiceKey
  nameWithType: Constants.TokenServiceKey
- uid: Cheetah.OpenSearch.Extensions
  name: Cheetah.OpenSearch.Extensions
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Extensions.html
  commentId: N:Cheetah.OpenSearch.Extensions
  fullName: Cheetah.OpenSearch.Extensions
  nameWithType: Cheetah.OpenSearch.Extensions
- uid: Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.html
  commentId: T:Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions
  fullName: Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.AddCheetahOpenSearch(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Cheetah.OpenSearch.OpenSearchClientOptions})
  name: AddCheetahOpenSearch(IServiceCollection, IConfiguration, Action<OpenSearchClientOptions>?)
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.html#Cheetah_OpenSearch_Extensions_ServiceCollectionExtensions_AddCheetahOpenSearch_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_System_Action_Cheetah_OpenSearch_OpenSearchClientOptions__
  commentId: M:Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.AddCheetahOpenSearch(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Cheetah.OpenSearch.OpenSearchClientOptions})
  name.vb: AddCheetahOpenSearch(IServiceCollection, IConfiguration, Action(Of OpenSearchClientOptions))
  fullName: Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.AddCheetahOpenSearch(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Cheetah.OpenSearch.OpenSearchClientOptions>?)
  fullName.vb: Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.AddCheetahOpenSearch(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Cheetah.OpenSearch.OpenSearchClientOptions))
  nameWithType: ServiceCollectionExtensions.AddCheetahOpenSearch(IServiceCollection, IConfiguration, Action<OpenSearchClientOptions>?)
  nameWithType.vb: ServiceCollectionExtensions.AddCheetahOpenSearch(IServiceCollection, IConfiguration, Action(Of OpenSearchClientOptions))
- uid: Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.AddCheetahOpenSearch*
  name: AddCheetahOpenSearch
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.html#Cheetah_OpenSearch_Extensions_ServiceCollectionExtensions_AddCheetahOpenSearch_
  commentId: Overload:Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.AddCheetahOpenSearch
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Extensions.ServiceCollectionExtensions.AddCheetahOpenSearch
  nameWithType: ServiceCollectionExtensions.AddCheetahOpenSearch
- uid: Cheetah.OpenSearch.OpenSearchClientFactory
  name: OpenSearchClientFactory
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientFactory.html
  commentId: T:Cheetah.OpenSearch.OpenSearchClientFactory
  fullName: Cheetah.OpenSearch.OpenSearchClientFactory
  nameWithType: OpenSearchClientFactory
- uid: Cheetah.OpenSearch.OpenSearchClientFactory.#ctor(Microsoft.Extensions.Options.IOptions{Cheetah.OpenSearch.Configuration.OpenSearchConfig},Microsoft.Extensions.Logging.ILogger{OpenSearch.Client.OpenSearchClient},Microsoft.Extensions.Logging.ILogger{Cheetah.OpenSearch.OpenSearchClientFactory},Cheetah.OpenSearch.OpenSearchClientOptions,OpenSearch.Net.IConnectionPool,OpenSearch.Net.IConnection)
  name: OpenSearchClientFactory(IOptions<OpenSearchConfig>, ILogger<OpenSearchClient>, ILogger<OpenSearchClientFactory>, OpenSearchClientOptions, IConnectionPool, IConnection?)
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientFactory.html#Cheetah_OpenSearch_OpenSearchClientFactory__ctor_Microsoft_Extensions_Options_IOptions_Cheetah_OpenSearch_Configuration_OpenSearchConfig__Microsoft_Extensions_Logging_ILogger_OpenSearch_Client_OpenSearchClient__Microsoft_Extensions_Logging_ILogger_Cheetah_OpenSearch_OpenSearchClientFactory__Cheetah_OpenSearch_OpenSearchClientOptions_OpenSearch_Net_IConnectionPool_OpenSearch_Net_IConnection_
  commentId: M:Cheetah.OpenSearch.OpenSearchClientFactory.#ctor(Microsoft.Extensions.Options.IOptions{Cheetah.OpenSearch.Configuration.OpenSearchConfig},Microsoft.Extensions.Logging.ILogger{OpenSearch.Client.OpenSearchClient},Microsoft.Extensions.Logging.ILogger{Cheetah.OpenSearch.OpenSearchClientFactory},Cheetah.OpenSearch.OpenSearchClientOptions,OpenSearch.Net.IConnectionPool,OpenSearch.Net.IConnection)
  name.vb: New(IOptions(Of OpenSearchConfig), ILogger(Of OpenSearchClient), ILogger(Of OpenSearchClientFactory), OpenSearchClientOptions, IConnectionPool, IConnection)
  fullName: Cheetah.OpenSearch.OpenSearchClientFactory.OpenSearchClientFactory(Microsoft.Extensions.Options.IOptions<Cheetah.OpenSearch.Configuration.OpenSearchConfig>, Microsoft.Extensions.Logging.ILogger<OpenSearch.Client.OpenSearchClient>, Microsoft.Extensions.Logging.ILogger<Cheetah.OpenSearch.OpenSearchClientFactory>, Cheetah.OpenSearch.OpenSearchClientOptions, OpenSearch.Net.IConnectionPool, OpenSearch.Net.IConnection?)
  fullName.vb: Cheetah.OpenSearch.OpenSearchClientFactory.New(Microsoft.Extensions.Options.IOptions(Of Cheetah.OpenSearch.Configuration.OpenSearchConfig), Microsoft.Extensions.Logging.ILogger(Of OpenSearch.Client.OpenSearchClient), Microsoft.Extensions.Logging.ILogger(Of Cheetah.OpenSearch.OpenSearchClientFactory), Cheetah.OpenSearch.OpenSearchClientOptions, OpenSearch.Net.IConnectionPool, OpenSearch.Net.IConnection)
  nameWithType: OpenSearchClientFactory.OpenSearchClientFactory(IOptions<OpenSearchConfig>, ILogger<OpenSearchClient>, ILogger<OpenSearchClientFactory>, OpenSearchClientOptions, IConnectionPool, IConnection?)
  nameWithType.vb: OpenSearchClientFactory.New(IOptions(Of OpenSearchConfig), ILogger(Of OpenSearchClient), ILogger(Of OpenSearchClientFactory), OpenSearchClientOptions, IConnectionPool, IConnection)
- uid: Cheetah.OpenSearch.OpenSearchClientFactory.#ctor*
  name: OpenSearchClientFactory
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientFactory.html#Cheetah_OpenSearch_OpenSearchClientFactory__ctor_
  commentId: Overload:Cheetah.OpenSearch.OpenSearchClientFactory.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.OpenSearch.OpenSearchClientFactory.OpenSearchClientFactory
  fullName.vb: Cheetah.OpenSearch.OpenSearchClientFactory.New
  nameWithType: OpenSearchClientFactory.OpenSearchClientFactory
  nameWithType.vb: OpenSearchClientFactory.New
- uid: Cheetah.OpenSearch.OpenSearchClientFactory.CreateOpenSearchClient
  name: CreateOpenSearchClient()
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientFactory.html#Cheetah_OpenSearch_OpenSearchClientFactory_CreateOpenSearchClient
  commentId: M:Cheetah.OpenSearch.OpenSearchClientFactory.CreateOpenSearchClient
  fullName: Cheetah.OpenSearch.OpenSearchClientFactory.CreateOpenSearchClient()
  nameWithType: OpenSearchClientFactory.CreateOpenSearchClient()
- uid: Cheetah.OpenSearch.OpenSearchClientFactory.CreateOpenSearchClient*
  name: CreateOpenSearchClient
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientFactory.html#Cheetah_OpenSearch_OpenSearchClientFactory_CreateOpenSearchClient_
  commentId: Overload:Cheetah.OpenSearch.OpenSearchClientFactory.CreateOpenSearchClient
  isSpec: "True"
  fullName: Cheetah.OpenSearch.OpenSearchClientFactory.CreateOpenSearchClient
  nameWithType: OpenSearchClientFactory.CreateOpenSearchClient
- uid: Cheetah.OpenSearch.OpenSearchClientOptions
  name: OpenSearchClientOptions
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientOptions.html
  commentId: T:Cheetah.OpenSearch.OpenSearchClientOptions
  fullName: Cheetah.OpenSearch.OpenSearchClientOptions
  nameWithType: OpenSearchClientOptions
- uid: Cheetah.OpenSearch.OpenSearchClientOptions.JsonSerializerSettings
  name: JsonSerializerSettings
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientOptions.html#Cheetah_OpenSearch_OpenSearchClientOptions_JsonSerializerSettings
  commentId: P:Cheetah.OpenSearch.OpenSearchClientOptions.JsonSerializerSettings
  fullName: Cheetah.OpenSearch.OpenSearchClientOptions.JsonSerializerSettings
  nameWithType: OpenSearchClientOptions.JsonSerializerSettings
- uid: Cheetah.OpenSearch.OpenSearchClientOptions.JsonSerializerSettings*
  name: JsonSerializerSettings
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientOptions.html#Cheetah_OpenSearch_OpenSearchClientOptions_JsonSerializerSettings_
  commentId: Overload:Cheetah.OpenSearch.OpenSearchClientOptions.JsonSerializerSettings
  isSpec: "True"
  fullName: Cheetah.OpenSearch.OpenSearchClientOptions.JsonSerializerSettings
  nameWithType: OpenSearchClientOptions.JsonSerializerSettings
- uid: Cheetah.OpenSearch.OpenSearchClientOptions.WithConnectionSettings(System.Action{OpenSearch.Client.ConnectionSettings})
  name: WithConnectionSettings(Action<ConnectionSettings>)
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientOptions.html#Cheetah_OpenSearch_OpenSearchClientOptions_WithConnectionSettings_System_Action_OpenSearch_Client_ConnectionSettings__
  commentId: M:Cheetah.OpenSearch.OpenSearchClientOptions.WithConnectionSettings(System.Action{OpenSearch.Client.ConnectionSettings})
  name.vb: WithConnectionSettings(Action(Of ConnectionSettings))
  fullName: Cheetah.OpenSearch.OpenSearchClientOptions.WithConnectionSettings(System.Action<OpenSearch.Client.ConnectionSettings>)
  fullName.vb: Cheetah.OpenSearch.OpenSearchClientOptions.WithConnectionSettings(System.Action(Of OpenSearch.Client.ConnectionSettings))
  nameWithType: OpenSearchClientOptions.WithConnectionSettings(Action<ConnectionSettings>)
  nameWithType.vb: OpenSearchClientOptions.WithConnectionSettings(Action(Of ConnectionSettings))
- uid: Cheetah.OpenSearch.OpenSearchClientOptions.WithConnectionSettings*
  name: WithConnectionSettings
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientOptions.html#Cheetah_OpenSearch_OpenSearchClientOptions_WithConnectionSettings_
  commentId: Overload:Cheetah.OpenSearch.OpenSearchClientOptions.WithConnectionSettings
  isSpec: "True"
  fullName: Cheetah.OpenSearch.OpenSearchClientOptions.WithConnectionSettings
  nameWithType: OpenSearchClientOptions.WithConnectionSettings
- uid: Cheetah.OpenSearch.OpenSearchClientOptions.WithJsonSerializerSettings(System.Action{Newtonsoft.Json.JsonSerializerSettings})
  name: WithJsonSerializerSettings(Action<JsonSerializerSettings>)
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientOptions.html#Cheetah_OpenSearch_OpenSearchClientOptions_WithJsonSerializerSettings_System_Action_Newtonsoft_Json_JsonSerializerSettings__
  commentId: M:Cheetah.OpenSearch.OpenSearchClientOptions.WithJsonSerializerSettings(System.Action{Newtonsoft.Json.JsonSerializerSettings})
  name.vb: WithJsonSerializerSettings(Action(Of JsonSerializerSettings))
  fullName: Cheetah.OpenSearch.OpenSearchClientOptions.WithJsonSerializerSettings(System.Action<Newtonsoft.Json.JsonSerializerSettings>)
  fullName.vb: Cheetah.OpenSearch.OpenSearchClientOptions.WithJsonSerializerSettings(System.Action(Of Newtonsoft.Json.JsonSerializerSettings))
  nameWithType: OpenSearchClientOptions.WithJsonSerializerSettings(Action<JsonSerializerSettings>)
  nameWithType.vb: OpenSearchClientOptions.WithJsonSerializerSettings(Action(Of JsonSerializerSettings))
- uid: Cheetah.OpenSearch.OpenSearchClientOptions.WithJsonSerializerSettings*
  name: WithJsonSerializerSettings
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.OpenSearchClientOptions.html#Cheetah_OpenSearch_OpenSearchClientOptions_WithJsonSerializerSettings_
  commentId: Overload:Cheetah.OpenSearch.OpenSearchClientOptions.WithJsonSerializerSettings
  isSpec: "True"
  fullName: Cheetah.OpenSearch.OpenSearchClientOptions.WithJsonSerializerSettings
  nameWithType: OpenSearchClientOptions.WithJsonSerializerSettings
- uid: Cheetah.OpenSearch.Testing
  name: Cheetah.OpenSearch.Testing
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Testing.html
  commentId: N:Cheetah.OpenSearch.Testing
  fullName: Cheetah.OpenSearch.Testing
  nameWithType: Cheetah.OpenSearch.Testing
- uid: Cheetah.OpenSearch.Testing.OpenSearchTestClient
  name: OpenSearchTestClient
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Testing.OpenSearchTestClient.html
  commentId: T:Cheetah.OpenSearch.Testing.OpenSearchTestClient
  fullName: Cheetah.OpenSearch.Testing.OpenSearchTestClient
  nameWithType: OpenSearchTestClient
- uid: Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create(Cheetah.OpenSearch.Configuration.OpenSearchConfig,Cheetah.OpenSearch.OpenSearchClientOptions)
  name: Create(OpenSearchConfig, OpenSearchClientOptions?)
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Testing.OpenSearchTestClient.html#Cheetah_OpenSearch_Testing_OpenSearchTestClient_Create_Cheetah_OpenSearch_Configuration_OpenSearchConfig_Cheetah_OpenSearch_OpenSearchClientOptions_
  commentId: M:Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create(Cheetah.OpenSearch.Configuration.OpenSearchConfig,Cheetah.OpenSearch.OpenSearchClientOptions)
  name.vb: Create(OpenSearchConfig, OpenSearchClientOptions)
  fullName: Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create(Cheetah.OpenSearch.Configuration.OpenSearchConfig, Cheetah.OpenSearch.OpenSearchClientOptions?)
  fullName.vb: Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create(Cheetah.OpenSearch.Configuration.OpenSearchConfig, Cheetah.OpenSearch.OpenSearchClientOptions)
  nameWithType: OpenSearchTestClient.Create(OpenSearchConfig, OpenSearchClientOptions?)
  nameWithType.vb: OpenSearchTestClient.Create(OpenSearchConfig, OpenSearchClientOptions)
- uid: Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create(Microsoft.Extensions.Configuration.IConfiguration,Cheetah.OpenSearch.OpenSearchClientOptions)
  name: Create(IConfiguration, OpenSearchClientOptions?)
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Testing.OpenSearchTestClient.html#Cheetah_OpenSearch_Testing_OpenSearchTestClient_Create_Microsoft_Extensions_Configuration_IConfiguration_Cheetah_OpenSearch_OpenSearchClientOptions_
  commentId: M:Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create(Microsoft.Extensions.Configuration.IConfiguration,Cheetah.OpenSearch.OpenSearchClientOptions)
  name.vb: Create(IConfiguration, OpenSearchClientOptions)
  fullName: Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create(Microsoft.Extensions.Configuration.IConfiguration, Cheetah.OpenSearch.OpenSearchClientOptions?)
  fullName.vb: Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create(Microsoft.Extensions.Configuration.IConfiguration, Cheetah.OpenSearch.OpenSearchClientOptions)
  nameWithType: OpenSearchTestClient.Create(IConfiguration, OpenSearchClientOptions?)
  nameWithType.vb: OpenSearchTestClient.Create(IConfiguration, OpenSearchClientOptions)
- uid: Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create*
  name: Create
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Testing.OpenSearchTestClient.html#Cheetah_OpenSearch_Testing_OpenSearchTestClient_Create_
  commentId: Overload:Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Testing.OpenSearchTestClient.Create
  nameWithType: OpenSearchTestClient.Create
- uid: Cheetah.OpenSearch.Util
  name: Cheetah.OpenSearch.Util
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Util.html
  commentId: N:Cheetah.OpenSearch.Util
  fullName: Cheetah.OpenSearch.Util
  nameWithType: Cheetah.OpenSearch.Util
- uid: Cheetah.OpenSearch.Util.UtcDateTimeConverter
  name: UtcDateTimeConverter
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Util.UtcDateTimeConverter.html
  commentId: T:Cheetah.OpenSearch.Util.UtcDateTimeConverter
  fullName: Cheetah.OpenSearch.Util.UtcDateTimeConverter
  nameWithType: UtcDateTimeConverter
- uid: Cheetah.OpenSearch.Util.UtcDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  name: ReadJson(JsonReader, Type, object?, JsonSerializer)
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Util.UtcDateTimeConverter.html#Cheetah_OpenSearch_Util_UtcDateTimeConverter_ReadJson_Newtonsoft_Json_JsonReader_System_Type_System_Object_Newtonsoft_Json_JsonSerializer_
  commentId: M:Cheetah.OpenSearch.Util.UtcDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  name.vb: ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: Cheetah.OpenSearch.Util.UtcDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object?, Newtonsoft.Json.JsonSerializer)
  fullName.vb: Cheetah.OpenSearch.Util.UtcDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Object, Newtonsoft.Json.JsonSerializer)
  nameWithType: UtcDateTimeConverter.ReadJson(JsonReader, Type, object?, JsonSerializer)
  nameWithType.vb: UtcDateTimeConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
- uid: Cheetah.OpenSearch.Util.UtcDateTimeConverter.ReadJson*
  name: ReadJson
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Util.UtcDateTimeConverter.html#Cheetah_OpenSearch_Util_UtcDateTimeConverter_ReadJson_
  commentId: Overload:Cheetah.OpenSearch.Util.UtcDateTimeConverter.ReadJson
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Util.UtcDateTimeConverter.ReadJson
  nameWithType: UtcDateTimeConverter.ReadJson
- uid: Cheetah.OpenSearch.Util.UtcDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  name: WriteJson(JsonWriter, object?, JsonSerializer)
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Util.UtcDateTimeConverter.html#Cheetah_OpenSearch_Util_UtcDateTimeConverter_WriteJson_Newtonsoft_Json_JsonWriter_System_Object_Newtonsoft_Json_JsonSerializer_
  commentId: M:Cheetah.OpenSearch.Util.UtcDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  name.vb: WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: Cheetah.OpenSearch.Util.UtcDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object?, Newtonsoft.Json.JsonSerializer)
  fullName.vb: Cheetah.OpenSearch.Util.UtcDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, Object, Newtonsoft.Json.JsonSerializer)
  nameWithType: UtcDateTimeConverter.WriteJson(JsonWriter, object?, JsonSerializer)
  nameWithType.vb: UtcDateTimeConverter.WriteJson(JsonWriter, Object, JsonSerializer)
- uid: Cheetah.OpenSearch.Util.UtcDateTimeConverter.WriteJson*
  name: WriteJson
  href: api/Cheetah.OpenSearch/Cheetah.OpenSearch.Util.UtcDateTimeConverter.html#Cheetah_OpenSearch_Util_UtcDateTimeConverter_WriteJson_
  commentId: Overload:Cheetah.OpenSearch.Util.UtcDateTimeConverter.WriteJson
  isSpec: "True"
  fullName: Cheetah.OpenSearch.Util.UtcDateTimeConverter.WriteJson
  nameWithType: UtcDateTimeConverter.WriteJson
- uid: Cheetah.SchemaRegistry.Avro
  name: Cheetah.SchemaRegistry.Avro
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.html
  commentId: N:Cheetah.SchemaRegistry.Avro
  fullName: Cheetah.SchemaRegistry.Avro
  nameWithType: Cheetah.SchemaRegistry.Avro
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializer
  name: AvroDeserializer
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializer.html
  commentId: T:Cheetah.SchemaRegistry.Avro.AvroDeserializer
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializer
  nameWithType: AvroDeserializer
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializer.FromServices*
  name: FromServices
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializer.html#Cheetah_SchemaRegistry_Avro_AvroDeserializer_FromServices_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroDeserializer.FromServices
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializer.FromServices
  nameWithType: AvroDeserializer.FromServices
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializer.FromServices``1(Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig)
  name: FromServices<T>(AvroDeserializerConfig?)
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializer.html#Cheetah_SchemaRegistry_Avro_AvroDeserializer_FromServices__1_Confluent_SchemaRegistry_Serdes_AvroDeserializerConfig_
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroDeserializer.FromServices``1(Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig)
  name.vb: FromServices(Of T)(AvroDeserializerConfig)
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializer.FromServices<T>(Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig?)
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroDeserializer.FromServices(Of T)(Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig)
  nameWithType: AvroDeserializer.FromServices<T>(AvroDeserializerConfig?)
  nameWithType.vb: AvroDeserializer.FromServices(Of T)(AvroDeserializerConfig)
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider
  name: AvroDeserializerProvider
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.html
  commentId: T:Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider
  nameWithType: AvroDeserializerProvider
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig)
  name: AvroDeserializerProvider(ISchemaRegistryClient, AvroDeserializerConfig?)
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroDeserializerProvider__ctor_Confluent_SchemaRegistry_ISchemaRegistryClient_Confluent_SchemaRegistry_Serdes_AvroDeserializerConfig_
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig)
  name.vb: New(ISchemaRegistryClient, AvroDeserializerConfig)
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.AvroDeserializerProvider(Confluent.SchemaRegistry.ISchemaRegistryClient, Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig?)
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.New(Confluent.SchemaRegistry.ISchemaRegistryClient, Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig)
  nameWithType: AvroDeserializerProvider.AvroDeserializerProvider(ISchemaRegistryClient, AvroDeserializerConfig?)
  nameWithType.vb: AvroDeserializerProvider.New(ISchemaRegistryClient, AvroDeserializerConfig)
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.#ctor*
  name: AvroDeserializerProvider
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroDeserializerProvider__ctor_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.AvroDeserializerProvider
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.New
  nameWithType: AvroDeserializerProvider.AvroDeserializerProvider
  nameWithType.vb: AvroDeserializerProvider.New
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig)
  name: FromServices(AvroDeserializerConfig?)
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroDeserializerProvider_FromServices_Confluent_SchemaRegistry_Serdes_AvroDeserializerConfig_
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig)
  name.vb: FromServices(AvroDeserializerConfig)
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig?)
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroDeserializerConfig)
  nameWithType: AvroDeserializerProvider.FromServices(AvroDeserializerConfig?)
  nameWithType.vb: AvroDeserializerProvider.FromServices(AvroDeserializerConfig)
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.FromServices*
  name: FromServices
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroDeserializerProvider_FromServices_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.FromServices
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.FromServices
  nameWithType: AvroDeserializerProvider.FromServices
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetKeyDeserializer*
  name: GetKeyDeserializer
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroDeserializerProvider_GetKeyDeserializer_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetKeyDeserializer
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetKeyDeserializer
  nameWithType: AvroDeserializerProvider.GetKeyDeserializer
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetKeyDeserializer``1
  name: GetKeyDeserializer<T>()
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroDeserializerProvider_GetKeyDeserializer__1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetKeyDeserializer``1
  name.vb: GetKeyDeserializer(Of T)()
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetKeyDeserializer<T>()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetKeyDeserializer(Of T)()
  nameWithType: AvroDeserializerProvider.GetKeyDeserializer<T>()
  nameWithType.vb: AvroDeserializerProvider.GetKeyDeserializer(Of T)()
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetValueDeserializer*
  name: GetValueDeserializer
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroDeserializerProvider_GetValueDeserializer_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetValueDeserializer
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetValueDeserializer
  nameWithType: AvroDeserializerProvider.GetValueDeserializer
- uid: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetValueDeserializer``1
  name: GetValueDeserializer<T>()
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroDeserializerProvider_GetValueDeserializer__1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetValueDeserializer``1
  name.vb: GetValueDeserializer(Of T)()
  fullName: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetValueDeserializer<T>()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroDeserializerProvider.GetValueDeserializer(Of T)()
  nameWithType: AvroDeserializerProvider.GetValueDeserializer<T>()
  nameWithType.vb: AvroDeserializerProvider.GetValueDeserializer(Of T)()
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializer
  name: AvroSerializer
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializer.html
  commentId: T:Cheetah.SchemaRegistry.Avro.AvroSerializer
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializer
  nameWithType: AvroSerializer
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializer.FromServices*
  name: FromServices
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializer.html#Cheetah_SchemaRegistry_Avro_AvroSerializer_FromServices_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializer.FromServices
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializer.FromServices
  nameWithType: AvroSerializer.FromServices
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializer.FromServices``1(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  name: FromServices<T>(AvroSerializerConfig?)
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializer.html#Cheetah_SchemaRegistry_Avro_AvroSerializer_FromServices__1_Confluent_SchemaRegistry_Serdes_AvroSerializerConfig_
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializer.FromServices``1(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  name.vb: FromServices(Of T)(AvroSerializerConfig)
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializer.FromServices<T>(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig?)
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializer.FromServices(Of T)(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  nameWithType: AvroSerializer.FromServices<T>(AvroSerializerConfig?)
  nameWithType.vb: AvroSerializer.FromServices(Of T)(AvroSerializerConfig)
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  name: AvroSerializerProvider
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html
  commentId: T:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider
  nameWithType: AvroSerializerProvider
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  name: AvroSerializerProvider(ISchemaRegistryClient, AvroSerializerConfig?)
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider__ctor_Confluent_SchemaRegistry_ISchemaRegistryClient_Confluent_SchemaRegistry_Serdes_AvroSerializerConfig_
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  name.vb: New(ISchemaRegistryClient, AvroSerializerConfig)
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.AvroSerializerProvider(Confluent.SchemaRegistry.ISchemaRegistryClient, Confluent.SchemaRegistry.Serdes.AvroSerializerConfig?)
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.New(Confluent.SchemaRegistry.ISchemaRegistryClient, Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  nameWithType: AvroSerializerProvider.AvroSerializerProvider(ISchemaRegistryClient, AvroSerializerConfig?)
  nameWithType.vb: AvroSerializerProvider.New(ISchemaRegistryClient, AvroSerializerConfig)
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor*
  name: AvroSerializerProvider
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider__ctor_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.AvroSerializerProvider
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.New
  nameWithType: AvroSerializerProvider.AvroSerializerProvider
  nameWithType.vb: AvroSerializerProvider.New
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  name: FromServices(AvroSerializerConfig?)
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_FromServices_Confluent_SchemaRegistry_Serdes_AvroSerializerConfig_
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  name.vb: FromServices(AvroSerializerConfig)
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig?)
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices(Confluent.SchemaRegistry.Serdes.AvroSerializerConfig)
  nameWithType: AvroSerializerProvider.FromServices(AvroSerializerConfig?)
  nameWithType.vb: AvroSerializerProvider.FromServices(AvroSerializerConfig)
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices*
  name: FromServices
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_FromServices_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.FromServices
  nameWithType: AvroSerializerProvider.FromServices
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer*
  name: GetKeyDeserializer
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetKeyDeserializer_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer
  nameWithType: AvroSerializerProvider.GetKeyDeserializer
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer``1
  name: GetKeyDeserializer<T>()
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetKeyDeserializer__1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer``1
  name.vb: GetKeyDeserializer(Of T)()
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer<T>()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeyDeserializer(Of T)()
  nameWithType: AvroSerializerProvider.GetKeyDeserializer<T>()
  nameWithType.vb: AvroSerializerProvider.GetKeyDeserializer(Of T)()
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer*
  name: GetKeySerializer
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetKeySerializer_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer
  nameWithType: AvroSerializerProvider.GetKeySerializer
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer``1
  name: GetKeySerializer<T>()
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetKeySerializer__1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer``1
  name.vb: GetKeySerializer(Of T)()
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer<T>()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetKeySerializer(Of T)()
  nameWithType: AvroSerializerProvider.GetKeySerializer<T>()
  nameWithType.vb: AvroSerializerProvider.GetKeySerializer(Of T)()
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer*
  name: GetValueDeserializer
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetValueDeserializer_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer
  nameWithType: AvroSerializerProvider.GetValueDeserializer
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer``1
  name: GetValueDeserializer<T>()
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetValueDeserializer__1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer``1
  name.vb: GetValueDeserializer(Of T)()
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer<T>()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueDeserializer(Of T)()
  nameWithType: AvroSerializerProvider.GetValueDeserializer<T>()
  nameWithType.vb: AvroSerializerProvider.GetValueDeserializer(Of T)()
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer*
  name: GetValueSerializer
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetValueSerializer_
  commentId: Overload:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer
  nameWithType: AvroSerializerProvider.GetValueSerializer
- uid: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer``1
  name: GetValueSerializer<T>()
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.html#Cheetah_SchemaRegistry_Avro_AvroSerializerProvider_GetValueSerializer__1
  commentId: M:Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer``1
  name.vb: GetValueSerializer(Of T)()
  fullName: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer<T>()
  fullName.vb: Cheetah.SchemaRegistry.Avro.AvroSerializerProvider.GetValueSerializer(Of T)()
  nameWithType: AvroSerializerProvider.GetValueSerializer<T>()
  nameWithType.vb: AvroSerializerProvider.GetValueSerializer(Of T)()
- uid: Cheetah.SchemaRegistry.Avro.Constants
  name: Constants
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.Constants.html
  commentId: T:Cheetah.SchemaRegistry.Avro.Constants
  fullName: Cheetah.SchemaRegistry.Avro.Constants
  nameWithType: Constants
- uid: Cheetah.SchemaRegistry.Avro.Constants.TokenServiceKey
  name: TokenServiceKey
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Avro.Constants.html#Cheetah_SchemaRegistry_Avro_Constants_TokenServiceKey
  commentId: F:Cheetah.SchemaRegistry.Avro.Constants.TokenServiceKey
  fullName: Cheetah.SchemaRegistry.Avro.Constants.TokenServiceKey
  nameWithType: Constants.TokenServiceKey
- uid: Cheetah.SchemaRegistry.Configuration
  name: Cheetah.SchemaRegistry.Configuration
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.html
  commentId: N:Cheetah.SchemaRegistry.Configuration
  fullName: Cheetah.SchemaRegistry.Configuration
  nameWithType: Cheetah.SchemaRegistry.Configuration
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig
  name: SchemaConfig
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html
  commentId: T:Cheetah.SchemaRegistry.Configuration.SchemaConfig
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig
  nameWithType: SchemaConfig
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig.GetSchemaRegistryConfig
  name: GetSchemaRegistryConfig()
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html#Cheetah_SchemaRegistry_Configuration_SchemaConfig_GetSchemaRegistryConfig
  commentId: M:Cheetah.SchemaRegistry.Configuration.SchemaConfig.GetSchemaRegistryConfig
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig.GetSchemaRegistryConfig()
  nameWithType: SchemaConfig.GetSchemaRegistryConfig()
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig.GetSchemaRegistryConfig*
  name: GetSchemaRegistryConfig
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html#Cheetah_SchemaRegistry_Configuration_SchemaConfig_GetSchemaRegistryConfig_
  commentId: Overload:Cheetah.SchemaRegistry.Configuration.SchemaConfig.GetSchemaRegistryConfig
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig.GetSchemaRegistryConfig
  nameWithType: SchemaConfig.GetSchemaRegistryConfig
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig.OAuth2
  name: OAuth2
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html#Cheetah_SchemaRegistry_Configuration_SchemaConfig_OAuth2
  commentId: P:Cheetah.SchemaRegistry.Configuration.SchemaConfig.OAuth2
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig.OAuth2
  nameWithType: SchemaConfig.OAuth2
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig.OAuth2*
  name: OAuth2
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html#Cheetah_SchemaRegistry_Configuration_SchemaConfig_OAuth2_
  commentId: Overload:Cheetah.SchemaRegistry.Configuration.SchemaConfig.OAuth2
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig.OAuth2
  nameWithType: SchemaConfig.OAuth2
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Position
  name: Position
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html#Cheetah_SchemaRegistry_Configuration_SchemaConfig_Position
  commentId: F:Cheetah.SchemaRegistry.Configuration.SchemaConfig.Position
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Position
  nameWithType: SchemaConfig.Position
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Url
  name: Url
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html#Cheetah_SchemaRegistry_Configuration_SchemaConfig_Url
  commentId: P:Cheetah.SchemaRegistry.Configuration.SchemaConfig.Url
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Url
  nameWithType: SchemaConfig.Url
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Url*
  name: Url
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html#Cheetah_SchemaRegistry_Configuration_SchemaConfig_Url_
  commentId: Overload:Cheetah.SchemaRegistry.Configuration.SchemaConfig.Url
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Url
  nameWithType: SchemaConfig.Url
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Validate
  name: Validate()
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html#Cheetah_SchemaRegistry_Configuration_SchemaConfig_Validate
  commentId: M:Cheetah.SchemaRegistry.Configuration.SchemaConfig.Validate
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Validate()
  nameWithType: SchemaConfig.Validate()
- uid: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Validate*
  name: Validate
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Configuration.SchemaConfig.html#Cheetah_SchemaRegistry_Configuration_SchemaConfig_Validate_
  commentId: Overload:Cheetah.SchemaRegistry.Configuration.SchemaConfig.Validate
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Configuration.SchemaConfig.Validate
  nameWithType: SchemaConfig.Validate
- uid: Cheetah.SchemaRegistry.Extensions
  name: Cheetah.SchemaRegistry.Extensions
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Extensions.html
  commentId: N:Cheetah.SchemaRegistry.Extensions
  fullName: Cheetah.SchemaRegistry.Extensions
  nameWithType: Cheetah.SchemaRegistry.Extensions
- uid: Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions
  name: ServiceCollectionExtensions
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions.html
  commentId: T:Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions
  fullName: Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
- uid: Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions.AddCheetahSchemaRegistry(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddCheetahSchemaRegistry(IServiceCollection, IConfiguration)
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions.html#Cheetah_SchemaRegistry_Extensions_ServiceCollectionExtensions_AddCheetahSchemaRegistry_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions.AddCheetahSchemaRegistry(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions.AddCheetahSchemaRegistry(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ServiceCollectionExtensions.AddCheetahSchemaRegistry(IServiceCollection, IConfiguration)
- uid: Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions.AddCheetahSchemaRegistry*
  name: AddCheetahSchemaRegistry
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions.html#Cheetah_SchemaRegistry_Extensions_ServiceCollectionExtensions_AddCheetahSchemaRegistry_
  commentId: Overload:Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions.AddCheetahSchemaRegistry
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Extensions.ServiceCollectionExtensions.AddCheetahSchemaRegistry
  nameWithType: ServiceCollectionExtensions.AddCheetahSchemaRegistry
- uid: Cheetah.SchemaRegistry.Testing
  name: Cheetah.SchemaRegistry.Testing
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Testing.html
  commentId: N:Cheetah.SchemaRegistry.Testing
  fullName: Cheetah.SchemaRegistry.Testing
  nameWithType: Cheetah.SchemaRegistry.Testing
- uid: Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory
  name: AvroKafkaTestClientFactory
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.html
  commentId: T:Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory
  fullName: Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory
  nameWithType: AvroKafkaTestClientFactory
- uid: Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.Create(Microsoft.Extensions.Configuration.IConfiguration,Cheetah.Kafka.ClientFactoryOptions,Cheetah.Auth.Authentication.ITokenService,Microsoft.Extensions.Logging.ILoggerFactory)
  name: Create(IConfiguration, ClientFactoryOptions?, ITokenService?, ILoggerFactory?)
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.html#Cheetah_SchemaRegistry_Testing_AvroKafkaTestClientFactory_Create_Microsoft_Extensions_Configuration_IConfiguration_Cheetah_Kafka_ClientFactoryOptions_Cheetah_Auth_Authentication_ITokenService_Microsoft_Extensions_Logging_ILoggerFactory_
  commentId: M:Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.Create(Microsoft.Extensions.Configuration.IConfiguration,Cheetah.Kafka.ClientFactoryOptions,Cheetah.Auth.Authentication.ITokenService,Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: Create(IConfiguration, ClientFactoryOptions, ITokenService, ILoggerFactory)
  fullName: Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.Create(Microsoft.Extensions.Configuration.IConfiguration, Cheetah.Kafka.ClientFactoryOptions?, Cheetah.Auth.Authentication.ITokenService?, Microsoft.Extensions.Logging.ILoggerFactory?)
  fullName.vb: Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.Create(Microsoft.Extensions.Configuration.IConfiguration, Cheetah.Kafka.ClientFactoryOptions, Cheetah.Auth.Authentication.ITokenService, Microsoft.Extensions.Logging.ILoggerFactory)
  nameWithType: AvroKafkaTestClientFactory.Create(IConfiguration, ClientFactoryOptions?, ITokenService?, ILoggerFactory?)
  nameWithType.vb: AvroKafkaTestClientFactory.Create(IConfiguration, ClientFactoryOptions, ITokenService, ILoggerFactory)
- uid: Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.Create*
  name: Create
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.html#Cheetah_SchemaRegistry_Testing_AvroKafkaTestClientFactory_Create_
  commentId: Overload:Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.Create
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Testing.AvroKafkaTestClientFactory.Create
  nameWithType: AvroKafkaTestClientFactory.Create
- uid: Cheetah.SchemaRegistry.Utils
  name: Cheetah.SchemaRegistry.Utils
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Utils.html
  commentId: N:Cheetah.SchemaRegistry.Utils
  fullName: Cheetah.SchemaRegistry.Utils
  nameWithType: Cheetah.SchemaRegistry.Utils
- uid: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider
  name: OAuthHeaderValueProvider
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.html
  commentId: T:Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider
  fullName: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider
  nameWithType: OAuthHeaderValueProvider
- uid: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.#ctor(Cheetah.Auth.Authentication.ITokenService)
  name: OAuthHeaderValueProvider(ITokenService)
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.html#Cheetah_SchemaRegistry_Utils_OAuthHeaderValueProvider__ctor_Cheetah_Auth_Authentication_ITokenService_
  commentId: M:Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.#ctor(Cheetah.Auth.Authentication.ITokenService)
  name.vb: New(ITokenService)
  fullName: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.OAuthHeaderValueProvider(Cheetah.Auth.Authentication.ITokenService)
  fullName.vb: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.New(Cheetah.Auth.Authentication.ITokenService)
  nameWithType: OAuthHeaderValueProvider.OAuthHeaderValueProvider(ITokenService)
  nameWithType.vb: OAuthHeaderValueProvider.New(ITokenService)
- uid: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.#ctor*
  name: OAuthHeaderValueProvider
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.html#Cheetah_SchemaRegistry_Utils_OAuthHeaderValueProvider__ctor_
  commentId: Overload:Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.OAuthHeaderValueProvider
  fullName.vb: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.New
  nameWithType: OAuthHeaderValueProvider.OAuthHeaderValueProvider
  nameWithType.vb: OAuthHeaderValueProvider.New
- uid: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.GetAuthenticationHeader
  name: GetAuthenticationHeader()
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.html#Cheetah_SchemaRegistry_Utils_OAuthHeaderValueProvider_GetAuthenticationHeader
  commentId: M:Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.GetAuthenticationHeader
  fullName: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.GetAuthenticationHeader()
  nameWithType: OAuthHeaderValueProvider.GetAuthenticationHeader()
- uid: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.GetAuthenticationHeader*
  name: GetAuthenticationHeader
  href: api/Cheetah.SchemaRegistry/Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.html#Cheetah_SchemaRegistry_Utils_OAuthHeaderValueProvider_GetAuthenticationHeader_
  commentId: Overload:Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.GetAuthenticationHeader
  isSpec: "True"
  fullName: Cheetah.SchemaRegistry.Utils.OAuthHeaderValueProvider.GetAuthenticationHeader
  nameWithType: OAuthHeaderValueProvider.GetAuthenticationHeader
