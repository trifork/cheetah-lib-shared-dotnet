### YamlMime:ManagedReference
items:
- uid: Cheetah.Kafka.ClientFactoryOptions
  commentId: T:Cheetah.Kafka.ClientFactoryOptions
  id: ClientFactoryOptions
  parent: Cheetah.Kafka
  children:
  - Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient(System.Action{Confluent.Kafka.AdminClientConfig})
  - Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient(System.Action{Confluent.Kafka.ClientConfig})
  - Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer(System.Action{Confluent.Kafka.ConsumerConfig})
  - Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Cheetah.Kafka.Serdes.IDeserializerProvider)
  - Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.IDeserializerProvider})
  - Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer(System.Action{Confluent.Kafka.ProducerConfig})
  - Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(Cheetah.Kafka.Serdes.ISerializerProvider)
  - Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.ISerializerProvider})
  langs:
  - csharp
  - vb
  name: ClientFactoryOptions
  nameWithType: ClientFactoryOptions
  fullName: Cheetah.Kafka.ClientFactoryOptions
  type: Class
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ClientFactoryOptions
    path: ../src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
    startLine: 9
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Options for configuring the <xref href="Cheetah.Kafka.KafkaClientFactory" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public class ClientFactoryOptions
    content.vb: Public Class ClientFactoryOptions
  inheritance:
  - System.Object
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient(System.Action{Confluent.Kafka.ClientConfig})
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient(System.Action{Confluent.Kafka.ClientConfig})
  id: ConfigureDefaultClient(System.Action{Confluent.Kafka.ClientConfig})
  parent: Cheetah.Kafka.ClientFactoryOptions
  langs:
  - csharp
  - vb
  name: ConfigureDefaultClient(Action<ClientConfig>)
  nameWithType: ClientFactoryOptions.ConfigureDefaultClient(Action<ClientConfig>)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient(System.Action<Confluent.Kafka.ClientConfig>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureDefaultClient
    path: ../src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
    startLine: 29
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the default <xref href="Confluent.Kafka.ClientConfig" data-throw-if-not-resolved="false"></xref> that will be used for all clients created by the factory
  example: []
  syntax:
    content: public ClientFactoryOptions ConfigureDefaultClient(Action<ClientConfig> configure)
    parameters:
    - id: configure
      type: System.Action{Confluent.Kafka.ClientConfig}
      description: The configuration to apply
    return:
      type: Cheetah.Kafka.ClientFactoryOptions
      description: This <xref href="Cheetah.Kafka.ClientFactoryOptions" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function ConfigureDefaultClient(configure As Action(Of ClientConfig)) As ClientFactoryOptions
  overload: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient*
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultClient(Action(Of ClientConfig))
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient(System.Action(Of Confluent.Kafka.ClientConfig))
  name.vb: ConfigureDefaultClient(Action(Of ClientConfig))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer(System.Action{Confluent.Kafka.ProducerConfig})
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer(System.Action{Confluent.Kafka.ProducerConfig})
  id: ConfigureDefaultProducer(System.Action{Confluent.Kafka.ProducerConfig})
  parent: Cheetah.Kafka.ClientFactoryOptions
  langs:
  - csharp
  - vb
  name: ConfigureDefaultProducer(Action<ProducerConfig>)
  nameWithType: ClientFactoryOptions.ConfigureDefaultProducer(Action<ProducerConfig>)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer(System.Action<Confluent.Kafka.ProducerConfig>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureDefaultProducer
    path: ../src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
    startLine: 41
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the default <xref href="Confluent.Kafka.ProducerConfig" data-throw-if-not-resolved="false"></xref> that will be used for all producers created by the factory
  remarks: This is applied <b>after</b> the default client configuration
  example: []
  syntax:
    content: public ClientFactoryOptions ConfigureDefaultProducer(Action<ProducerConfig> configure)
    parameters:
    - id: configure
      type: System.Action{Confluent.Kafka.ProducerConfig}
      description: The configuration to apply
    return:
      type: Cheetah.Kafka.ClientFactoryOptions
      description: This <xref href="Cheetah.Kafka.ClientFactoryOptions" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function ConfigureDefaultProducer(configure As Action(Of ProducerConfig)) As ClientFactoryOptions
  overload: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer*
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultProducer(Action(Of ProducerConfig))
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer(System.Action(Of Confluent.Kafka.ProducerConfig))
  name.vb: ConfigureDefaultProducer(Action(Of ProducerConfig))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer(System.Action{Confluent.Kafka.ConsumerConfig})
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer(System.Action{Confluent.Kafka.ConsumerConfig})
  id: ConfigureDefaultConsumer(System.Action{Confluent.Kafka.ConsumerConfig})
  parent: Cheetah.Kafka.ClientFactoryOptions
  langs:
  - csharp
  - vb
  name: ConfigureDefaultConsumer(Action<ConsumerConfig>)
  nameWithType: ClientFactoryOptions.ConfigureDefaultConsumer(Action<ConsumerConfig>)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer(System.Action<Confluent.Kafka.ConsumerConfig>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureDefaultConsumer
    path: ../src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
    startLine: 53
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the default <xref href="Confluent.Kafka.ConsumerConfig" data-throw-if-not-resolved="false"></xref> that will be used for all consumers created by the factory
  remarks: This is applied <b>after</b> the default client configuration
  example: []
  syntax:
    content: public ClientFactoryOptions ConfigureDefaultConsumer(Action<ConsumerConfig> configure)
    parameters:
    - id: configure
      type: System.Action{Confluent.Kafka.ConsumerConfig}
      description: The configuration to apply
    return:
      type: Cheetah.Kafka.ClientFactoryOptions
      description: This <xref href="Cheetah.Kafka.ClientFactoryOptions" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function ConfigureDefaultConsumer(configure As Action(Of ConsumerConfig)) As ClientFactoryOptions
  overload: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer*
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultConsumer(Action(Of ConsumerConfig))
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer(System.Action(Of Confluent.Kafka.ConsumerConfig))
  name.vb: ConfigureDefaultConsumer(Action(Of ConsumerConfig))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient(System.Action{Confluent.Kafka.AdminClientConfig})
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient(System.Action{Confluent.Kafka.AdminClientConfig})
  id: ConfigureDefaultAdminClient(System.Action{Confluent.Kafka.AdminClientConfig})
  parent: Cheetah.Kafka.ClientFactoryOptions
  langs:
  - csharp
  - vb
  name: ConfigureDefaultAdminClient(Action<AdminClientConfig>)
  nameWithType: ClientFactoryOptions.ConfigureDefaultAdminClient(Action<AdminClientConfig>)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient(System.Action<Confluent.Kafka.AdminClientConfig>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureDefaultAdminClient
    path: ../src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
    startLine: 65
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the default <xref href="Confluent.Kafka.AdminClientConfig" data-throw-if-not-resolved="false"></xref> that will be used for all admin clients created by the factory
  remarks: This is applied <b>after</b> the default client configuration
  example: []
  syntax:
    content: public ClientFactoryOptions ConfigureDefaultAdminClient(Action<AdminClientConfig> configure)
    parameters:
    - id: configure
      type: System.Action{Confluent.Kafka.AdminClientConfig}
      description: The configuration to apply
    return:
      type: Cheetah.Kafka.ClientFactoryOptions
      description: This <xref href="Cheetah.Kafka.ClientFactoryOptions" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function ConfigureDefaultAdminClient(configure As Action(Of AdminClientConfig)) As ClientFactoryOptions
  overload: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient*
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultAdminClient(Action(Of AdminClientConfig))
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient(System.Action(Of Confluent.Kafka.AdminClientConfig))
  name.vb: ConfigureDefaultAdminClient(Action(Of AdminClientConfig))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.ISerializerProvider})
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.ISerializerProvider})
  id: ConfigureDefaultSerializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.ISerializerProvider})
  parent: Cheetah.Kafka.ClientFactoryOptions
  langs:
  - csharp
  - vb
  name: ConfigureDefaultSerializerProvider(Func<IServiceProvider, ISerializerProvider>)
  nameWithType: ClientFactoryOptions.ConfigureDefaultSerializerProvider(Func<IServiceProvider, ISerializerProvider>)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(System.Func<System.IServiceProvider, Cheetah.Kafka.Serdes.ISerializerProvider>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureDefaultSerializerProvider
    path: ../src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
    startLine: 76
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the default SerializerProviderFactory that will be used for all clients created by the factory
  example: []
  syntax:
    content: public ClientFactoryOptions ConfigureDefaultSerializerProvider(Func<IServiceProvider, ISerializerProvider> serializerProviderFactory)
    parameters:
    - id: serializerProviderFactory
      type: System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.ISerializerProvider}
      description: The factory method for creating the default serializer provider.
    return:
      type: Cheetah.Kafka.ClientFactoryOptions
      description: This <xref href="Cheetah.Kafka.ClientFactoryOptions" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function ConfigureDefaultSerializerProvider(serializerProviderFactory As Func(Of IServiceProvider, ISerializerProvider)) As ClientFactoryOptions
  overload: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider*
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultSerializerProvider(Func(Of IServiceProvider, ISerializerProvider))
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(System.Func(Of System.IServiceProvider, Cheetah.Kafka.Serdes.ISerializerProvider))
  name.vb: ConfigureDefaultSerializerProvider(Func(Of IServiceProvider, ISerializerProvider))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(Cheetah.Kafka.Serdes.ISerializerProvider)
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(Cheetah.Kafka.Serdes.ISerializerProvider)
  id: ConfigureDefaultSerializerProvider(Cheetah.Kafka.Serdes.ISerializerProvider)
  parent: Cheetah.Kafka.ClientFactoryOptions
  langs:
  - csharp
  - vb
  name: ConfigureDefaultSerializerProvider(ISerializerProvider)
  nameWithType: ClientFactoryOptions.ConfigureDefaultSerializerProvider(ISerializerProvider)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider(Cheetah.Kafka.Serdes.ISerializerProvider)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureDefaultSerializerProvider
    path: ../src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
    startLine: 87
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the default SerializerProvider that will be used for all clients created by the factory
  example: []
  syntax:
    content: public ClientFactoryOptions ConfigureDefaultSerializerProvider(ISerializerProvider serializerProvider)
    parameters:
    - id: serializerProvider
      type: Cheetah.Kafka.Serdes.ISerializerProvider
      description: The serializer provider to be used as default.
    return:
      type: Cheetah.Kafka.ClientFactoryOptions
      description: This <xref href="Cheetah.Kafka.ClientFactoryOptions" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function ConfigureDefaultSerializerProvider(serializerProvider As ISerializerProvider) As ClientFactoryOptions
  overload: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider*
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.IDeserializerProvider})
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.IDeserializerProvider})
  id: ConfigureDefaultDeserializerProvider(System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.IDeserializerProvider})
  parent: Cheetah.Kafka.ClientFactoryOptions
  langs:
  - csharp
  - vb
  name: ConfigureDefaultDeserializerProvider(Func<IServiceProvider, IDeserializerProvider>)
  nameWithType: ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Func<IServiceProvider, IDeserializerProvider>)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(System.Func<System.IServiceProvider, Cheetah.Kafka.Serdes.IDeserializerProvider>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureDefaultDeserializerProvider
    path: ../src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
    startLine: 97
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the default DeserializerProviderFactory that will be used for all clients created by the factory
  example: []
  syntax:
    content: public ClientFactoryOptions ConfigureDefaultDeserializerProvider(Func<IServiceProvider, IDeserializerProvider> deserializerProviderFactory)
    parameters:
    - id: deserializerProviderFactory
      type: System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.IDeserializerProvider}
      description: The factory method for creating the default deserializer provider.
    return:
      type: Cheetah.Kafka.ClientFactoryOptions
      description: This <xref href="Cheetah.Kafka.ClientFactoryOptions" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function ConfigureDefaultDeserializerProvider(deserializerProviderFactory As Func(Of IServiceProvider, IDeserializerProvider)) As ClientFactoryOptions
  overload: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider*
  nameWithType.vb: ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Func(Of IServiceProvider, IDeserializerProvider))
  fullName.vb: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(System.Func(Of System.IServiceProvider, Cheetah.Kafka.Serdes.IDeserializerProvider))
  name.vb: ConfigureDefaultDeserializerProvider(Func(Of IServiceProvider, IDeserializerProvider))
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Cheetah.Kafka.Serdes.IDeserializerProvider)
  commentId: M:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Cheetah.Kafka.Serdes.IDeserializerProvider)
  id: ConfigureDefaultDeserializerProvider(Cheetah.Kafka.Serdes.IDeserializerProvider)
  parent: Cheetah.Kafka.ClientFactoryOptions
  langs:
  - csharp
  - vb
  name: ConfigureDefaultDeserializerProvider(IDeserializerProvider)
  nameWithType: ClientFactoryOptions.ConfigureDefaultDeserializerProvider(IDeserializerProvider)
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider(Cheetah.Kafka.Serdes.IDeserializerProvider)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureDefaultDeserializerProvider
    path: ../src/Cheetah.Kafka/Options/ClientFactoryOptions.cs
    startLine: 108
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the default DeserializerProvider that will be used for all clients created by the factory
  example: []
  syntax:
    content: public ClientFactoryOptions ConfigureDefaultDeserializerProvider(IDeserializerProvider deserializerProvider)
    parameters:
    - id: deserializerProvider
      type: Cheetah.Kafka.Serdes.IDeserializerProvider
      description: The deserializer provider to be used as default.
    return:
      type: Cheetah.Kafka.ClientFactoryOptions
      description: This <xref href="Cheetah.Kafka.ClientFactoryOptions" data-throw-if-not-resolved="false"></xref> instance for method chaining
    content.vb: Public Function ConfigureDefaultDeserializerProvider(deserializerProvider As IDeserializerProvider) As ClientFactoryOptions
  overload: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider*
references:
- uid: Cheetah.Kafka.KafkaClientFactory
  commentId: T:Cheetah.Kafka.KafkaClientFactory
  parent: Cheetah.Kafka
  href: Cheetah.Kafka.KafkaClientFactory.html
  name: KafkaClientFactory
  nameWithType: KafkaClientFactory
  fullName: Cheetah.Kafka.KafkaClientFactory
- uid: Cheetah.Kafka
  commentId: N:Cheetah.Kafka
  href: Cheetah.html
  name: Cheetah.Kafka
  nameWithType: Cheetah.Kafka
  fullName: Cheetah.Kafka
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Confluent.Kafka.ClientConfig
  commentId: T:Confluent.Kafka.ClientConfig
  parent: Confluent.Kafka
  isExternal: true
  name: ClientConfig
  nameWithType: ClientConfig
  fullName: Confluent.Kafka.ClientConfig
- uid: Cheetah.Kafka.ClientFactoryOptions
  commentId: T:Cheetah.Kafka.ClientFactoryOptions
  parent: Cheetah.Kafka
  href: Cheetah.Kafka.ClientFactoryOptions.html
  name: ClientFactoryOptions
  nameWithType: ClientFactoryOptions
  fullName: Cheetah.Kafka.ClientFactoryOptions
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient*
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient
  href: Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultClient_System_Action_Confluent_Kafka_ClientConfig__
  name: ConfigureDefaultClient
  nameWithType: ClientFactoryOptions.ConfigureDefaultClient
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultClient
- uid: System.Action{Confluent.Kafka.ClientConfig}
  commentId: T:System.Action{Confluent.Kafka.ClientConfig}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ClientConfig>
  nameWithType: Action<ClientConfig>
  fullName: System.Action<Confluent.Kafka.ClientConfig>
  nameWithType.vb: Action(Of ClientConfig)
  fullName.vb: System.Action(Of Confluent.Kafka.ClientConfig)
  name.vb: Action(Of ClientConfig)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.ClientConfig
    name: ClientConfig
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ClientConfig
    name: ClientConfig
    isExternal: true
  - name: )
- uid: Confluent.Kafka
  commentId: N:Confluent.Kafka
  isExternal: true
  name: Confluent.Kafka
  nameWithType: Confluent.Kafka
  fullName: Confluent.Kafka
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Confluent.Kafka.ProducerConfig
  commentId: T:Confluent.Kafka.ProducerConfig
  isExternal: true
  name: ProducerConfig
  nameWithType: ProducerConfig
  fullName: Confluent.Kafka.ProducerConfig
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer*
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer
  href: Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultProducer_System_Action_Confluent_Kafka_ProducerConfig__
  name: ConfigureDefaultProducer
  nameWithType: ClientFactoryOptions.ConfigureDefaultProducer
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultProducer
- uid: System.Action{Confluent.Kafka.ProducerConfig}
  commentId: T:System.Action{Confluent.Kafka.ProducerConfig}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ProducerConfig>
  nameWithType: Action<ProducerConfig>
  fullName: System.Action<Confluent.Kafka.ProducerConfig>
  nameWithType.vb: Action(Of ProducerConfig)
  fullName.vb: System.Action(Of Confluent.Kafka.ProducerConfig)
  name.vb: Action(Of ProducerConfig)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.ProducerConfig
    name: ProducerConfig
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ProducerConfig
    name: ProducerConfig
    isExternal: true
  - name: )
- uid: Confluent.Kafka.ConsumerConfig
  commentId: T:Confluent.Kafka.ConsumerConfig
  isExternal: true
  name: ConsumerConfig
  nameWithType: ConsumerConfig
  fullName: Confluent.Kafka.ConsumerConfig
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer*
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer
  href: Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultConsumer_System_Action_Confluent_Kafka_ConsumerConfig__
  name: ConfigureDefaultConsumer
  nameWithType: ClientFactoryOptions.ConfigureDefaultConsumer
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultConsumer
- uid: System.Action{Confluent.Kafka.ConsumerConfig}
  commentId: T:System.Action{Confluent.Kafka.ConsumerConfig}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ConsumerConfig>
  nameWithType: Action<ConsumerConfig>
  fullName: System.Action<Confluent.Kafka.ConsumerConfig>
  nameWithType.vb: Action(Of ConsumerConfig)
  fullName.vb: System.Action(Of Confluent.Kafka.ConsumerConfig)
  name.vb: Action(Of ConsumerConfig)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.ConsumerConfig
    name: ConsumerConfig
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ConsumerConfig
    name: ConsumerConfig
    isExternal: true
  - name: )
- uid: Confluent.Kafka.AdminClientConfig
  commentId: T:Confluent.Kafka.AdminClientConfig
  isExternal: true
  name: AdminClientConfig
  nameWithType: AdminClientConfig
  fullName: Confluent.Kafka.AdminClientConfig
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient*
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient
  href: Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultAdminClient_System_Action_Confluent_Kafka_AdminClientConfig__
  name: ConfigureDefaultAdminClient
  nameWithType: ClientFactoryOptions.ConfigureDefaultAdminClient
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultAdminClient
- uid: System.Action{Confluent.Kafka.AdminClientConfig}
  commentId: T:System.Action{Confluent.Kafka.AdminClientConfig}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<AdminClientConfig>
  nameWithType: Action<AdminClientConfig>
  fullName: System.Action<Confluent.Kafka.AdminClientConfig>
  nameWithType.vb: Action(Of AdminClientConfig)
  fullName.vb: System.Action(Of Confluent.Kafka.AdminClientConfig)
  name.vb: Action(Of AdminClientConfig)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.AdminClientConfig
    name: AdminClientConfig
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.AdminClientConfig
    name: AdminClientConfig
    isExternal: true
  - name: )
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider*
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider
  href: Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultSerializerProvider_System_Func_System_IServiceProvider_Cheetah_Kafka_Serdes_ISerializerProvider__
  name: ConfigureDefaultSerializerProvider
  nameWithType: ClientFactoryOptions.ConfigureDefaultSerializerProvider
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultSerializerProvider
- uid: System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.ISerializerProvider}
  commentId: T:System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.ISerializerProvider}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IServiceProvider, ISerializerProvider>
  nameWithType: Func<IServiceProvider, ISerializerProvider>
  fullName: System.Func<System.IServiceProvider, Cheetah.Kafka.Serdes.ISerializerProvider>
  nameWithType.vb: Func(Of IServiceProvider, ISerializerProvider)
  fullName.vb: System.Func(Of System.IServiceProvider, Cheetah.Kafka.Serdes.ISerializerProvider)
  name.vb: Func(Of IServiceProvider, ISerializerProvider)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Cheetah.Kafka.Serdes.ISerializerProvider
    name: ISerializerProvider
    href: Cheetah.Kafka.Serdes.ISerializerProvider.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Cheetah.Kafka.Serdes.ISerializerProvider
    name: ISerializerProvider
    href: Cheetah.Kafka.Serdes.ISerializerProvider.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Cheetah.Kafka.Serdes.ISerializerProvider
  commentId: T:Cheetah.Kafka.Serdes.ISerializerProvider
  parent: Cheetah.Kafka.Serdes
  href: Cheetah.Kafka.Serdes.ISerializerProvider.html
  name: ISerializerProvider
  nameWithType: ISerializerProvider
  fullName: Cheetah.Kafka.Serdes.ISerializerProvider
- uid: Cheetah.Kafka.Serdes
  commentId: N:Cheetah.Kafka.Serdes
  href: Cheetah.html
  name: Cheetah.Kafka.Serdes
  nameWithType: Cheetah.Kafka.Serdes
  fullName: Cheetah.Kafka.Serdes
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  - name: .
  - uid: Cheetah.Kafka.Serdes
    name: Serdes
    href: Cheetah.Kafka.Serdes.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  - name: .
  - uid: Cheetah.Kafka.Serdes
    name: Serdes
    href: Cheetah.Kafka.Serdes.html
- uid: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider*
  commentId: Overload:Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider
  href: Cheetah.Kafka.ClientFactoryOptions.html#Cheetah_Kafka_ClientFactoryOptions_ConfigureDefaultDeserializerProvider_System_Func_System_IServiceProvider_Cheetah_Kafka_Serdes_IDeserializerProvider__
  name: ConfigureDefaultDeserializerProvider
  nameWithType: ClientFactoryOptions.ConfigureDefaultDeserializerProvider
  fullName: Cheetah.Kafka.ClientFactoryOptions.ConfigureDefaultDeserializerProvider
- uid: System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.IDeserializerProvider}
  commentId: T:System.Func{System.IServiceProvider,Cheetah.Kafka.Serdes.IDeserializerProvider}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IServiceProvider, IDeserializerProvider>
  nameWithType: Func<IServiceProvider, IDeserializerProvider>
  fullName: System.Func<System.IServiceProvider, Cheetah.Kafka.Serdes.IDeserializerProvider>
  nameWithType.vb: Func(Of IServiceProvider, IDeserializerProvider)
  fullName.vb: System.Func(Of System.IServiceProvider, Cheetah.Kafka.Serdes.IDeserializerProvider)
  name.vb: Func(Of IServiceProvider, IDeserializerProvider)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Cheetah.Kafka.Serdes.IDeserializerProvider
    name: IDeserializerProvider
    href: Cheetah.Kafka.Serdes.IDeserializerProvider.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Cheetah.Kafka.Serdes.IDeserializerProvider
    name: IDeserializerProvider
    href: Cheetah.Kafka.Serdes.IDeserializerProvider.html
  - name: )
- uid: Cheetah.Kafka.Serdes.IDeserializerProvider
  commentId: T:Cheetah.Kafka.Serdes.IDeserializerProvider
  parent: Cheetah.Kafka.Serdes
  href: Cheetah.Kafka.Serdes.IDeserializerProvider.html
  name: IDeserializerProvider
  nameWithType: IDeserializerProvider
  fullName: Cheetah.Kafka.Serdes.IDeserializerProvider
