### YamlMime:ManagedReference
items:
- uid: Cheetah.Kafka.ConsumerOptions`2
  commentId: T:Cheetah.Kafka.ConsumerOptions`2
  id: ConsumerOptions`2
  parent: Cheetah.Kafka
  children:
  - Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  - Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  langs:
  - csharp
  - vb
  name: ConsumerOptions<TKey, TValue>
  nameWithType: ConsumerOptions<TKey, TValue>
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConsumerOptions
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 10
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Represents options for configuring a Kafka consumer.
  example: []
  syntax:
    content: 'public class ConsumerOptions<TKey, TValue> : ClientOptions<ConsumerConfig, ConsumerBuilder<TKey, TValue>>'
    typeParameters:
    - id: TKey
      description: The type of the consumer key.
    - id: TValue
      description: The type of the consumer value.
    content.vb: Public Class ConsumerOptions(Of TKey, TValue) Inherits ClientOptions(Of ConsumerConfig, ConsumerBuilder(Of TKey, TValue))
  inheritance:
  - System.Object
  - Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}
  inheritedMembers:
  - Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
  - Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}})
  nameWithType.vb: ConsumerOptions(Of TKey, TValue)
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue)
  name.vb: ConsumerOptions(Of TKey, TValue)
- uid: Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  commentId: M:Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  id: SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  parent: Cheetah.Kafka.ConsumerOptions`2
  langs:
  - csharp
  - vb
  name: SetValueDeserializer(IDeserializer<TValue>)
  nameWithType: ConsumerOptions<TKey, TValue>.SetValueDeserializer(IDeserializer<TValue>)
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>.SetValueDeserializer(Confluent.Kafka.IDeserializer<TValue>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: SetValueDeserializer
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 19
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Sets the value deserializer for the consumer.
  example: []
  syntax:
    content: public void SetValueDeserializer(IDeserializer<TValue> valueDeserializer)
    parameters:
    - id: valueDeserializer
      type: Confluent.Kafka.IDeserializer{{TValue}}
      description: The value deserializer to be used for the consumer.
    content.vb: Public Sub SetValueDeserializer(valueDeserializer As IDeserializer(Of TValue))
  overload: Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer*
  nameWithType.vb: ConsumerOptions(Of TKey, TValue).SetValueDeserializer(IDeserializer(Of TValue))
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue).SetValueDeserializer(Confluent.Kafka.IDeserializer(Of TValue))
  name.vb: SetValueDeserializer(IDeserializer(Of TValue))
- uid: Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  commentId: M:Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  id: SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  parent: Cheetah.Kafka.ConsumerOptions`2
  langs:
  - csharp
  - vb
  name: SetKeyDeserializer(IDeserializer<TKey>)
  nameWithType: ConsumerOptions<TKey, TValue>.SetKeyDeserializer(IDeserializer<TKey>)
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>.SetKeyDeserializer(Confluent.Kafka.IDeserializer<TKey>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: SetKeyDeserializer
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 28
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Sets the key deserializer for the consumer.
  example: []
  syntax:
    content: public void SetKeyDeserializer(IDeserializer<TKey> keyDeserializer)
    parameters:
    - id: keyDeserializer
      type: Confluent.Kafka.IDeserializer{{TKey}}
      description: The key deserializer to be used for the consumer.
    content.vb: Public Sub SetKeyDeserializer(keyDeserializer As IDeserializer(Of TKey))
  overload: Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer*
  nameWithType.vb: ConsumerOptions(Of TKey, TValue).SetKeyDeserializer(IDeserializer(Of TKey))
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue).SetKeyDeserializer(Confluent.Kafka.IDeserializer(Of TKey))
  name.vb: SetKeyDeserializer(IDeserializer(Of TKey))
references:
- uid: Cheetah.Kafka
  commentId: N:Cheetah.Kafka
  href: Cheetah.html
  name: Cheetah.Kafka
  nameWithType: Cheetah.Kafka
  fullName: Cheetah.Kafka
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}
  commentId: T:Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{`0,`1}}
  parent: Cheetah.Kafka
  definition: Cheetah.Kafka.ClientOptions`2
  href: Cheetah.Kafka.ClientOptions-2.html
  name: ClientOptions<ConsumerConfig, ConsumerBuilder<TKey, TValue>>
  nameWithType: ClientOptions<ConsumerConfig, ConsumerBuilder<TKey, TValue>>
  fullName: Cheetah.Kafka.ClientOptions<Confluent.Kafka.ConsumerConfig, Confluent.Kafka.ConsumerBuilder<TKey, TValue>>
  nameWithType.vb: ClientOptions(Of ConsumerConfig, ConsumerBuilder(Of TKey, TValue))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of Confluent.Kafka.ConsumerConfig, Confluent.Kafka.ConsumerBuilder(Of TKey, TValue))
  name.vb: ClientOptions(Of ConsumerConfig, ConsumerBuilder(Of TKey, TValue))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions`2
    name: ClientOptions
    href: Cheetah.Kafka.ClientOptions-2.html
  - name: <
  - uid: Confluent.Kafka.ConsumerConfig
    name: ConsumerConfig
    isExternal: true
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions`2
    name: ClientOptions
    href: Cheetah.Kafka.ClientOptions-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ConsumerConfig
    name: ConsumerConfig
    isExternal: true
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
  commentId: M:Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{`0,`1}}.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
  parent: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}
  definition: Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
  href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  name: ConfigureClient(Action<ConsumerConfig>)
  nameWithType: ClientOptions<ConsumerConfig, ConsumerBuilder<TKey, TValue>>.ConfigureClient(Action<ConsumerConfig>)
  fullName: Cheetah.Kafka.ClientOptions<Confluent.Kafka.ConsumerConfig, Confluent.Kafka.ConsumerBuilder<TKey, TValue>>.ConfigureClient(System.Action<Confluent.Kafka.ConsumerConfig>)
  nameWithType.vb: ClientOptions(Of ConsumerConfig, ConsumerBuilder(Of TKey, TValue)).ConfigureClient(Action(Of ConsumerConfig))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of Confluent.Kafka.ConsumerConfig, Confluent.Kafka.ConsumerBuilder(Of TKey, TValue)).ConfigureClient(System.Action(Of Confluent.Kafka.ConsumerConfig))
  name.vb: ConfigureClient(Action(Of ConsumerConfig))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{`0,`1}}.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
    name: ConfigureClient
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.ConsumerConfig
    name: ConsumerConfig
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{`0,`1}}.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
    name: ConfigureClient
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ConsumerConfig
    name: ConsumerConfig
    isExternal: true
  - name: )
  - name: )
- uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}})
  commentId: M:Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{`0,`1}}.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}})
  parent: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}
  definition: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
  href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  name: ConfigureBuilder(Action<ConsumerBuilder<TKey, TValue>>)
  nameWithType: ClientOptions<ConsumerConfig, ConsumerBuilder<TKey, TValue>>.ConfigureBuilder(Action<ConsumerBuilder<TKey, TValue>>)
  fullName: Cheetah.Kafka.ClientOptions<Confluent.Kafka.ConsumerConfig, Confluent.Kafka.ConsumerBuilder<TKey, TValue>>.ConfigureBuilder(System.Action<Confluent.Kafka.ConsumerBuilder<TKey, TValue>>)
  nameWithType.vb: ClientOptions(Of ConsumerConfig, ConsumerBuilder(Of TKey, TValue)).ConfigureBuilder(Action(Of ConsumerBuilder(Of TKey, TValue)))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of Confluent.Kafka.ConsumerConfig, Confluent.Kafka.ConsumerBuilder(Of TKey, TValue)).ConfigureBuilder(System.Action(Of Confluent.Kafka.ConsumerBuilder(Of TKey, TValue)))
  name.vb: ConfigureBuilder(Action(Of ConsumerBuilder(Of TKey, TValue)))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{`0,`1}}.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}})
    name: ConfigureBuilder
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions{Confluent.Kafka.ConsumerConfig,Confluent.Kafka.ConsumerBuilder{`0,`1}}.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}})
    name: ConfigureBuilder
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Cheetah.Kafka.ClientOptions`2
  commentId: T:Cheetah.Kafka.ClientOptions`2
  href: Cheetah.Kafka.ClientOptions-2.html
  name: ClientOptions<TConfig, TBuilder>
  nameWithType: ClientOptions<TConfig, TBuilder>
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder)
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder)
  name.vb: ClientOptions(Of TConfig, TBuilder)
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions`2
    name: ClientOptions
    href: Cheetah.Kafka.ClientOptions-2.html
  - name: <
  - name: TConfig
  - name: ','
  - name: " "
  - name: TBuilder
  - name: '>'
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions`2
    name: ClientOptions
    href: Cheetah.Kafka.ClientOptions-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TConfig
  - name: ','
  - name: " "
  - name: TBuilder
  - name: )
- uid: Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
  commentId: M:Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
  isExternal: true
  href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  name: ConfigureClient(Action<TConfig>)
  nameWithType: ClientOptions<TConfig, TBuilder>.ConfigureClient(Action<TConfig>)
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>.ConfigureClient(System.Action<TConfig>)
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder).ConfigureClient(Action(Of TConfig))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder).ConfigureClient(System.Action(Of TConfig))
  name.vb: ConfigureClient(Action(Of TConfig))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
    name: ConfigureClient
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TConfig
  - name: '>'
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions`2.ConfigureClient(System.Action{`0})
    name: ConfigureClient
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureClient_System_Action__0__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TConfig
  - name: )
  - name: )
- uid: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
  commentId: M:Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
  isExternal: true
  href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  name: ConfigureBuilder(Action<TBuilder>)
  nameWithType: ClientOptions<TConfig, TBuilder>.ConfigureBuilder(Action<TBuilder>)
  fullName: Cheetah.Kafka.ClientOptions<TConfig, TBuilder>.ConfigureBuilder(System.Action<TBuilder>)
  nameWithType.vb: ClientOptions(Of TConfig, TBuilder).ConfigureBuilder(Action(Of TBuilder))
  fullName.vb: Cheetah.Kafka.ClientOptions(Of TConfig, TBuilder).ConfigureBuilder(System.Action(Of TBuilder))
  name.vb: ConfigureBuilder(Action(Of TBuilder))
  spec.csharp:
  - uid: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
    name: ConfigureBuilder
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TBuilder
  - name: '>'
  - name: )
  spec.vb:
  - uid: Cheetah.Kafka.ClientOptions`2.ConfigureBuilder(System.Action{`1})
    name: ConfigureBuilder
    href: Cheetah.Kafka.ClientOptions-2.html#Cheetah_Kafka_ClientOptions_2_ConfigureBuilder_System_Action__1__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TBuilder
  - name: )
  - name: )
- uid: Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer*
  commentId: Overload:Cheetah.Kafka.ConsumerOptions`2.SetValueDeserializer
  href: Cheetah.Kafka.ConsumerOptions-2.html#Cheetah_Kafka_ConsumerOptions_2_SetValueDeserializer_Confluent_Kafka_IDeserializer__1__
  name: SetValueDeserializer
  nameWithType: ConsumerOptions<TKey, TValue>.SetValueDeserializer
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>.SetValueDeserializer
  nameWithType.vb: ConsumerOptions(Of TKey, TValue).SetValueDeserializer
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue).SetValueDeserializer
- uid: Confluent.Kafka.IDeserializer{{TValue}}
  commentId: T:Confluent.Kafka.IDeserializer{`1}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.IDeserializer`1
  name: IDeserializer<TValue>
  nameWithType: IDeserializer<TValue>
  fullName: Confluent.Kafka.IDeserializer<TValue>
  nameWithType.vb: IDeserializer(Of TValue)
  fullName.vb: Confluent.Kafka.IDeserializer(Of TValue)
  name.vb: IDeserializer(Of TValue)
  spec.csharp:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Confluent.Kafka.IDeserializer`1
  commentId: T:Confluent.Kafka.IDeserializer`1
  isExternal: true
  name: IDeserializer<T>
  nameWithType: IDeserializer<T>
  fullName: Confluent.Kafka.IDeserializer<T>
  nameWithType.vb: IDeserializer(Of T)
  fullName.vb: Confluent.Kafka.IDeserializer(Of T)
  name.vb: IDeserializer(Of T)
  spec.csharp:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Confluent.Kafka
  commentId: N:Confluent.Kafka
  isExternal: true
  name: Confluent.Kafka
  nameWithType: Confluent.Kafka
  fullName: Confluent.Kafka
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
- uid: Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer*
  commentId: Overload:Cheetah.Kafka.ConsumerOptions`2.SetKeyDeserializer
  href: Cheetah.Kafka.ConsumerOptions-2.html#Cheetah_Kafka_ConsumerOptions_2_SetKeyDeserializer_Confluent_Kafka_IDeserializer__0__
  name: SetKeyDeserializer
  nameWithType: ConsumerOptions<TKey, TValue>.SetKeyDeserializer
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>.SetKeyDeserializer
  nameWithType.vb: ConsumerOptions(Of TKey, TValue).SetKeyDeserializer
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue).SetKeyDeserializer
- uid: Confluent.Kafka.IDeserializer{{TKey}}
  commentId: T:Confluent.Kafka.IDeserializer{`0}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.IDeserializer`1
  name: IDeserializer<TKey>
  nameWithType: IDeserializer<TKey>
  fullName: Confluent.Kafka.IDeserializer<TKey>
  nameWithType.vb: IDeserializer(Of TKey)
  fullName.vb: Confluent.Kafka.IDeserializer(Of TKey)
  name.vb: IDeserializer(Of TKey)
  spec.csharp:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
