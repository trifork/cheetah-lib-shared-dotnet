### YamlMime:ManagedReference
items:
- uid: Cheetah.Kafka.Util.Utf8JsonSerializer`1
  commentId: T:Cheetah.Kafka.Util.Utf8JsonSerializer`1
  id: Utf8JsonSerializer`1
  parent: Cheetah.Kafka.Util
  children:
  - Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
  langs:
  - csharp
  - vb
  name: Utf8JsonSerializer<T>
  nameWithType: Utf8JsonSerializer<T>
  fullName: Cheetah.Kafka.Util.Utf8JsonSerializer<T>
  type: Class
  source:
    remote:
      path: src/Cheetah.Kafka/Util/Utf8JsonSerializer.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: Utf8JsonSerializer
    path: ../src/Cheetah.Kafka/Util/Utf8JsonSerializer.cs
    startLine: 10
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Util
  summary: Serializer which serializes data with UTF8-encoding
  example: []
  syntax:
    content: 'public class Utf8JsonSerializer<T> : ISerializer<T>'
    typeParameters:
    - id: T
      description: The type to serialize
    content.vb: Public Class Utf8JsonSerializer(Of T) Implements ISerializer(Of T)
  inheritance:
  - System.Object
  implements:
  - Confluent.Kafka.ISerializer{{T}}
  nameWithType.vb: Utf8JsonSerializer(Of T)
  fullName.vb: Cheetah.Kafka.Util.Utf8JsonSerializer(Of T)
  name.vb: Utf8JsonSerializer(Of T)
- uid: Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
  commentId: M:Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
  id: Serialize(`0,Confluent.Kafka.SerializationContext)
  parent: Cheetah.Kafka.Util.Utf8JsonSerializer`1
  langs:
  - csharp
  - vb
  name: Serialize(T, SerializationContext)
  nameWithType: Utf8JsonSerializer<T>.Serialize(T, SerializationContext)
  fullName: Cheetah.Kafka.Util.Utf8JsonSerializer<T>.Serialize(T, Confluent.Kafka.SerializationContext)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Util/Utf8JsonSerializer.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: Serialize
    path: ../src/Cheetah.Kafka/Util/Utf8JsonSerializer.cs
    startLine: 18
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka.Util
  summary: Serializes the input data using System.Text.Json and UTF8-encoding
  example: []
  syntax:
    content: public byte[] Serialize(T data, SerializationContext context)
    parameters:
    - id: data
      type: '{T}'
      description: The data to serialize
    - id: context
      type: Confluent.Kafka.SerializationContext
      description: The current serialization context
    return:
      type: System.Byte[]
      description: The serialized data as a byte-array
    content.vb: Public Function Serialize(data As T, context As SerializationContext) As Byte()
  overload: Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize*
  implements:
  - Confluent.Kafka.ISerializer{{T}}.Serialize({T},Confluent.Kafka.SerializationContext)
  nameWithType.vb: Utf8JsonSerializer(Of T).Serialize(T, SerializationContext)
  fullName.vb: Cheetah.Kafka.Util.Utf8JsonSerializer(Of T).Serialize(T, Confluent.Kafka.SerializationContext)
references:
- uid: Cheetah.Kafka.Util
  commentId: N:Cheetah.Kafka.Util
  href: Cheetah.html
  name: Cheetah.Kafka.Util
  nameWithType: Cheetah.Kafka.Util
  fullName: Cheetah.Kafka.Util
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  - name: .
  - uid: Cheetah.Kafka.Util
    name: Util
    href: Cheetah.Kafka.Util.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  - name: .
  - uid: Cheetah.Kafka.Util
    name: Util
    href: Cheetah.Kafka.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Confluent.Kafka.ISerializer{{T}}
  commentId: T:Confluent.Kafka.ISerializer{``0}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.ISerializer`1
  name: ISerializer<T>
  nameWithType: ISerializer<T>
  fullName: Confluent.Kafka.ISerializer<T>
  nameWithType.vb: ISerializer(Of T)
  fullName.vb: Confluent.Kafka.ISerializer(Of T)
  name.vb: ISerializer(Of T)
  spec.csharp:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Confluent.Kafka.ISerializer`1
  commentId: T:Confluent.Kafka.ISerializer`1
  isExternal: true
  name: ISerializer<T>
  nameWithType: ISerializer<T>
  fullName: Confluent.Kafka.ISerializer<T>
  nameWithType.vb: ISerializer(Of T)
  fullName.vb: Confluent.Kafka.ISerializer(Of T)
  name.vb: ISerializer(Of T)
  spec.csharp:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.ISerializer`1
    name: ISerializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Confluent.Kafka
  commentId: N:Confluent.Kafka
  isExternal: true
  name: Confluent.Kafka
  nameWithType: Confluent.Kafka
  fullName: Confluent.Kafka
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
- uid: Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize*
  commentId: Overload:Cheetah.Kafka.Util.Utf8JsonSerializer`1.Serialize
  href: Cheetah.Kafka.Util.Utf8JsonSerializer-1.html#Cheetah_Kafka_Util_Utf8JsonSerializer_1_Serialize__0_Confluent_Kafka_SerializationContext_
  name: Serialize
  nameWithType: Utf8JsonSerializer<T>.Serialize
  fullName: Cheetah.Kafka.Util.Utf8JsonSerializer<T>.Serialize
  nameWithType.vb: Utf8JsonSerializer(Of T).Serialize
  fullName.vb: Cheetah.Kafka.Util.Utf8JsonSerializer(Of T).Serialize
- uid: Confluent.Kafka.ISerializer{{T}}.Serialize({T},Confluent.Kafka.SerializationContext)
  commentId: M:Confluent.Kafka.ISerializer{`0}.Serialize(`0,Confluent.Kafka.SerializationContext)
  parent: Confluent.Kafka.ISerializer{{T}}
  definition: Confluent.Kafka.ISerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
  name: Serialize(T, SerializationContext)
  nameWithType: ISerializer<T>.Serialize(T, SerializationContext)
  fullName: Confluent.Kafka.ISerializer<T>.Serialize(T, Confluent.Kafka.SerializationContext)
  nameWithType.vb: ISerializer(Of T).Serialize(T, SerializationContext)
  fullName.vb: Confluent.Kafka.ISerializer(Of T).Serialize(T, Confluent.Kafka.SerializationContext)
  spec.csharp:
  - uid: Confluent.Kafka.ISerializer{`0}.Serialize(`0,Confluent.Kafka.SerializationContext)
    name: Serialize
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.SerializationContext
    name: SerializationContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: Confluent.Kafka.ISerializer{`0}.Serialize(`0,Confluent.Kafka.SerializationContext)
    name: Serialize
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.SerializationContext
    name: SerializationContext
    isExternal: true
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Confluent.Kafka.SerializationContext
  commentId: T:Confluent.Kafka.SerializationContext
  parent: Confluent.Kafka
  isExternal: true
  name: SerializationContext
  nameWithType: SerializationContext
  fullName: Confluent.Kafka.SerializationContext
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Confluent.Kafka.ISerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
  commentId: M:Confluent.Kafka.ISerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
  isExternal: true
  name: Serialize(T, SerializationContext)
  nameWithType: ISerializer<T>.Serialize(T, SerializationContext)
  fullName: Confluent.Kafka.ISerializer<T>.Serialize(T, Confluent.Kafka.SerializationContext)
  nameWithType.vb: ISerializer(Of T).Serialize(T, SerializationContext)
  fullName.vb: Confluent.Kafka.ISerializer(Of T).Serialize(T, Confluent.Kafka.SerializationContext)
  spec.csharp:
  - uid: Confluent.Kafka.ISerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
    name: Serialize
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.SerializationContext
    name: SerializationContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: Confluent.Kafka.ISerializer`1.Serialize(`0,Confluent.Kafka.SerializationContext)
    name: Serialize
    isExternal: true
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.SerializationContext
    name: SerializationContext
    isExternal: true
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
