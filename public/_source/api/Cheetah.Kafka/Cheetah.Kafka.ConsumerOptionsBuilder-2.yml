### YamlMime:ManagedReference
items:
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2
  commentId: T:Cheetah.Kafka.ConsumerOptionsBuilder`2
  id: ConsumerOptionsBuilder`2
  parent: Cheetah.Kafka
  children:
  - Cheetah.Kafka.ConsumerOptionsBuilder`2.Build
  - Cheetah.Kafka.ConsumerOptionsBuilder`2.Build(System.IServiceProvider)
  - Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}})
  - Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
  - Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  - Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`0}})
  - Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  - Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`1}})
  langs:
  - csharp
  - vb
  name: ConsumerOptionsBuilder<TKey, TValue>
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConsumerOptionsBuilder
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 40
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Builder for configuring <xref href="Cheetah.Kafka.ConsumerOptions%602" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class ConsumerOptionsBuilder<TKey, TValue>
    typeParameters:
    - id: TKey
      description: The type of the consumer key.
    - id: TValue
      description: The type of the consumer value.
    content.vb: Public Class ConsumerOptionsBuilder(Of TKey, TValue)
  inheritance:
  - System.Object
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue)
  name.vb: ConsumerOptionsBuilder(Of TKey, TValue)
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`1}})
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`1}})
  id: SetValueDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`1}})
  parent: Cheetah.Kafka.ConsumerOptionsBuilder`2
  langs:
  - csharp
  - vb
  name: SetValueDeserializer(Func<IServiceProvider, IDeserializer<TValue>>)
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer(Func<IServiceProvider, IDeserializer<TValue>>)
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer(System.Func<System.IServiceProvider, Confluent.Kafka.IDeserializer<TValue>>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: SetValueDeserializer
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 51
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Sets the value deserializer factory method.
  example: []
  syntax:
    content: public ConsumerOptionsBuilder<TKey, TValue> SetValueDeserializer(Func<IServiceProvider, IDeserializer<TValue>> valueDeserializerFactory)
    parameters:
    - id: valueDeserializerFactory
      type: System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{{TValue}}}
      description: The factory method for creating the value deserializer.
    return:
      type: Cheetah.Kafka.ConsumerOptionsBuilder`2
      description: The builder instance.
    content.vb: Public Function SetValueDeserializer(valueDeserializerFactory As Func(Of IServiceProvider, IDeserializer(Of TValue))) As ConsumerOptionsBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer*
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer(Func(Of IServiceProvider, IDeserializer(Of TValue)))
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer(System.Func(Of System.IServiceProvider, Confluent.Kafka.IDeserializer(Of TValue)))
  name.vb: SetValueDeserializer(Func(Of IServiceProvider, IDeserializer(Of TValue)))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  id: SetValueDeserializer(Confluent.Kafka.IDeserializer{`1})
  parent: Cheetah.Kafka.ConsumerOptionsBuilder`2
  langs:
  - csharp
  - vb
  name: SetValueDeserializer(IDeserializer<TValue>)
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer(IDeserializer<TValue>)
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer(Confluent.Kafka.IDeserializer<TValue>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: SetValueDeserializer
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 62
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Sets the value deserializer.
  example: []
  syntax:
    content: public ConsumerOptionsBuilder<TKey, TValue> SetValueDeserializer(IDeserializer<TValue> valueDeserializer)
    parameters:
    - id: valueDeserializer
      type: Confluent.Kafka.IDeserializer{{TValue}}
      description: The value deserializer.
    return:
      type: Cheetah.Kafka.ConsumerOptionsBuilder`2
      description: The builder instance.
    content.vb: Public Function SetValueDeserializer(valueDeserializer As IDeserializer(Of TValue)) As ConsumerOptionsBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer*
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer(IDeserializer(Of TValue))
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer(Confluent.Kafka.IDeserializer(Of TValue))
  name.vb: SetValueDeserializer(IDeserializer(Of TValue))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`0}})
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`0}})
  id: SetKeyDeserializer(System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`0}})
  parent: Cheetah.Kafka.ConsumerOptionsBuilder`2
  langs:
  - csharp
  - vb
  name: SetKeyDeserializer(Func<IServiceProvider, IDeserializer<TKey>>)
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer(Func<IServiceProvider, IDeserializer<TKey>>)
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer(System.Func<System.IServiceProvider, Confluent.Kafka.IDeserializer<TKey>>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: SetKeyDeserializer
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 73
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Sets the key deserializer factory method.
  example: []
  syntax:
    content: public ConsumerOptionsBuilder<TKey, TValue> SetKeyDeserializer(Func<IServiceProvider, IDeserializer<TKey>> keyDeserializerFactory)
    parameters:
    - id: keyDeserializerFactory
      type: System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{{TKey}}}
      description: The factory method for creating the key deserializer.
    return:
      type: Cheetah.Kafka.ConsumerOptionsBuilder`2
      description: The builder instance.
    content.vb: Public Function SetKeyDeserializer(keyDeserializerFactory As Func(Of IServiceProvider, IDeserializer(Of TKey))) As ConsumerOptionsBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer*
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer(Func(Of IServiceProvider, IDeserializer(Of TKey)))
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer(System.Func(Of System.IServiceProvider, Confluent.Kafka.IDeserializer(Of TKey)))
  name.vb: SetKeyDeserializer(Func(Of IServiceProvider, IDeserializer(Of TKey)))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  id: SetKeyDeserializer(Confluent.Kafka.IDeserializer{`0})
  parent: Cheetah.Kafka.ConsumerOptionsBuilder`2
  langs:
  - csharp
  - vb
  name: SetKeyDeserializer(IDeserializer<TKey>)
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer(IDeserializer<TKey>)
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer(Confluent.Kafka.IDeserializer<TKey>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: SetKeyDeserializer
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 84
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Sets the key deserializer.
  example: []
  syntax:
    content: public ConsumerOptionsBuilder<TKey, TValue> SetKeyDeserializer(IDeserializer<TKey> keyDeserializer)
    parameters:
    - id: keyDeserializer
      type: Confluent.Kafka.IDeserializer{{TKey}}
      description: The key deserializer.
    return:
      type: Cheetah.Kafka.ConsumerOptionsBuilder`2
      description: The builder instance.
    content.vb: Public Function SetKeyDeserializer(keyDeserializer As IDeserializer(Of TKey)) As ConsumerOptionsBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer*
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer(IDeserializer(Of TKey))
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer(Confluent.Kafka.IDeserializer(Of TKey))
  name.vb: SetKeyDeserializer(IDeserializer(Of TKey))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
  id: ConfigureClient(System.Action{Confluent.Kafka.ConsumerConfig})
  parent: Cheetah.Kafka.ConsumerOptionsBuilder`2
  langs:
  - csharp
  - vb
  name: ConfigureClient(Action<ConsumerConfig>)
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.ConfigureClient(Action<ConsumerConfig>)
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.ConfigureClient(System.Action<Confluent.Kafka.ConsumerConfig>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureClient
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 95
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the consumer with the provided action.
  example: []
  syntax:
    content: public ConsumerOptionsBuilder<TKey, TValue> ConfigureClient(Action<ConsumerConfig> configureAction)
    parameters:
    - id: configureAction
      type: System.Action{Confluent.Kafka.ConsumerConfig}
      description: The action to configure the consumer.
    return:
      type: Cheetah.Kafka.ConsumerOptionsBuilder`2
      description: The builder instance.
    content.vb: Public Function ConfigureClient(configureAction As Action(Of ConsumerConfig)) As ConsumerOptionsBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient*
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).ConfigureClient(Action(Of ConsumerConfig))
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).ConfigureClient(System.Action(Of Confluent.Kafka.ConsumerConfig))
  name.vb: ConfigureClient(Action(Of ConsumerConfig))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}})
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}})
  id: ConfigureBuilder(System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}})
  parent: Cheetah.Kafka.ConsumerOptionsBuilder`2
  langs:
  - csharp
  - vb
  name: ConfigureBuilder(Action<ConsumerBuilder<TKey, TValue>>)
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.ConfigureBuilder(Action<ConsumerBuilder<TKey, TValue>>)
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.ConfigureBuilder(System.Action<Confluent.Kafka.ConsumerBuilder<TKey, TValue>>)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: ConfigureBuilder
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 106
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Configures the consumer builder with the provided action.
  example: []
  syntax:
    content: public ConsumerOptionsBuilder<TKey, TValue> ConfigureBuilder(Action<ConsumerBuilder<TKey, TValue>> builderAction)
    parameters:
    - id: builderAction
      type: System.Action{Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}
      description: The action to configure the consumer builder.
    return:
      type: Cheetah.Kafka.ConsumerOptionsBuilder`2
      description: The builder instance.
    content.vb: Public Function ConfigureBuilder(builderAction As Action(Of ConsumerBuilder(Of TKey, TValue))) As ConsumerOptionsBuilder(Of TKey, TValue)
  overload: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder*
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).ConfigureBuilder(Action(Of ConsumerBuilder(Of TKey, TValue)))
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).ConfigureBuilder(System.Action(Of Confluent.Kafka.ConsumerBuilder(Of TKey, TValue)))
  name.vb: ConfigureBuilder(Action(Of ConsumerBuilder(Of TKey, TValue)))
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.Build(System.IServiceProvider)
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.Build(System.IServiceProvider)
  id: Build(System.IServiceProvider)
  parent: Cheetah.Kafka.ConsumerOptionsBuilder`2
  langs:
  - csharp
  - vb
  name: Build(IServiceProvider)
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.Build(IServiceProvider)
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.Build(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: Build
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 117
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Builds the consumer options.
  example: []
  syntax:
    content: public ConsumerOptions<TKey, TValue> Build(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: The service provider.
    return:
      type: Cheetah.Kafka.ConsumerOptions{{TKey},{TValue}}
      description: The configured consumer options.
    content.vb: Public Function Build(serviceProvider As IServiceProvider) As ConsumerOptions(Of TKey, TValue)
  overload: Cheetah.Kafka.ConsumerOptionsBuilder`2.Build*
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).Build(IServiceProvider)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).Build(System.IServiceProvider)
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.Build
  commentId: M:Cheetah.Kafka.ConsumerOptionsBuilder`2.Build
  id: Build
  parent: Cheetah.Kafka.ConsumerOptionsBuilder`2
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.Build()
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.Build()
  type: Method
  source:
    remote:
      path: src/Cheetah.Kafka/Options/ConsumerOptions.cs
      branch: main
      repo: https://github.com/KastTrifork/cheetah-lib-shared-dotnet
    id: Build
    path: ../src/Cheetah.Kafka/Options/ConsumerOptions.cs
    startLine: 135
  assemblies:
  - Cheetah.Kafka
  namespace: Cheetah.Kafka
  summary: Builds the consumer options.
  example: []
  syntax:
    content: public ConsumerOptions<TKey, TValue> Build()
    return:
      type: Cheetah.Kafka.ConsumerOptions{{TKey},{TValue}}
      description: The configured consumer options.
    content.vb: Public Function Build() As ConsumerOptions(Of TKey, TValue)
  overload: Cheetah.Kafka.ConsumerOptionsBuilder`2.Build*
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).Build()
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).Build()
references:
- uid: Cheetah.Kafka.ConsumerOptions`2
  commentId: T:Cheetah.Kafka.ConsumerOptions`2
  href: Cheetah.Kafka.ConsumerOptions-2.html
  name: ConsumerOptions<TKey, TValue>
  nameWithType: ConsumerOptions<TKey, TValue>
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>
  nameWithType.vb: ConsumerOptions(Of TKey, TValue)
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue)
  name.vb: ConsumerOptions(Of TKey, TValue)
  spec.csharp:
  - uid: Cheetah.Kafka.ConsumerOptions`2
    name: ConsumerOptions
    href: Cheetah.Kafka.ConsumerOptions-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Cheetah.Kafka.ConsumerOptions`2
    name: ConsumerOptions
    href: Cheetah.Kafka.ConsumerOptions-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Cheetah.Kafka
  commentId: N:Cheetah.Kafka
  href: Cheetah.html
  name: Cheetah.Kafka
  nameWithType: Cheetah.Kafka
  fullName: Cheetah.Kafka
  spec.csharp:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
  spec.vb:
  - uid: Cheetah
    name: Cheetah
    href: Cheetah.html
  - name: .
  - uid: Cheetah.Kafka
    name: Kafka
    href: Cheetah.Kafka.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer*
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetValueDeserializer
  href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_SetValueDeserializer_System_Func_System_IServiceProvider_Confluent_Kafka_IDeserializer__1___
  name: SetValueDeserializer
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetValueDeserializer
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetValueDeserializer
- uid: System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{{TValue}}}
  commentId: T:System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`1}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IServiceProvider, IDeserializer<TValue>>
  nameWithType: Func<IServiceProvider, IDeserializer<TValue>>
  fullName: System.Func<System.IServiceProvider, Confluent.Kafka.IDeserializer<TValue>>
  nameWithType.vb: Func(Of IServiceProvider, IDeserializer(Of TValue))
  fullName.vb: System.Func(Of System.IServiceProvider, Confluent.Kafka.IDeserializer(Of TValue))
  name.vb: Func(Of IServiceProvider, IDeserializer(Of TValue))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2
  commentId: T:Cheetah.Kafka.ConsumerOptionsBuilder`2
  parent: Cheetah.Kafka
  href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html
  name: ConsumerOptionsBuilder<TKey, TValue>
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue)
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue)
  name.vb: ConsumerOptionsBuilder(Of TKey, TValue)
  spec.csharp:
  - uid: Cheetah.Kafka.ConsumerOptionsBuilder`2
    name: ConsumerOptionsBuilder
    href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Cheetah.Kafka.ConsumerOptionsBuilder`2
    name: ConsumerOptionsBuilder
    href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Confluent.Kafka.IDeserializer{{TValue}}
  commentId: T:Confluent.Kafka.IDeserializer{`1}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.IDeserializer`1
  name: IDeserializer<TValue>
  nameWithType: IDeserializer<TValue>
  fullName: Confluent.Kafka.IDeserializer<TValue>
  nameWithType.vb: IDeserializer(Of TValue)
  fullName.vb: Confluent.Kafka.IDeserializer(Of TValue)
  name.vb: IDeserializer(Of TValue)
  spec.csharp:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Confluent.Kafka.IDeserializer`1
  commentId: T:Confluent.Kafka.IDeserializer`1
  isExternal: true
  name: IDeserializer<T>
  nameWithType: IDeserializer<T>
  fullName: Confluent.Kafka.IDeserializer<T>
  nameWithType.vb: IDeserializer(Of T)
  fullName.vb: Confluent.Kafka.IDeserializer(Of T)
  name.vb: IDeserializer(Of T)
  spec.csharp:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Confluent.Kafka
  commentId: N:Confluent.Kafka
  isExternal: true
  name: Confluent.Kafka
  nameWithType: Confluent.Kafka
  fullName: Confluent.Kafka
  spec.csharp:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
  spec.vb:
  - uid: Confluent
    name: Confluent
    isExternal: true
  - name: .
  - uid: Confluent.Kafka
    name: Kafka
    isExternal: true
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer*
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.SetKeyDeserializer
  href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_SetKeyDeserializer_System_Func_System_IServiceProvider_Confluent_Kafka_IDeserializer__0___
  name: SetKeyDeserializer
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.SetKeyDeserializer
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).SetKeyDeserializer
- uid: System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{{TKey}}}
  commentId: T:System.Func{System.IServiceProvider,Confluent.Kafka.IDeserializer{`0}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IServiceProvider, IDeserializer<TKey>>
  nameWithType: Func<IServiceProvider, IDeserializer<TKey>>
  fullName: System.Func<System.IServiceProvider, Confluent.Kafka.IDeserializer<TKey>>
  nameWithType.vb: Func(Of IServiceProvider, IDeserializer(Of TKey))
  fullName.vb: System.Func(Of System.IServiceProvider, Confluent.Kafka.IDeserializer(Of TKey))
  name.vb: Func(Of IServiceProvider, IDeserializer(Of TKey))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: TKey
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: ','
  - name: " "
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
  - name: )
- uid: Confluent.Kafka.IDeserializer{{TKey}}
  commentId: T:Confluent.Kafka.IDeserializer{`0}
  parent: Confluent.Kafka
  definition: Confluent.Kafka.IDeserializer`1
  name: IDeserializer<TKey>
  nameWithType: IDeserializer<TKey>
  fullName: Confluent.Kafka.IDeserializer<TKey>
  nameWithType.vb: IDeserializer(Of TKey)
  fullName.vb: Confluent.Kafka.IDeserializer(Of TKey)
  name.vb: IDeserializer(Of TKey)
  spec.csharp:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: Confluent.Kafka.IDeserializer`1
    name: IDeserializer
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient*
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureClient
  href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_ConfigureClient_System_Action_Confluent_Kafka_ConsumerConfig__
  name: ConfigureClient
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.ConfigureClient
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.ConfigureClient
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).ConfigureClient
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).ConfigureClient
- uid: System.Action{Confluent.Kafka.ConsumerConfig}
  commentId: T:System.Action{Confluent.Kafka.ConsumerConfig}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ConsumerConfig>
  nameWithType: Action<ConsumerConfig>
  fullName: System.Action<Confluent.Kafka.ConsumerConfig>
  nameWithType.vb: Action(Of ConsumerConfig)
  fullName.vb: System.Action(Of Confluent.Kafka.ConsumerConfig)
  name.vb: Action(Of ConsumerConfig)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.ConsumerConfig
    name: ConsumerConfig
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ConsumerConfig
    name: ConsumerConfig
    isExternal: true
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder*
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.ConfigureBuilder
  href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_ConfigureBuilder_System_Action_Confluent_Kafka_ConsumerBuilder__0__1___
  name: ConfigureBuilder
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.ConfigureBuilder
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.ConfigureBuilder
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).ConfigureBuilder
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).ConfigureBuilder
- uid: System.Action{Confluent.Kafka.ConsumerBuilder{{TKey},{TValue}}}
  commentId: T:System.Action{Confluent.Kafka.ConsumerBuilder{`0,`1}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ConsumerBuilder<TKey, TValue>>
  nameWithType: Action<ConsumerBuilder<TKey, TValue>>
  fullName: System.Action<Confluent.Kafka.ConsumerBuilder<TKey, TValue>>
  nameWithType.vb: Action(Of ConsumerBuilder(Of TKey, TValue))
  fullName.vb: System.Action(Of Confluent.Kafka.ConsumerBuilder(Of TKey, TValue))
  name.vb: Action(Of ConsumerBuilder(Of TKey, TValue))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Confluent.Kafka.ConsumerBuilder`2
    name: ConsumerBuilder
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Cheetah.Kafka.ConsumerOptionsBuilder`2.Build*
  commentId: Overload:Cheetah.Kafka.ConsumerOptionsBuilder`2.Build
  href: Cheetah.Kafka.ConsumerOptionsBuilder-2.html#Cheetah_Kafka_ConsumerOptionsBuilder_2_Build_System_IServiceProvider_
  name: Build
  nameWithType: ConsumerOptionsBuilder<TKey, TValue>.Build
  fullName: Cheetah.Kafka.ConsumerOptionsBuilder<TKey, TValue>.Build
  nameWithType.vb: ConsumerOptionsBuilder(Of TKey, TValue).Build
  fullName.vb: Cheetah.Kafka.ConsumerOptionsBuilder(Of TKey, TValue).Build
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Cheetah.Kafka.ConsumerOptions{{TKey},{TValue}}
  commentId: T:Cheetah.Kafka.ConsumerOptions{``0,``1}
  parent: Cheetah.Kafka
  definition: Cheetah.Kafka.ConsumerOptions`2
  href: Cheetah.Kafka.ConsumerOptions-2.html
  name: ConsumerOptions<TKey, TValue>
  nameWithType: ConsumerOptions<TKey, TValue>
  fullName: Cheetah.Kafka.ConsumerOptions<TKey, TValue>
  nameWithType.vb: ConsumerOptions(Of TKey, TValue)
  fullName.vb: Cheetah.Kafka.ConsumerOptions(Of TKey, TValue)
  name.vb: ConsumerOptions(Of TKey, TValue)
  spec.csharp:
  - uid: Cheetah.Kafka.ConsumerOptions`2
    name: ConsumerOptions
    href: Cheetah.Kafka.ConsumerOptions-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Cheetah.Kafka.ConsumerOptions`2
    name: ConsumerOptions
    href: Cheetah.Kafka.ConsumerOptions-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
