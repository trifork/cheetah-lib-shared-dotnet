name: Publish docfx

on:
  workflow_dispatch:
    inputs:
      project:
        description: Which project to create a release branch for
        required: true
        type: choice
        options:
          - Cheetah.Kafka
          - Cheetah.OpenSearch
          - Cheetah.SchemaRegistry
  workflow_run:
    workflows:
      - .NET Create Release
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      #- name: "dotnet build"
      #  uses: trifork/cheetah-infrastructure-utils/.github/actions/dotnet/dotnet-build@main
        # dotnet-build
      - name: "Setup .Net Core SDK"
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4
        with:
          dotnet-version: 7

        # dotnet-build
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
            ${{ runner.os }}-nuget-

        # dotnet-build
      - name: "dotnet build"
        shell: bash
        run: |
          dotnet build --verbosity minimal --configuration Release /nowarn:cs1591


      #- name: Build docfx
      #  uses: trifork/cheetah-infrastructure-utils/.github/actions/docfx/docfx-build@main
      - name: Build docfx
        shell: bash
        run: |
          dotnet tool update -g docfx 
          docfx --warningsAsErrors docs/docfx.json

     # - name: Get csproj filepath
     #   id: get-csproj-filepath
     #   uses: trifork/cheetah-infrastructure-utils/.github/actions/get-from-map@main
     #   with:
     #     file-path: ./.github/csproj-filepaths.yaml
     #     key: ${{github.repository}}
      - name: Get value
        id: get-value
        shell: bash
        run: echo "value=$(grep -Po '(?<=${{github.repository}}:).*' ./.github/csproj-filepaths.yaml | awk '{$1=$1};1')" >> $GITHUB_OUTPUT


      - name: Get project version
        id: get-version
        uses: trifork/cheetah-infrastructure-utils-workflows/.github/actions/versioning/get-version@main
        with:
          # Change file path to steps.get-csproj-filepath.outputs.value 
          file-path: ${{ steps.get-value.outputs }}
          prefix: "<VersionPrefix>"
          suffix: "</VersionPrefix>"
      
      - name: echo tree path docs
        run: |
          tree docs/

      - name: create public/
        run: |
          mkdir -p public/
          mv docs/ public/_source
          mv src/ public/src
          mv .gitignore public/.gitignore
          rm public/_source/api/.gitignore
          mv _site/ public/docs

      - name: echo variables for gh pages
        run: |
          echo "version: ${{ steps.get-version.outputs.version }}"
          echo "repo: ${{ github.repository }}"
          echo "destination: v${{ steps.get-version.outputs.version }}"

      - name: Deploy to GitHub Pages for project ${{ inputs.project }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/_source/articles/${{ inputs.project }}/
          exclude_assets: ""
          destination_dir: docs/libraries/cheetah-lib-shared-dotnet/_source/articles/${{inputs.project}}/v${{ steps.get-version.outputs.version }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          exclude_assets: './public/_source/articles/${{ inputs.project }}/'


      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.READ_PACKAGE_PAT }}
          repository: trifork/cheetah-artifact-documentation
          event-type: docs-update
          client-payload: '{"version": "${{ steps.get-version.outputs.version }}, repoName": "${{ github.repository }}"}'
