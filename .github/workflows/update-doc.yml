name: update documentation

on:
  push:
    branches:
      - main

jobs:
  check-for-changes:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - { name: Cheetah.Kafka, toc_file: ".github/toc-files/articles/toc.yml" }
          - { name: Cheetah.OpenSearch, toc_file: ".github/toc-files/articles/toc.yml" }
          - { name: Cheetah.SchemaRegistry, toc_file: ".github/toc-files/articles/toc.yml" }
          - { name: Cheetah.Kafka, toc_file: ".github/toc-files/api/toc.yml" }
          - { name: Cheetah.OpenSearch, toc_file: ".github/toc-files/api/toc.yml" }
        #  - { name: Cheetah.Auth, toc_file: ".github/toc-files/api/toc.yml" }
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if files have changed
        id: changed-files
        uses: tj-actions/changed-files@v45
        with: 
          dir_names: "true"
          files: |
            docs/articles/${{ matrix.project.name }}/*.md
            docs/api/${{ matrix.project.name }}/*.md

      - name: Set output variable
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: |
          echo "changed=true" >> $GITHUB_ENV
          echo "changed_project=${{ matrix.project.name }}" >> $GITHUB_ENV
          echo "changed_file=${{ matrix.project.toc_file }}" >> $GITHUB_ENV

      - name: Update documentation
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        uses: kasttrifork/cheetah-lib-shared-dotnet/.github/actions/docfx-publish@main
        with:
          project: ${{ matrix.project.name }}
          file: ${{ matrix.project.toc_file }}

    outputs:
      changed: ${{ steps.changed-files.outputs.any_changed }}
      project: ${{ matrix.project.name }}
      file: ${{ matrix.project.toc_file }}

  update-doc:
    if: ${{ needs.check-for-changes.outputs.changed == 'true' }}
    runs-on: ubuntu-latest
    needs: check-for-changes
    steps:
      - name:
        if: ${{ needs.check-for-changes.outputs.changed == 'true' }}
        run: |
          echo "Updating documentation for ${{ needs.check-for-changes.outputs.project }}"
          echo "File: ${{ needs.check-for-changes.outputs.file }}"
          echo "Changed: ${{ needs.check-for-changes.outputs.changed }}"
    
    #uses: kasttrifork/cheetah-lib-shared-dotnet/.github/workflows/docfx-publish.yml@main
    #with:
    #  project: ${{ needs.check-for-changes.outputs.project }}
    #  file: ${{ needs.check-for-changes.outputs.file }}