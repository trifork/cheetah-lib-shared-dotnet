name: Create and publish Cheetah.shared nuget package

on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches:
      - main

env:
  SOLUTION_PATH: ./Cheetah.WebApi.Shared.sln

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_PAT }} # we need this, as GITHUB_TOKEN only have permission to its own repo
        # OpenSearch is required for integration tests
      - name: Run OpenSearch # This reuses the options from cheetah-development-infrastructure OS container
        run: docker run
          --detach
          -p 9200:9200
          -e cluster.name=opensearch-cluster
          -e node.name=os01
          -e discovery.type=single-node
          -e bootstrap.memory_lock=true
          -e "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
          -e DISABLE_INSTALL_DEMO_CONFIG=false
          -e network.host=0.0.0.0
          -v $(pwd)/.github/workflows/opensearch_security.config.yml:/usr/share/opensearch/config/opensearch-security/config.yml
          -e plugins.security.ssl.http.enabled=false
          opensearchproject/opensearch:2.6.0
      - name: Run OAuthSimulator
        run: docker run
          --detach
          -p 80:80
          -e "OAuth__Mode=Asymmetric"
          -e "Simulator__DefaultRole=admin"
          ghcr.io/trifork/cheetah-oauth-simulator:latest
      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 opensearch" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 cheetahoauthsimulator" | sudo tee -a /etc/hosts

      - name: "Setup .Net Core SDK 6.0"
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0"
      - name: "Dotnet build"
        run: dotnet build --configuration Release ${{ env.SOLUTION_PATH}}
      - name: "Test"
        run: dotnet test --no-restore --verbosity normal --filter 'FullyQualifiedName!~Integration' ${{ env.SOLUTION_PATH}}
      - name: "Test Integration"
        run: dotnet test --no-restore --verbosity normal --filter 'FullyQualifiedName~Integration' ${{ env.SOLUTION_PATH}}
