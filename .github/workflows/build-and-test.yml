name: Test Cheetah.Shared NuGet Package

on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '0 3 * * *'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  dotnet-test:
    name: Dotnet Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dotnet test
        run: dotnet test --logger trx --filter 'TestType!=IntegrationTests' /nowarn:cs1591

      - name: Display test report
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: Tests
          path: src/Cheetah.WebApi.Shared.Test/TestResults/*.trx
          reporter: dotnet-trx

  test-opensearch:
    name: Test OpenSearch
    runs-on: ubuntu-latest
    needs: dotnet-test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup integration test
        uses: ./.github/actions/setup-integration-test
        with:
          PAT: ${{ secrets.PAT }}

      - name: Start development infrastructure
        working-directory: integrationtests/
        run: docker compose --profile opensearch --profile oauth up -d --build

      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 opensearch" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 cheetahoauthsimulator" | sudo tee -a /etc/hosts

      - name: Wait for opensearch, the slowest component
        uses: nick-fields/retry@v2.8.3
        with:
          timeout_minutes: 3
          max_attempts: 25
          retry_wait_seconds: 5
          warning_on_retry: false
          command: 'curl -sS -X GET -H "Content-Type: application/json" http://admin:admin@opensearch:9200/_cat/indices'

      - name: Test OpenSearch
        run: dotnet test --logger trx --verbosity normal --filter 'Category=OpenSearch'

      - name: Display test report
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: Tests
          path: src/Cheetah.WebApi.Shared.Test/TestResults/*.trx
          reporter: dotnet-trx

  test-kafka-auth:
    name: Test Kafka Auth
    runs-on: ubuntu-latest
    needs: dotnet-test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup integration test
        uses: ./.github/actions/setup-integration-test
        with:
          PAT: ${{ secrets.PAT }}

      - name: Start development infrastructure
        working-directory: integrationtests/
        run: docker compose --profile kafka --profile oauth up -d --build

      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 kafka" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 cheetahoauthsimulator" | sudo tee -a /etc/hosts

      - name: Test Kafka auth
        run: dotnet test --logger trx --verbosity normal --filter 'Category=Kafka'

      - name: Display test report
        uses: dorny/test-reporter@v1.6.0
        if: always()
        with:
          name: Tests
          path: src/Cheetah.WebApi.Shared.Test/TestResults/*.trx
          reporter: dotnet-trx

  component-test:
    name: Run Component Tests
    runs-on: ubuntu-latest
    needs: dotnet-test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup integration test
        uses: ./.github/actions/setup-integration-test
        with:
          PAT: ${{ secrets.PAT }}

      - name: Start development infrastructure
        working-directory: integrationtests/
        run: docker compose --profile kafka --profile oauth --profile opensearch --profile schemaregistry up -d --build

      - name: Run component tests
        working-directory: src/Cheetah.ComponentTest.XUnit
        run: docker compose -f docker-compose.yaml up --abort-on-container-exit
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}