name: "Publish nuget package"
description: "Will only push if the VersionPrefix is not already published."

inputs:
  project_filepath:
    description: "file path to .csproj file"
    required: true
  dotnet-version:
    description: "6.0 or 7.x"
    default: "6.0"
    required: true
  package_name:
    description: "Package name."
    required: true
  github_token:
    description: ""
    required: true

runs:
  using: composite
  steps:
    - name: "Checkout"
      uses: actions/checkout@v3

    - name: "Setup .Net Core SDK"
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: "create output-folder"
      shell: bash
      run: mkdir -p output

    # requires <VersionPrefix> in csproj
    - name: Extract NuGet package version
      id: get_version
      shell: bash
      run: |
        VERSION=$(cat ${{ inputs.project_filepath }} | grep "<VersionPrefix>" | sed 's/<\/\?VersionPrefix>//g' | tr -d "[:space:]")
        echo "Extracted NuGet package version: $VERSION"
        echo "NUGET_PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Check if package with same version exists
      id: check_existing_package
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        PACKAGE_EXISTS=$(curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/packages/nuget?package_name=${{ inputs.package_name }}" | jq ".[].version" | grep -F -x -c "${{ env.NUGET_PACKAGE_VERSION }}")
        echo "Number of matching packages: $PACKAGE_EXISTS"
        if [ $PACKAGE_EXISTS -eq 0 ]; then
          echo "No existing package with the same version found."
          echo "PACKAGE_EXISTS=false" >> $GITHUB_ENV
        else
          echo "An existing package with the same version found."
          echo "PACKAGE_EXISTS=true" >> $GITHUB_ENV
        fi

      # todo: main check
    - name: "package with version"
      shell: bash
      if: github.ref == 'refs/heads/main'
      run: dotnet pack -o output /p:PackageVersion="${{ env.NUGET_PACKAGE_VERSION }}" -c Release ${{ inputs.project_filepath }}

    - name: "package with suffix"
      shell: bash
      if: github.ref != 'refs/heads/main'
      run: dotnet pack --version-suffix ${{ github.run_number }} -o output -c Release ${{ inputs.project_filepath }}

    - name: "Publish to github packages"
      if: env.PACKAGE_EXISTS == 'false'
      shell: bash
      run: dotnet nuget push output/${{ inputs.package_name }}*.nupkg --skip-duplicate --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ inputs.github_token }}

  # todo: push tag with  package_name+ version?
