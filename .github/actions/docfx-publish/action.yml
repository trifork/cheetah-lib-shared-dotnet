name: 'Publish DocFX'
description: 'A GitHub Action to publish DocFX documentation'
inputs:
  project:
    description: 'The project name'
    required: true
    default: ''
  file:
    description: 'The toc file path'
    required: true
    default: ''
  gh_token:
    description: 'The GitHub token'
    required: true
    default: ''

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4

      #- name: Get csproj filepath
      #  id: get-csproj-filepath
      #  uses: kasttrifork/cheetah-infrastructure-utils/.github/actions/get-from-map@main
      #  with:
      #    file-path: ./.github/csproj-filepaths.yaml
      #    key: ${{inputs.project}}
    - name: Get csproj filepath
      id: get-csproj-filepath
      shell: bash
      run: echo "value=$(grep -Po '(?<=${{ inputs.project }}:).*' ./.github/csproj-filepaths.yaml | awk '{$1=$1};1')" >> $GITHUB_OUTPUT

    - name: Get project version
      id: get-version
      uses: trifork/cheetah-infrastructure-utils-workflows/.github/actions/versioning/get-version@main
      with:
        file-path: ${{ steps.get-csproj-filepath.outputs.value }}
        prefix: "<VersionPrefix>"
        suffix: "</VersionPrefix>"

    - name: Update toc file with new version v${{ steps.get-version.outputs.version }}
      id: update-toc
      uses: kasttrifork/cheetah-lib-shared-dotnet/.github/actions/update-toc@main
      with:
        toc-file: ${{ inputs.file }}
        version: ${{ steps.get-version.outputs.version }}
        repo-name: ${{ inputs.project }}

    - name: Commit changes to toc.yml
      if: ${{ steps.update-toc.outputs.updated }} == 'true'
      uses: EndBug/add-and-commit@v9
      with:
        commit: -a
        message: "Update toc file with new version v${{ steps.get-version.outputs.version }}"

    - uses: actions/cache@v4
      if: ${{ steps.update-toc.outputs.updated }} == 'true'
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          ${{ runner.os }}-nuget-

    - name: dotnet build
      if: ${{ steps.update-toc.outputs.updated }} == 'true'
      shell: bash
      run: |
        dotnet build --verbosity minimal --configuration Release /nowarn:cs1591
    #- name: Build docfx
    #  uses: trifork/cheetah-infrastructure-utils/.github/actions/docfx/docfx-build@main
    - name: Build docfx
      if: ${{ steps.update-toc.outputs.updated }} == 'true'
      shell: bash
      run: |
        dotnet tool update -g docfx 
        docfx --warningsAsErrors docs/docfx.json

    - name: Create public/
      if: ${{ steps.update-toc.outputs.updated }} == 'true'
      shell: bash
      run: |
        mkdir -p public/
        mv docs/ public/_source
        mv src/ public/src
        mv .gitignore public/.gitignore
        rm public/_source/api/.gitignore
        rm public/_source/articles/toc.yml
        mv ${{ inputs.file }} public/_source/articles/
        mv _site/ public/docs

      #TODO Refactor to only deploy once and only if that project has been updated
    - name: Deploy to GitHub Pages for project ${{ inputs.project }}
      if: ${{ env.updated }} == true
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ inputs.gh_token }}
        publish_dir: ./public/_source/articles/${{ inputs.project }}/
        exclude_assets: ""
        destination_dir: _source/articles/${{inputs.project}}/v${{ steps.get-version.outputs.version }}
      
      # Second deployment to latest folder - refactor to only deploy once
    #- name: Deploy to GitHub Pages for project ${{ inputs.project }} to latest folder
    #  uses: peaceiris/actions-gh-pages@v4
    #  with:
    #    github_token: ${{ inputs.gh_token }}
    #    publish_dir: ./public/_source/articles/${{ inputs.project }}/
    #    exclude_assets: ""
    #    destination_dir: _source/articles/${ {inputs.project }}/latest/

      # Third deployment to root folder - refactor to only deploy once
    - name: Deploy to GitHub Pages
      if: ${{ env.updated }} == true
      id: deployment
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ inputs.gh_token }}
        publish_dir: ./public
        exclude_assets: "./public/_source/articles/"
        keep_files: true

      # Fourth deployment to latest folder - refactor to only deploy once
    - name: Deploy to GitHub Pages for project ${{inputs.project}} to latest folder
      if: ${{ env.updated }} == true
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ inputs.gh_token }}
        publish_dir: ./public/_source/articles/toc.yml
        destination_dir: _source/articles/
        keep_files: true

    # - name: Repository Dispatch
    #   uses: peter-evans/repository-dispatch@v3
    #  with:
      #   token: ${{ secrets.READ_PACKAGE_PAT }}
      #  repository: trifork/cheetah-artifact-documentation
        # event-type: docs-update
        #client-payload: '{"version": "${{ steps.get-version.outputs.version }}, repoName": "${{ github.repository }}"}'
